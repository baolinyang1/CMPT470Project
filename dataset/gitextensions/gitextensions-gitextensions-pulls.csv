PR ID,Title,Description,State,Created At,Closed At,Merged At,Labels,Base Branch,Head Branch,Files Changed,Lines Added,Lines Deleted,Commits,Comments,Review Comments,Reviewers,Review States,Draft Status,Linked Issues
12201,Git config,"Draft because based on #12185

Fixes #4389

## Proposed changes

- Remove `IConfigFileSettings` including its implementation so that GE does not rewrite git config files any longer
- Instead, use ""git config"" commands (with caching) for reading and writing git config settings
  using `IGitModule`:
  - `GetEffectiveSetting`
  - `GetEffectiveSetting<T>`
  - `GetSettings(string setting)` (for multi-value settings, kept existing sub-optimal name)
  - `SetSetting`
  - `UnsetSetting`
- Provide new API in `IGitModule`:
  - `GetAllLocalSettings`
  - `InvalidateGitSettings`
  - `RemoveConfigSection`
- Remove API:
  - from `IGitModule`:
    - `GetSetting` (kept, but declared ""deprecated"", redirected to `GetEffectiveSetting`)
    - `GetSetting<T>` (unused)
    - `GetGitSetting`
    - `GetEffectiveGitSetting`
    - `EffectiveConfigFile`
    - `LocalConfigFile`
  - from`IGitRef`
    - `GetTrackingRemote` & `GetMergeWith` (redundant to existing properties)

(Review commit by commit is recommended.)

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests (with adaptations)
- TODO: tests with WSL

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2025-02-17T21:02:50Z,,,,master,git_config,30,1012,594,30,0,0,,,True,https://api.github.com/repos/gitextensions/gitextensions/issues/12201
12200,feat: Display autostash in RevisionGrid,"## Proposed changes

- Create a `GitRevision` from information about autostash in `.git/rebase-merge` folder  

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/3597b92f-1eb3-44db-ab21-8a2c31ec66da)

### After

![image](https://github.com/user-attachments/assets/219137dc-d5d9-4616-9289-5d500aa4bf06)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2025-02-17T20:44:15Z,,,,master,feature/autostash,1,35,0,2,0,1,"gerhardol, RussKie, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12200
12198,Handle exceptions,"Fixes ""unhandled exception"" popup (repeatedly seen on `OperationCanceledException` in test execution)

## Proposed changes

- Wrap handler code with `TaskManager.HandleExceptions(..., Application.OnThreadException)`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- run the tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-02-15T23:11:10Z,2025-02-16T12:21:54Z,2025-02-16T12:21:54Z,,master,fix/handle_exceptions,6,54,45,2,0,1,"copilot-pull-request-reviewer[bot], RussKie, gerhardol","COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12198
12197,refactor: convert to .net6 argument null check syntax,"
## Test methodology <!-- How did you ensure quality? -->

- Manual (normally nothing changed)

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-02-15T14:48:17Z,2025-02-15T16:55:39Z,2025-02-15T16:55:39Z,,master,refactor/null_check,30,44,177,1,0,0,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12197
12196,"fix(diff): fix switch back to ""Patch"" diff appearence","Fixes #12193

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-02-15T14:36:21Z,2025-02-16T12:22:36Z,2025-02-16T12:22:36Z,,master,fix/diff_switch_to_patch,1,1,1,1,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12196
12194,fix: prevent double call to SetGitModule on repo change,"`SetGitModule` is already call in `StartToolStripMenuItem.repositoryHistoryUIService_GitModuleChanged()` registered with `FormBrowse.cs@770`:
`fileToolStripMenuItem.GitModuleChanged += new System.EventHandler<GitModuleEventArgs>(SetGitModule);`


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-02-14T13:07:17Z,2025-02-17T10:18:38Z,2025-02-17T10:18:38Z,,master,fix/prevent_double_setgitmodule_call,1,0,7,1,1,2,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12194
12192,feat(BackgroundFetchPlugin): Add option to fetch on repo opening,"Fixes #6457

Note: the fetching is not ""immediate"" because the background fetch is waiting that no git process is running but should be triggered quickly enough so that user hardly noticed.

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

![image](https://github.com/user-attachments/assets/64d47e01-f995-4a65-907f-14355a16f480)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build c16f47d4fbe4a8c415888267a013405c6b99465c (Dirty)
- Git 2.47.0.windows.1
- Microsoft Windows NT 10.0.26100.0
- .NET 8.0.12
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 8.0.12 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 9.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2025-02-13T17:38:41Z,,,,master,feat/backgroundfetch_fetchOnRepoOpening,2,99,82,3,1,2,"PhilipMilestone, PhilipMilestone, RussKie, pmiossec, pmiossec, mstv, pmiossec, gerhardol, PhilipMilestone, pmiossec","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12192
12189, feat: bold-bold ansi terminal colors,"## Proposed changes

- fix: MakeBackgroundDarkerBy for colors instead of known names
To simplify a few changes

- feat: bold-bold ansi terminal colors

Some terminals allow bold-bold colors.
For instance Difftastic emits this in dark mode.

Handle dark mode for ansi default text color.

Add a way to generate AnsiTerminalColors.diff,
to display the terminal colors.
(Requires commenting out code.)

Note: I ended up proposing another solution for dark mode other than bold-bold.

## Screenshots <!-- Remove this section if PR does not change UI -->

There are no diff for normal output, but the bold-bold is displayed and the ""test file"" is updated.
The bold-bold were not visible before

### Before

![image](https://github.com/user-attachments/assets/bb3d64c4-f9f3-4dd0-8f87-8bc937cdb1d8)

![image](https://github.com/user-attachments/assets/ecb4ca31-6229-4a63-b0fe-e6b662654fc6)

### After

![image](https://github.com/user-attachments/assets/a194cad3-37cb-4c95-9621-7117d8f2a438)

## Test methodology <!-- How did you ensure quality? -->

Added tests, also for existing

## Merge strategy

- Rebase merge (PR submitter must change the commit message for the last commit).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2025-02-09T22:11:16Z,,,,master,feature/ansi-bold-bold,7,277,55,2,2,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12189
12185,fix(git config settings pages): Add system-wide settings,"Fixes #10914
Fixes #11764

## Proposed changes

- Get git settings using `git config list` in order to correctly display effective settings
- Display effective settings read-only (in order to make users explicitly decide in which scope to configure git)
- Display system-wide settings (read-only)
- Add advanced git config ""merge.autostash""
- Several refactorings:
  - Extract `IPersistentConfigValueStore` from `IConfigFileSettings`
  - Remove `SettingsSourceExtension.ByPath`
  - Rename to `GitConfigSettingsSet` and to `GitConfigBaseSettingsPage`
  - Add `GitConfig/DistributedSettingsSet.Save`
  - Extract `GitEncodingSettings` from `ConfigFileSettings`

Review commit by commit is recommended.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/fd130bb1-d168-4d43-8d2e-910ffbac6cb1)

### After

![image](https://github.com/user-attachments/assets/342b9208-d3db-46c1-baef-6e293d263715)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2025-02-08T22:51:35Z,,,,master,fix/i10914_system_config,30,775,334,23,5,1,"pmiossec, pmiossec, mstv, RussKie, mstv, mstv, mstv, mstv, RussKie, pmiossec","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12185
12184,fix(reset):Fix reset unstaged changes of a new file already partly staged,"
Fixes #11391

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

<!-- TODO -->

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 9e9082cc28af498ef4d3ce5ce314a7a53b0d626e (Dirty)
- Git 2.47.0.windows.1
- Microsoft Windows NT 10.0.26100.0
- .NET 8.0.12
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 8.0.12 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 9.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2025-02-07T17:57:48Z,,,,master,fix_reset_staged_new_file,1,1,1,1,4,1,RussKie,COMMENTED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12184
12180,feat: Add SelectInLeftPanel,"## Proposed changes

`RevisionGridControl`:
- Add context menu item ""Select in left panel"" for branches and tags

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before | After

![image](https://github.com/user-attachments/assets/08e34091-049e-4f85-b3ad-e4f3a58526f5)   ![image](https://github.com/user-attachments/assets/2682aa08-d13c-4ef3-b5e8-8c1267640ea8)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-02-03T22:11:30Z,2025-02-10T20:50:52Z,2025-02-10T20:50:52Z,,master,feature/select_in_rot,5,67,2,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12180
12179,fix(Output History Panel): Hide with Left Panel,"Fixes regression from adding a second SplitControl

## Proposed changes

`OutputHistoryPanelController`:
- Hide Output History Panel with Left Panel (- 
- Show Left Panel on show of Output History Panel

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/b33ff6bc-eb06-4d2d-8c64-6d6c060fc16b)

### After

![image](https://github.com/user-attachments/assets/f712b423-f7da-465d-bda7-ae8e8ad27162)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-02-03T22:00:25Z,2025-02-10T20:50:04Z,2025-02-10T20:50:04Z,,master,fix/output_panel,2,12,0,1,1,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12179
12175,feat: Clickable links in console output,"## Proposed changes

Whe conbemu is not used for longrunning commands like git-fetch
Links were previously detected but not clickable.

Similar handling in the output pane recently added and in CommitInfo (where also Git links are handled and translated to internal links).

## Screenshots <!-- Remove this section if PR does not change UI -->

### After
The  ""hand"" appears as before, but something now happens when the link is clicked.

With dark mode and the background set to the theme EditorPanel, by default it is Control.
![image](https://github.com/user-attachments/assets/cbfbd1dc-17d5-4c03-94cf-fe71410a87d6)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-29T21:29:07Z,2025-01-30T20:41:59Z,2025-01-30T20:41:59Z,,master,feature/consoleoutput-links,1,13,0,2,0,0,"RussKie, pmiossec, mstv, mstv","APPROVED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12175
12174,fix(FormCommit): Improve selection handling,"## Proposed changes

FormCommit:
- Handle clicks in empty area of Unstaged & Staged lists
- Clear displayed diff if focused Unstaged / Staged list is empty

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/f4978662-ceb0-4690-adc4-2e5c6d5c58d9)

### After

![image](https://github.com/user-attachments/assets/e85f9548-9538-418f-8874-0862d71a5f1a)

### Unchanged

![image](https://github.com/user-attachments/assets/7b84a20e-6761-4f7a-af9a-2dacd4c2d6a9)

## Test methodology <!-- How did you ensure quality? -->

- manual
- existing tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-29T17:55:43Z,2025-01-30T19:52:14Z,2025-01-30T19:52:14Z,,master,fix/form_commit_selection,1,17,32,2,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12174
12171,fix(ShowProcessDialogPasswordInput): Default to false,"Fixes #12170

## Proposed changes

- `AppSettings.ShowProcessDialogPasswordInput`: Default to `false` (since the input box is automatically shown if an output line is not terminated with LF within a timeout)

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- added to testcase

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-28T18:58:00Z,2025-01-29T18:50:32Z,2025-01-29T18:50:32Z,,release/5.0,fix/input_box,2,2,1,1,1,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12171
12169,feat(graph): Ensure new lane color is different,"## Proposed changes

- `LaneInfo`: Ensure new lane color is different from adjacent lanes
- `RevisionGraph`: provide `segmentToTheLeft` and `segmentToTheRight`
- `RevisionGraphLaneColor`: ensure that there are configured at least 4 graph colors
- declare graph helper classes as `sealed`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before | After

![image](https://github.com/user-attachments/assets/dea01706-d296-4a4f-90aa-ec2e3919f06c)   ![image](https://github.com/user-attachments/assets/a4df435e-c850-4ba9-ba48-0c800b358685)

![image](https://github.com/user-attachments/assets/0ae2e8aa-655c-4917-8c60-2c3e7422b4e7)   ![image](https://github.com/user-attachments/assets/35813394-6d4b-4b7b-b9f4-04887d14b421)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-27T22:27:08Z,2025-02-13T22:38:37Z,2025-02-13T22:38:37Z,,master,feat/lane_color,6,60,30,1,0,1,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12169
12167,feat: add Light+ theme,"## Proposed changes

The default appearance is unchanged, only seen in the added theme.
The primary reason for this PR is though to allow adjustments for dark mode.
Review commit by commit is preferred, some of the changes are related.

- cleanup unused theme color Graph
Note: bright theme could probably be removed, changes are not noticeable

- themeable editor and linenumber
Updated ICSharp interface to allow themeing from Git Extensions

- style: Themeable panel backgrounds

Themeable background panels (including grid view) in the main interface.
The GitExtensionsDialog are updated too but not the old style
GitExtensionsForm.
The default visual appearance is unchanged.

- add Light+ theme

Slightly darker panel backgrounds and a visible linenumber panel
This is inspired by the VS Code theme Light+
The panels in the main interface and some (newer style) forms
are set to be slightly darker, to minimize the extremely white GE interface.
The editor background is unchanged as in VS Code.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

default, unchanged
![image](https://github.com/user-attachments/assets/b02a77d8-dcd8-4832-92fb-5410168d91b7)

### After

![image](https://github.com/user-attachments/assets/5178ee03-e3fa-46a7-b6ac-211bd09750a2)

~~console output~~
~~An alternative is to use SystemColors.Control, also OK in dark mode~~
~~![image](https://github.com/user-attachments/assets/ce95c769-c042-481f-af51-377e73f62acd)~~

## Test methodology <!-- How did you ensure quality? -->

Visual

## Merge strategy

- Rebase merge (PR submitter must change the commit message for the last commit).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2025-01-26T11:06:21Z,,,,master,feature/light-plus-theme,24,86,66,7,1,2,"mstv, gerhardol, gerhardol, mstv, gerhardol, mstv, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12167
12166,fix: bold+italic for current left panel node,"## Proposed changes

Current submodule and branch can be hard to see, especially for upcoming dark mode.
This PR adds italics in addition to bold to the current node.
(selected is still underlined and backcolor for infocus unchanged)

Colors could be used too, but that need to be themable too.
I would prefer to not change italics in dark mode, that is unexpected type of change.

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/user-attachments/assets/e7630003-527c-4593-ab12-82eff034d79b)

![image](https://github.com/user-attachments/assets/dc35529f-ec04-4df9-b05e-8634ceb23b38)

For dark mode

![image](https://github.com/user-attachments/assets/840e0094-106d-4ca2-a66f-9b3aa9670643)

![image](https://github.com/user-attachments/assets/f332c6bd-5ac5-4508-a255-04c9bb2b0d3c)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2025-01-26T10:11:22Z,,,,master,feature/leftpanel-selected-italics,2,2,2,1,1,1,mstv,APPROVED,True,https://api.github.com/repos/gitextensions/gitextensions/issues/12166
12165,"fix(bare repo): Skip ""git status"" and ""git stash list""","## Proposed changes

- `GitStatusMonitor`: Deactivate if bare repo
- `RevisionGridControl`: Skip `GetStashes` if bare repo

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/c4f01806-fe5c-4b58-9f6e-848f2acb0adf)

![image](https://github.com/user-attachments/assets/e957b05f-a395-4c00-9b7d-036e4e96babf)

### After

![image](https://github.com/user-attachments/assets/d205efad-7a1c-4262-b562-5e9155834c66)

no error messages in Output tab

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-25T22:19:30Z,2025-01-26T16:29:47Z,2025-01-26T16:29:47Z,,master,fix/bare_repo,2,2,2,1,0,0,"RussKie, gerhardol, pmiossec","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12165
12160,refactor(BlameControl): Use clearer interface,"## Proposed changes

- chore: Fixup typo in namespace `GitUI.CommandsDialogs`
- refactor(`RevisionDiffControl`): Use simpler types
- refactor(`BlameControl`): Clearly request `PathToBlame` by adding a dedicated interface `IRevisionGridFileUpdate` in favor of `IRevisionGridUpdate`

(Review commit by commit recommended.)

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests
- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-23T18:29:16Z,2025-01-30T19:38:20Z,2025-01-30T19:38:19Z,,master,fix/refactor_blame,18,130,110,4,0,2,"gerhardol, gerhardol, mstv, gerhardol","COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12160
12158,fix: Improve blame loading and other minor,"Fixes
- very occasionally not loaded blame
- disappearing context menu item ""Show differences for all parents in browse dialog""

## Proposed changes

- `BlameControl`: Do not cancel loading if nothing changed; combine cancellation tokens; use safe init values for `_lastTooltipX/Y`
- `AsyncLoader`: Make clearer & enable `nullable`
- `RevisionDiffControl`: Convert `IEnumerable` to array in order to avoid possible multiple evaluation
- `FileStatusList`: Avoid one-way menu item ""Show differences for all parents in browse dialog""

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

menu item disappeared when unchecked

### After

![image](https://github.com/user-attachments/assets/76cf5e49-0a66-4a1b-baac-a8248b818211)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-22T20:00:34Z,2025-01-23T18:19:05Z,2025-01-23T18:19:05Z,,master,fix/blame_loading,6,39,46,4,0,1,"gerhardol, RussKie","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12158
12156,feat(Repo Title): Append root repo to description of submodule,"Implements
https://github.com/gitextensions/gitextensions/pull/12144#discussion_r1922842814

## Proposed changes

`RepositoryDescriptionProvider.Get`:
- no change for normal repos
- for submodule: append description / name of its root superproject
- affects GE title bar and recent `.gitext` files for Window Jump List

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/ad8a8119-54f1-4bc2-8c3d-bbd9a54cb388)

![image](https://github.com/user-attachments/assets/de05620d-9ac5-4943-ae88-f8ed16c4caa5)

### After

![image](https://github.com/user-attachments/assets/cf94faf6-4b1f-4013-9c55-4c60f99ed83b)

![image](https://github.com/user-attachments/assets/20d5c6c7-7531-4008-aefc-2cb152328e98)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2025-01-21T20:57:01Z,,,,master,feature/superproject,2,143,20,8,7,2,"RussKie, RussKie, gerhardol, mstv, gerhardol, RussKie, mstv, pmiossec, gerhardol, mstv, gerhardol, mstv, gerhardol, mstv, gerhardol, mstv, gerhardol, copilot-pull-request-reviewer[bot], gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12156
12154,fix(RepoStateMixed.png): Align with other repo state icons,"## Proposed changes

`RepoStateMixed.png`:
All other icons are aligned to the top. So, do for this icon, too. 

## Screenshots

### Before | After

![image](https://github.com/user-attachments/assets/a789cf1a-c034-4ff3-9118-188b764c5a25)

### After

![image](https://github.com/user-attachments/assets/08de373c-271c-4f26-bfd4-f705b0460d36)

## Test methodology <!-- How did you ensure quality? -->

- review

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-20T21:45:45Z,2025-01-20T22:04:40Z,2025-01-20T22:04:40Z,,master,fix/icon,1,0,0,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12154
12152,style: Darker panel background,"## Proposed changes

Change to make the GE default theme changes the panel backgrounds not so extremely bright, more like Visual Studio Code ""Modern Light"" theme.
The GitExtensionsDialog are updated too but not the old style GitExtensionsForm.
The grid view and editors are unchanged.

The line number panel is made darker to contrast to the text and panels.

The dark mode look very dull without changing the panel colors, this is a preparation to align looks.

PR is needed for ICSharp too

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/aa6fe5c7-ace2-4e91-84e6-44b5f492b73a)

<!-- TODO -->

### After

![image](https://github.com/user-attachments/assets/c88bf5e1-b1ca-492e-a5f7-412fc5db94ab)

VS Code inspiration

![image](https://github.com/user-attachments/assets/2bfbbde2-f98b-41b1-bf3b-1ac1f6a4bca5)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Test environment(s) <!-- Remove any that don't apply -->

Win 11 24H2

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-19T22:39:49Z,2025-01-26T15:05:04Z,,,master,feature/darker-panels,9,22,7,1,2,1,RussKie,COMMENTED,True,https://api.github.com/repos/gitextensions/gitextensions/issues/12152
12151,build: Debug for ICSharp,"## Proposed changes

If the main app is built with Debug, also build ICSharp in Debug. No change for Release.

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-19T22:07:25Z,2025-01-20T22:31:57Z,2025-01-20T22:31:57Z,,master,feature/icsharp-debug,1,2,2,1,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12151
12150,"fix: Remove TreeView ""explorer"" style","## Proposed changes

Remove the native Win override to use ""explorer"" theme, part of #4491.
This seem to affect the TreeView selected item.
(ListView already changed).

Note: If this is not merged, the winow theme must be set to ""DarkMode_Explorer"" in dark mode.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/03f52a0a-fca7-46a4-b1b1-bf8c9c2a2985)

Unchanged
Not in focus
![image](https://github.com/user-attachments/assets/44dfa663-0c62-4dfe-a350-1a02a62746f3)

![image](https://github.com/user-attachments/assets/2fab855f-584c-42e9-8c3f-52e9927eea35)

with #12116 
![image](https://github.com/user-attachments/assets/f771c593-e155-4f46-8723-d84afde6edc3)
![image](https://github.com/user-attachments/assets/f170a99a-9a40-4e6d-9fb1-7281d50a4366)

### After

![image](https://github.com/user-attachments/assets/9c230bb3-5515-457e-94e3-4ce63b297357)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2025-01-19T12:52:00Z,,,,master,feature/treeview-selection,2,0,16,1,1,1,mstv,COMMENTED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12150
12149,FileStatusList: Add toolbar and actions on folders,"## Proposed changes

`RevisionDiffControl` if folder selected:
- Display names of contained items (with relative paths)
- Enable actions on contained items

`FileStatusList`:
- Add toolbar
- Align git-grep and filter boxes

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/1a0be075-2c31-44dd-91bc-8cd76acbfc33)

![image](https://github.com/user-attachments/assets/326c75ca-04f8-43ab-bc8a-b30e18160e4d)

### After

![image](https://github.com/user-attachments/assets/be029b54-8a7a-49d2-8105-87bd9f9fcfcf)

![image](https://github.com/user-attachments/assets/3fe67693-0bbc-40fe-95c0-ebc7e91d90a3)

![image](https://github.com/user-attachments/assets/94596cfa-7812-40fb-8fe8-4b61688c4058)

## Test methodology <!-- How did you ensure quality? -->

- manual
- extended tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2025-01-18T11:44:12Z,,,status: ready,master,feature/filestatuslist_toolbar,30,1782,1119,12,8,2,"gerhardol, mstv, gerhardol, gerhardol, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12149
12145,fix: Align a file status icon with other icons,"## Proposed changes

- Align file status icon ""FileStatusModifiedUnequal.png"" with others

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before | After

![image](https://github.com/user-attachments/assets/032c43d9-1690-4b6a-ba31-3368135e7bc0)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-16T20:42:02Z,2025-01-16T23:01:59Z,2025-01-16T23:01:59Z,,master,fix/diff_icon,1,0,0,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12145
12144,fix(Jump List): Use unique name for recent repos,"Fixes #10845

## Proposed changes

- `WindowsJumpListManager` / `RepositoryDescriptionProvider`: Use unique name for recent repos
  descriptive name with full path appended

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/6258ee77-e229-469f-ae19-208d2bd16c3e)

with

`repo.gitext` containing
`D:\Downloads\super\submodule2\repo\`
or
`D:\Downloads\super\submodule1\repo\`

### After

![image](https://github.com/user-attachments/assets/5fc04c81-1368-4600-8081-b8629fca24ef)   ![image](https://github.com/user-attachments/assets/7470db52-ace5-4efc-9506-fa4e996050fd)

## Test methodology <!-- How did you ensure quality? -->

- manual 

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2025-01-16T20:22:33Z,,,,master,fix/recent_repos,2,33,1,2,0,1,"gerhardol, gerhardol, mstv, gerhardol, pmiossec","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12144
12143,fix(AheadBehindDataProvider): Restrict debug output,"Fixes #12005

## Proposed changes

- `AheadBehindDataProvider`: Restrict debug output to debug build and never to Output tab
(The case is properly handled. So, there is no need to bother users with this output.)

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-15T21:55:09Z,2025-01-16T19:53:01Z,2025-01-16T19:53:01Z,,master,fix/trace_output,1,1,1,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12143
12142,feat: Bring to front on drag drop of patch file(s),"## Proposed changes

Patch files can be dropped onto the RevisionGrid. But the app stays in the background.
Force the window to the front using a factored out extension method.

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-15T21:52:09Z,2025-01-16T19:52:30Z,2025-01-16T19:52:30Z,,master,feature/force_activate,3,25,14,1,0,1,"gerhardol, RussKie, RussKie","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12142
12141,test(ExecutableTests): Relax timeout for slow AppVeyor,"## Proposed changes

Several CI builds failed because the testcase execution on AppVeyor took more than 3 seconds.
Relax the regarding timer.

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-15T21:48:47Z,2025-01-16T19:48:29Z,2025-01-16T19:48:29Z,,master,fix/tests,1,1,1,1,0,0,"gerhardol, RussKie, mstv","APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12141
12140,fix: remove override highlight linenumber control,"## Proposed changes

for files without explicit highlighting

Note: I may want to have a separate color for the linenumber display, but it should be adapted for theming.
This override (including the ICSharpCode change) is required for consistent handling, so that is a separate PR.
This looks very weird in dark mode.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
![image](https://github.com/user-attachments/assets/2849b002-1383-47e6-bee5-2fc8c2e1c49d)

but explicit strategies are OK
![image](https://github.com/user-attachments/assets/048dbe3a-6628-4986-8d99-b8ac3d5d6eb9)

### After

![image](https://github.com/user-attachments/assets/30a1cacb-a872-41e0-9f0a-b74b49b1da34)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-14T21:58:59Z,2025-01-20T22:51:12Z,2025-01-20T22:51:12Z,,master,feature/line-number,2,1,5,1,0,0,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12140
12138,"feat: Avoid just ""app"" / ""repo"" / ""repository"" in app title","## Proposed changes

Some repos include submodules with additional subfolders
- ""super/submodule1/repo""
- ""super/submodule2/repo""
Currently, these submodules cannot be distinguished in GE's title bar.
Add a regex for skipping uninformative repo names ""repo"" and ""repository"".

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/6d4690df-4bcc-4ac2-b2b6-f7cfbba20b5f)

### After

![image](https://github.com/user-attachments/assets/6878f63e-ea24-403b-a92b-f72ee208ba18)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-13T22:53:10Z,2025-01-16T19:47:36Z,2025-01-16T19:47:35Z,type: discussion,master,feature/repo_title,3,12,0,2,0,0,"RussKie, RussKie","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12138
12135,TreeView: Revert horizontal scroll,"## Proposed changes

- chore(`TreeViewExtensions`): Remove namespace block
- chore(`TreeViewExtensions`): Alpha-sort methods
- refactor(`TreeView`): Extract `EnsureVerticallyVisible` and `ScrollLeftMost` from `LeftPanel.Tree.ExpandPathToSelectedNode`
- replace all occurrences of `TreeNode.EnsureVisible`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/347a6fb9-7035-45b7-ac10-5639f7132bc5)

### After

![image](https://github.com/user-attachments/assets/fb3e2728-a363-4275-a47a-f20a90f19001)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Please do not squash-merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-09T17:26:50Z,2025-01-10T23:04:19Z,2025-01-10T23:04:19Z,,master,fix/treeview_hscroll,5,91,83,3,0,1,"gerhardol, mstv, gerhardol, mstv, RussKie, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12135
12133,fix: InactiveSelectionHighlight in theme,"## Proposed changes

Change OtherColors.InactiveSelectionHighlightColor to a themeable color.
It requires tweaking for dark mode.
This PR has no change for the default theme.

## Test methodology <!-- How did you ensure quality? -->

Review/Visual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-06T22:22:44Z,2025-01-10T21:38:39Z,2025-01-10T21:38:39Z,,master,feature/inactiveselection-appcolor,7,34,26,3,1,1,"RussKie, mstv, mstv, mstv, mstv","APPROVED, APPROVED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12133
12131,fix(theme): Check for default theme,"https://github.com/gitextensions/gitextensions/pull/12125#discussion_r1903343778

## Proposed changes

The check for the default theme must use the theme name, as the theme is a separate instance.

Unneeded processing and potential issues like https://github.com/gitextensions/gitextensions/pull/12125#discussion_r1903343778

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-05T23:07:15Z,2025-01-10T20:42:48Z,2025-01-10T20:42:48Z,,master,feature/theme-compare-default,1,9,2,2,1,1,"mstv, RussKie, RussKie","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12131
12130,feat(git-grep): Show function name of matches,"## Proposed changes

- Pass argument `--show-function` to `git grep` 

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/2e239e93-b7f8-43ef-8dc4-adfd5214a4f9)

### After

first commit with
```
git config --global color.grep.matchSelected ""yellow reverse""
```
![image](https://github.com/user-attachments/assets/b378a039-370f-4841-9255-66ee652044d3)

second commit
![image](https://github.com/user-attachments/assets/373743f9-1fef-4ad1-8857-ccfec225af26)

second commit with additional git config
```
git config --global color.grep.function ""white reverse""
```
![image](https://github.com/user-attachments/assets/d9743690-4a12-421b-8487-4a800ebed45b)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-04T22:28:54Z,2025-01-07T22:34:54Z,2025-01-07T22:34:54Z,,master,feature/grep_show_function,4,31,10,4,5,2,"gerhardol, RussKie, gerhardol, mstv, gerhardol, gerhardol","COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12130
12129,fix(FileStatusList): Do not loop around with wheel,"Fixes #12128

## Proposed changes

- `SelectPreviousVisibleItem` / `SelectNextVisibleItem` shall not loop around to last / first item, e.g. when using (`Alt`+) mouse wheel

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-04T21:13:41Z,2025-01-07T22:29:56Z,2025-01-07T22:29:56Z,,master,fix/12128_loop_next_file,1,2,2,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12129
12127,fix(theme): Remove unused hook methods,"Remove the no longer working hooking preparing for #12111
This should have no effect on the invariant theme in v5.

## Proposed changes

Remove the EasyHook handling that was required for theming in GE v3.x with .NET framework v4. This solution has has not worked since GE v4, that use .NET core (.net6 and later). .net9 has experimental support for dark mode that can enable the use of dark mode.

The activation of hooking was disabled by the define SUPPORT_THEME_HOOKS. A number of unused methods was used too,
as well as the EasyHooks submodule.

The .net9 solution do not allow customization of system colors, so overrides were removed from the themes.
As the darksilver theme mostly changed system colors, it was removed.

The invariant theme system colors is required by theming to adjust colors and still requires the system colors.
The color for MenuHighlight was corrected in the invaiant theme. ButtonFace, ButtonHighlight, ButtonShadow was assumed to be duplicates of Control* colors, this was not corrrect and the handling was removed.

The workaround for dark header was removed too.

## Test methodology <!-- How did you ensure quality? -->

Visual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-04T12:09:05Z,2025-01-10T20:40:27Z,2025-01-10T20:40:27Z,,master,feature/remove-hooking,30,18,3188,1,1,1,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12127
12126,chore: Remove ImageTransparentColor,"Preparation for https://github.com/gitextensions/gitextensions/pull/12111
See #12123 for motivation.
This PR removes use of hardcoded colors so it is feasible to manually review that #12125 is handled, reducong hits to `Color`

## Proposed changes

The default Color.Transparent is used in the GE icons. When set, it was mostly Color.Magenta and that is not used by GE icons as well the few other colors.

## Test methodology <!-- How did you ensure quality? -->

Review

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-04T00:12:49Z,2025-01-10T21:00:56Z,2025-01-10T21:00:56Z,,master,feature/image-transparent-colors,11,0,46,3,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12126
12125,fix: Adapt hardcoded colors,"Preparation for https://github.com/gitextensions/gitextensions/pull/12111
Simplify review of the theme update.
This PR does not change behavior for the invariant theme.
There may be tweaks required to the theme handling in https://github.com/gitextensions/gitextensions/pull/12111 when that is actively reviewed, that review should be based on this (and similar) PRs.
Will likely be merged together with similar preparing PRs.

## Proposed changes

Prepare for theming by adopting hardcoded colors to theme colors.

Some colors set in Designer updated in the form code files. 
Requested in the theme PR, make it harder to review this PR.
https://github.com/gitextensions/gitextensions/pull/12111#discussion_r1898818038

## Test methodology <!-- How did you ensure quality? -->

Review

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-04T00:07:12Z,2025-01-10T23:00:58Z,2025-01-10T23:00:58Z,,master,feature/adapt-hardcoded-colors,30,94,61,1,5,2,"mstv, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, mstv, mstv, gerhardol, gerhardol, gerhardol, mstv, gerhardol, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12125
12124,fix: MakeBackgroundDarkerBy on current theme,"Preparation for https://github.com/gitextensions/gitextensions/pull/12111
Simplify review of the theme update.
This PR does not change behavior for the invariant theme.
There may be tweaks required to the theme handling in https://github.com/gitextensions/gitextensions/pull/12111 when that is actively reviewed, that review should be based on this (and similar) PRs.
Will likely be merged together with similar preparing PRs.

## Proposed changes

This is related to the change in #12123

## Test methodology <!-- How did you ensure quality? -->

Review

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-04T00:03:15Z,2025-01-10T21:37:03Z,2025-01-10T21:37:03Z,,master,feature/makedarkerby,2,66,67,1,0,0,"RussKie, mstv, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12124
12123,fix(theme): Do not adapt system colors,"Preparation for #12111 
Simplify review of the theme update.
This PR does not change behavior for the invariant theme.
There may be tweaks required to the theme handling in #12111 when that is actively reviewed, that review should be based on this (and similar) PRs.
Will likely be merged together with similar preparing PRs.

## Proposed changes

System colors are already adapted to the Windows theme and should not be transformed.
.net9 dark mode does not allow tweaking system colors even, but also the old solution should not have tweaked the system colors.

## Test methodology <!-- How did you ensure quality? -->

review

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-04T00:00:01Z,2025-01-10T20:44:34Z,2025-01-10T20:44:34Z,,master,feature/no-adapt-system-colors,4,5,5,1,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12123
12122,fix(FileStatusList): Avoid focus confusion on AppActivate,"Fixes regression caused by #12033

## Proposed changes

`FileStatusList`:
- Avoid setting `ActiveControl` on startup which makes `RevisionGrid` (sic!) get focused on `AppActivate`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

`FileStatusList` loses focus when switching to another app and back

### After

`FileStatusList` is still focused

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-03T19:22:13Z,2025-01-07T22:29:26Z,2025-01-07T22:29:26Z,,master,fix/activecontrol,1,5,1,2,0,0,"gerhardol, RussKie","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12122
12121,feat: Add syntax highlighting for some files,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Update of ICSharpCode.TextEditor submodule to https://github.com/gitextensions/ICSharpCode.TextEditor/pull/44

## Proposed changes

-  Add Gherkin *.feature syntax highlighting
-  Add .editorconfig as ini file
-  Add ""some"" syntax highlighting for yaml files

## Screenshots <!-- Remove this section if PR does not change UI -->

See Submodule PR

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-03T09:04:58Z,2025-01-03T09:23:26Z,2025-01-03T09:23:26Z,,master,editor_improve_syntax_highlighting,1,1,1,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12121
12120,fix(git-grep): Do not update on AddToSearchFilter,"Avoids double update of git-grep if search text matches a history entry

## Proposed changes

`FileStatusList`:
- Temporarily remove `cboFindInCommitFilesGitGrep_SelectedIndexChanged` in `AddToSearchFilter`
- Declare `sender` nullable for all event handlers

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-02T20:58:36Z,2025-01-03T18:39:12Z,2025-01-03T18:39:12Z,,master,fix/git_grep_update,1,56,48,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12120
12119,fix(WindowPositionManager): Add vertical heuristic,"Fixes #11589 for maximized FormCommit

## Proposed changes

`WindowPositionManager`:
- Add vertical heuristic analogue to existing horizontal heuristic
- Default to top left of first screen as fallback

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual
- adapt existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-02T12:13:02Z,2025-01-03T18:38:21Z,2025-01-03T18:38:21Z,status: ready,master,fix/11589_restore_window_position,4,38,14,2,2,1,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12119
12118,feat: SystemColors.Window in Dashboard theme,"## Proposed changes

Use SystemColors.Window for dashboard background theme, to be consistent with the normal app.
Some renaming to clarify color usage

Prepare the dark theme to be consistent with the app. The dark colors are not using the blue colors of the default light theme but greyish colors.
The theme does not look better, but is consistent with the .net9 dark mode (that cannot be tweaked much).


## Screenshots <!-- Remove this section if PR does not change UI -->

Recent repo background and searchbox background swapped.

![image](https://github.com/user-attachments/assets/f8dda253-5eee-488e-b6ca-91cda73c947f)
![image](https://github.com/user-attachments/assets/71af900e-fab9-4bc5-b313-bca145410532)

Alternative light theme with system colors as for the dark theme
![image](https://github.com/user-attachments/assets/bf9d9164-3ff2-4d83-b706-22acfaa4431b)

Note that the second header cannot be changed in the darktheme in .net9 (unless ListView is replaced)

![image](https://github.com/user-attachments/assets/48016695-9a4f-4558-a224-c6e95366fa50)
![image](https://github.com/user-attachments/assets/c80b554a-0b8f-40fb-addc-c76c3ad5059e)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 24H2

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-01T21:06:36Z,2025-01-03T22:52:25Z,2025-01-03T22:52:25Z,,master,feature/dashboard-theme,5,55,47,1,3,1,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12118
12117,feat: branch diff adjust icons for file status,"## Proposed changes

Modify the icons for the file status list when comparing branches with a common base, the info with feedback for where the files are changed: Unequal/B (second), A (first), Same (both changes the same).

Color is added to give some feedback of the change in addition to the (pixel) character: B (blue-violet), A (yellow) and same (green) (unequal was red already).
Some minor anti-aliasing too.

Also prepare the icons for dark mode.
Edit: also updated added/removed/copied/renamed (just modified first) (all submodule related are not changed, as before).

Related to #12111 
This could be handled in that PR too, but the intention is that that PR in itself should have a minimal of changes to the light mode.

PHYs attribute has been removed with TweakPng

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/1509182e-5f78-4a01-b9c7-5ae77fe96785)
![image](https://github.com/user-attachments/assets/da772105-f699-4de5-9918-ee7e5a6fbc14)
![image](https://github.com/user-attachments/assets/3655c2a9-da83-4dfd-8b5c-90220b5ff26e)
![image](https://github.com/user-attachments/assets/8a816bc2-3cad-4841-99ea-79c8232fd6b8)

Dark mode is not used, but the pixel char is hard to see with dark text
![image](https://github.com/user-attachments/assets/39b2c26d-3764-4725-94e6-1dd2def92d84)
![image](https://github.com/user-attachments/assets/c3e59a8d-a245-41fc-a1fe-8ffc7db2cde2)

### After

![image](https://github.com/user-attachments/assets/c8d8eb4a-989e-41d2-8435-b8782f79bb74)
![image](https://github.com/user-attachments/assets/38862652-ffe5-4169-9b30-417b3c15fdf8)
![image](https://github.com/user-attachments/assets/5f62316e-1571-4a19-8f55-33142b5869ef)
![image](https://github.com/user-attachments/assets/76242262-b672-4f3f-bd3a-85632c639f44)

![image](https://github.com/user-attachments/assets/9ec7b6d2-f725-4cc6-a18b-d6104c6bd250)
![image](https://github.com/user-attachments/assets/906604c6-e2e7-4d1e-8274-4abf09c8a580)
![image](https://github.com/user-attachments/assets/260654b5-dc70-4f6e-a0b5-dfb10f8ea9b3)

![image](https://github.com/user-attachments/assets/8c1fc795-0b18-4b7e-a5a2-94836d483a49)
![image](https://github.com/user-attachments/assets/2715e15e-dc1f-4f32-8bfa-7374af970981)
![image](https://github.com/user-attachments/assets/169bbc9f-669a-4056-960d-61d61eb78699)
![image](https://github.com/user-attachments/assets/939a5ea5-f894-471a-81c7-a878348122b0)

Slightly darker background than in the app
![image](https://github.com/user-attachments/assets/a7e17546-a470-4f3f-90dd-a109154476c1)
![image](https://github.com/user-attachments/assets/e3a7c7ae-4006-42e2-b664-d647adaa2d86)
![image](https://github.com/user-attachments/assets/4684efd5-d107-48d1-8845-aaafb5fc25fe)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Test environment(s) <!-- Remove any that don't apply -->

Win11

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-12-30T19:23:03Z,2025-01-03T22:54:22Z,2025-01-03T22:54:22Z,,master,feature/dark-mode-status-icons,20,0,0,2,3,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12117
12116,feat(`FileStatusList`): Use `TreeView`,"Fixes #1326

## Proposed changes

`FileStatusList`:
- Replace `ListView` with `TreeView`
- Implement sorting as ""group by""
- Remove `GitItemStatusFileExtensionComparer`, `GitItemStatusNameComparer`, `GitStatusListSorter`, `ImageIndexListSorter`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/21557cab-de33-4306-aaa0-35c521a3edd4)

### After

![image](https://github.com/user-attachments/assets/a5ce1706-8ff3-4710-9178-1e5fd0fcd0e4)   ![image](https://github.com/user-attachments/assets/438ddaf3-5588-4f37-ad98-50e2d119cccf)   ![image](https://github.com/user-attachments/assets/582c53eb-422a-45c9-9e57-cf9f2f4cac7e)

![image](https://github.com/user-attachments/assets/6d258fe3-6423-429c-977a-4829589e460d)   ![image](https://github.com/user-attachments/assets/cff68519-0363-4d7a-a274-50baa796dd48)   ![image](https://github.com/user-attachments/assets/c0afe131-e34b-48ed-8c27-7580ace04075)

Modes:

![image](https://github.com/user-attachments/assets/f2fc6242-5d1e-47a0-bdb9-d8c22240edf5)

### FormCommit - Before

![image](https://github.com/user-attachments/assets/185fc381-de00-4ae0-8e70-b063097487d9)

### After: flat list by name / by path / tree

![image](https://github.com/user-attachments/assets/e02042e2-5f13-4fcc-9e8b-8b58aff4e25a)   ![image](https://github.com/user-attachments/assets/f0bfde09-590e-4582-89a6-ff742b02a6b7)   ![image](https://github.com/user-attachments/assets/8b11997d-08ac-4863-a60d-9e4eb1232eb8)

Prepared for replacing ""File tree"" in a follow-up:

![image](https://github.com/user-attachments/assets/1f7937b5-84e5-4f95-ab3d-d686869534c6)

## Test methodology <!-- How did you ensure quality? -->

- existing and added tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-28T13:43:34Z,2025-02-03T21:34:53Z,2025-02-03T21:34:53Z,,master,feature/filestatuslist_tree,30,1438,989,4,25,1,"gerhardol, gerhardol, mstv, mstv, mstv, mstv, mstv, gerhardol, gerhardol, mstv, mstv, gerhardol, gerhardol, mstv, gerhardol, mstv, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, mstv, gerhardol, gerhardol, gerhardol, mstv, gerhardol, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12116
12115,refactor(`FileStatusList`): Remove `SelectedIndex` API,"## Proposed changes

Remove `SelectedIndex` API from `FileStatusList`
- Add `HasSelection`
- `SelectedGitItems` takes `IReadOnlyList`
- Replace `GetNextIndex` with `SelectNextItem`
- Use `SelectFirstVisibleItem`

## Screenshots <!-- Remove this section if PR does not change UI -->

unchanged

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-28T12:25:12Z,2025-01-03T18:41:53Z,2025-01-03T18:41:53Z,,master,refactor/filestatuslist,7,84,155,1,0,1,"gerhardol, gerhardol","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12115
12113,fix: expand last column to ListView size,"## Proposed changes

ListView table columns did not expand to the size of the table. This expands the most reasonable column like name to the size of the table.

To find the forms where this occurred, I looked for NativeListView that seem to have more than one column by searching for AddRange(). There may be more (and one form was ignored).

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/user-attachments/assets/efbdd69d-90e1-490b-ac14-673961a7ad25)  ![image](https://github.com/user-attachments/assets/a0fcb007-a6d8-4ce0-a484-d7192a0a1382)

![image](https://github.com/user-attachments/assets/e1947c1a-ee38-47b3-a9d2-484b9ef457e9) ![image](https://github.com/user-attachments/assets/f59dd1a4-9657-4088-8cff-6f9dd39992c3)

![image](https://github.com/user-attachments/assets/a71e1659-dfc7-4291-9cd0-15a1f6961d2f) ![image](https://github.com/user-attachments/assets/bfc43301-03da-430c-a988-635354b3ac5f)

![image](https://github.com/user-attachments/assets/5f4d3abd-b46f-4694-b28f-de379ffa3169) ![image](https://github.com/user-attachments/assets/7669aa4e-18cb-4e6f-bc5f-eebb60c496ba)

![image](https://github.com/user-attachments/assets/e278425f-c9a3-4b21-afad-b4ad719d7c86) ![image](https://github.com/user-attachments/assets/4112f2c7-5ba9-49a4-8978-ccfc9d763d68)

Note: There is a similar issue in GitHub Fork&Clone, not getting it to work now and ignore it

![image](https://github.com/user-attachments/assets/4dd09627-9ac2-441e-8349-6b5fd2a10efc)

![image](https://github.com/user-attachments/assets/000fcd6c-906b-4875-a5ca-784db702d04c)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-12-25T22:19:42Z,2025-01-03T22:56:36Z,2025-01-03T22:56:36Z,,master,feature/listview-columns,10,30,0,1,4,2,"mstv, mstv","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12113
12111,.net9 dark theme,"Depends on #12064 #12116 #12152 and more
Otherwise I consider this to be very usable, just waiting dor the dependencies

## Proposed changes

This is a WIP PR for theming with https://github.com/dotnet/winforms/pull/11857
This is not as good looking as what @NikolayXHD did for GE 3.x, but it follows the standard Windows dark mode.
There are many limitations and issues in https://github.com/dotnet/winforms/pull/11857 still, it
is a later call to use this now or not.
The standard theme is not modified by this PR.

This PR has a number of tweaks to the setup to make this mostly usable, there are a number of issues still.
This is a preliminary summary of the status, to be added close to screenshots later.

This adds both a ""dark"" theme with mostly system colors that is quite gray and a ""dark+"" that is slightly darker.

Still to do - many the same in ge 3 dark mode

* Some adapted colors like Reset is a little muted, add specific colors? Cleanup the adaption in general?
* Add some kind of disclaimer for dark mode - at least that it is experimental in .net9. Win10 (and Win11 23H2?) is not expected to fully work too
* Some issues seen below may be improved
* tooltips and various other like disabled text boxes are bright, no dramatic issue [(also reported)](https://github.com/dotnet/winforms/issues/11954)
* Forms extending from GitExtensionsForm are much darker than the ""modern"" forms based on GitExtensionsDialog. This applies to for instance Settings and FindInFile, total of 20 forms. There is a difference for the light theme too, but the difference is bigger for dark mode. Certainly not in this PR.
* Syntax highlighting in the editor looks bad. The colors are adapted from the hardcoded highlighting per file type, there is no way to set specific colors (or use system colors?).

For .NET10

* ListView group headers like for remotes and in the dashboard is unreadable. FileStatusList is changed in #12116. Tracked in https://github.com/dotnet/winforms/issues/11953  This will not be changed in this PR, await .NET10
The ListView unreadable text is very annoying but I believe the text is in such forms that this can be accepted.
There will need to more color tweaking.

Contrast is generally quite low though, most of this in the WinForms colors. The dark+ theme has slightly better contrast, more like ge3 dark.
Some overrides were already implemented, like for https://github.com/dotnet/winforms/issues/11953

Mostly run on Win11, a few visuals on Win10

The darksilver theme was removed, it would be the same as the dark theme as system colors cannot be changed.
Similar highcontrast_dark was removed, not needed.
Invariant theme system colors are hardcoded, required to adjust colors.

I will appreciate if someone that is better in design and override .NET painting (.NET and GUI is not my strength, this is a hobby!) joins.

Some of the commits in this PR may be separated to individual PRs.

## Screenshots <!-- Remove this section if PR does not change UI -->

Not updated with the latest changes

Should this show GE 3.x/5.1/DarkMode?

For now some visual style examples and issues

General look, with #12152 and #12116 etc
![image](https://github.com/user-attachments/assets/63f57634-757e-4e40-bd1e-fc7151c585b0)

Before #12152 and #12116 etc, see the unreadable FileStatusList group text
![image](https://github.com/user-attachments/assets/6bec1722-7c21-4955-9788-f2f4b4285c7c)

Ansi colors in dark, mostly readable
![image](https://github.com/user-attachments/assets/b0e5df8d-8a43-4249-95eb-32383550d70d)
dark+
![image](https://github.com/user-attachments/assets/db7daf53-ede3-459d-a23d-34390fe2274d)


Example of Flat style (as in the PR) vs Standard.
![image](https://github.com/user-attachments/assets/5e965c06-56bb-458b-a546-369c1c028a57) 
![image](https://github.com/user-attachments/assets/9394deee-f47a-4f1b-ae79-03741f1dbaf5)

Example of light tooltip
![image](https://github.com/user-attachments/assets/fa63f3ba-6891-474d-b02e-503fcc4c3c55)

A few usages of ListView that is not FileStatusList use ListView header
Keep as this until .net10
![image](https://github.com/user-attachments/assets/23f7bbb5-f785-4fb9-9c7f-f906afe59360)

Disabled button text is hard to read
![image](https://github.com/user-attachments/assets/7923bb44-43e5-44e3-90a6-cf96a6048325)

Panels in dark+ are darker, but tab foreground is still SystemColors.Windows (and inactive tabs is not so far from the background). Not so off though.
![image](https://github.com/user-attachments/assets/e28cbdfd-4e31-41a4-bdc5-749505ee5eaa)

## Test methodology <!-- How did you ensure quality? -->

Used as primary interface

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Git 2.47.1.windows.1
- Microsoft Windows NT 10.0.26100.0
- .NET 9.0.0
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 9.0.0 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

Rebase merge (PR submitter must change the commit message for the last commit).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2024-12-22T23:49:58Z,,,,master,feature/net9-theming,30,163,188,30,3,1,"RussKie, gerhardol, RussKie, gerhardol, gerhardol, gerhardol, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",True,https://api.github.com/repos/gitextensions/gitextensions/issues/12111
12109,chore(FileStatusList): Enable `nullable` decoration,"## Proposed changes

- `FileStatusList`: Enable `nullable` except for comparers (which will be removed in a follow-up anyway)

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-20T22:39:18Z,2024-12-21T09:26:36Z,2024-12-21T09:26:36Z,,master,fix/filestatuslist_nullable,1,36,24,1,0,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12109
12108,fix(File History): Handle artificial commits,"Fixes #12107

## Proposed changes

- `FormFileHistory`: Do not call `GetFileBlobHash` for artificial revisions, use `File.Exists` insteads

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-20T16:39:04Z,2024-12-21T09:26:04Z,2024-12-21T09:26:04Z,,master,fix/12107_getfileblobhash_for_artificial,1,7,4,1,1,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12108
12105,Rename FormBrowseController -> GpgInfoProvider,"
## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-12-20T05:40:21Z,2024-12-20T14:26:36Z,2024-12-20T14:26:36Z,,master,IGpgInfoProvider,12,396,382,1,0,0,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12105
12104,Disable selected Tools menu items in dashboard,"...as those only apply to a git repo.

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-12-20T03:47:28Z,2024-12-21T12:25:03Z,,,master,dashboard_disable,1,2,0,1,0,3,"copilot-pull-request-reviewer[bot], mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12104
12101,fix(Editor): Adapt selection length on replace,"Fixes #12084

## Proposed changes

- `Editor/FindAndReplaceForm`: Adapt selection length on replace

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-13T20:29:33Z,2024-12-14T22:05:07Z,2024-12-14T22:05:07Z,status: ready,master,fix/replace_all,1,8,0,1,2,2,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12101
12100,fix(GPG): Remove max length of key id,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #12099

## Proposed changes

- Set `toolStripGpgKeyTextBox.MaxLength` to 40

## Test methodology <!-- How did you ensure quality? -->

- to be tested manually

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-12T20:55:14Z,2024-12-13T16:09:29Z,2024-12-13T16:09:29Z,,master,fix/gpg_key_length,1,0,1,2,3,2,"gerhardol, pmiossec, pmiossec","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12100
12097,fix(Jump List Buttons): Deactivate on modal dialog,"Fixes #3128

## Proposed changes

- Disable Windows Jump List buttons if GE shows a modal dialog or has no valid wdir
- Bring GE to front on click of Windows Jump List button

## Test methodology <!-- How did you ensure quality? -->

- manual

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 10

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-10T23:34:19Z,2024-12-16T18:53:09Z,2024-12-16T18:53:09Z,status: ready,master,fix/3128_jumplist,2,39,12,2,0,0,"gerhardol, mstv, mstv, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12097
12096,fix(Submodules): Allow spaces in folder name,"Fixes #11891

## Proposed changes

- Fixup `SubmoduleHelpers.DiffCommandRegex` to support spaces in folder names of super repo
- Add test for `CreatePatchFromString` which uses a similar regex (not changed because it has a more generic scope)

## Test methodology <!-- How did you ensure quality? -->

- extend tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-10T22:07:34Z,2024-12-11T21:04:43Z,2024-12-11T21:04:43Z,,master,fix/11891_submodule_spaces,4,28,4,1,0,0,"RussKie, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12096
12095,fix(GetTagMessage): Do not truncate last line,"Fixes #11241

## Proposed changes

- Use `Trim` instead of skipping the last line (as suggested by @toesus)
- Remove pointless support for Mac line end (git does not use it) 

## Test methodology <!-- How did you ensure quality? -->

- adapt exisiting tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-10T19:35:45Z,2024-12-11T21:01:12Z,2024-12-11T21:01:12Z,,master,fix/11241_tag_annotation,2,7,19,1,0,0,pmiossec,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12095
12093,fix(File History): Indicate not identifiable file,"Improves UX on #12088, which is basically a git issue

## Proposed changes

`FormFileHistory`:
- Hide tabs ""Diff"", ""View"" and ""Blame"" if Git cannot identify the file blob, e.g. because it was deleted, or was renamed in an not merged branch 
- Show an error message in the ""Commit"" tab title, i.e. in the place where the tabs disappear
- Remove unused `FormFileHistoryController` instance

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/aef7a2d7-ac2d-49ae-9212-49c4ebe5124c)

![image](https://github.com/user-attachments/assets/cc52b19d-a60c-46db-b8e7-7104a2802a62)

![image](https://github.com/user-attachments/assets/cac7c09a-ca78-465d-8943-1bdc3378d389)

### After

![image](https://github.com/user-attachments/assets/feb9e80d-ad59-48af-b2cb-f698bfdcda82)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-09T20:03:17Z,2024-12-10T19:08:46Z,2024-12-10T19:08:46Z,,master,fix/filehistory_error,2,15,3,1,0,1,"gerhardol, RussKie","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12093
12092,fix(File History): Correctly quote filename,"Fixes
part of #12088

## Proposed changes

- `FormFileHistory` and `RevisionGridControl`: Correctly quote filename
- Factor out `DiffMergeToolConfigurationManager.UnquoteString` to `StringExtensions.RemoveQuotes`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual: check Git Command Log
- add & adapt testcases

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-09T17:18:26Z,2024-12-09T23:05:01Z,2024-12-09T23:05:01Z,,master,fix/filehistory_quotes,6,80,36,3,0,1,"RussKie, RussKie, RussKie, gerhardol","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12092
12091,fix(PatchProcessor): Fixup encoding for diff text,"Fixes #12066

## Proposed changes

- `PatchProcessor.StartOfContentsRegex`: Move `'-'` to first position inside `""[ -+@]""` in order to avoid special meaning in regex.
  This made `CreatePatchFromString` choose the wrong encoding for removed line.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/bd128b9c-a56c-406f-b5d4-784a6824fe7c)

### After

![image](https://github.com/user-attachments/assets/10d17554-103c-467f-92ef-39dee678dc9a)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-06T22:23:15Z,2024-12-08T22:26:18Z,2024-12-08T22:26:18Z,,master,fix/12066_encoding,8,77,8,3,0,2,"RussKie, gerhardol, gerhardol, gerhardol","APPROVED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12091
12090,fix(blame previous): Remove restriction to availibility of the actual revision,"Fixes #10946

## Proposed changes

`BlameControl`
- Remove restriction to availibility of the actual revision
- Use visible previous revision instead

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

context menu item disabled

### After

context menu item enabled if there is shown a (virtual) parent

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-05T22:54:23Z,2024-12-11T20:59:38Z,2024-12-11T20:59:38Z,,master,fix/10946_blame_previous,3,46,23,3,1,1,"gerhardol, gerhardol, gerhardol","COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12090
12089,fix(FormBrowse): Keep file context on deactivation of filter,"Fixes UX issue
mentioned in https://github.com/gitextensions/gitextensions/issues/10946#issuecomment-2483313002

## Proposed changes

- `FormBrowse`: Set `FallbackFollowedFile` of ""Diff"" and ""File tree"" only if not empty
  in order to not loose the file context (""last clicked file"")

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-05T22:43:17Z,2024-12-08T22:26:59Z,2024-12-08T22:26:59Z,,master,fix/file_context,1,5,2,1,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12089
12085,"fix(ProcessWrapper): Provide git error message instead of ""External program returned non-zero exit code.""","## Proposed changes

- feat(Git Command Log): Log `StandardError`, too, unless not redirected (initial draft by @gerhardol)
- fix(`ProcessWrapper`): Provide git error message (if any) instead of ""External program returned non-zero exit code.""
- fix(`ExecutableExtensions.ExecuteAsync`): Remove check for `DubiousOwnershipSecurityConfigString` because that error message is provided by `ProcessWrapper` now 
- fix(`AsyncLoader`): Do not swallow unhandled exceptions
- fix(`BlameControl`): Show git error message and avoid outdated tooltips

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/160d1087-69bf-4318-af05-cb3aad228401)

![image](https://github.com/user-attachments/assets/e0f1e81c-817b-4c78-98b4-14a9e5ee3ffb)   ![image](https://github.com/user-attachments/assets/0b6488b1-99a3-4206-91c0-062f017b030c)

### After

![image](https://github.com/user-attachments/assets/5a910961-bc1f-491a-9b0b-3e408023fcdf)

![image](https://github.com/user-attachments/assets/c0a4a093-dfce-47c0-99ec-1677a76f3ca7)  ![image](https://github.com/user-attachments/assets/8c1d6be4-d926-4fda-8e64-fbb92970dc61)

## Test methodology <!-- How did you ensure quality? -->

- manual
- adapt existing tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-03T00:38:50Z,2024-12-08T22:19:15Z,2024-12-08T22:19:15Z,,master,fix/error_output,16,114,81,5,3,1,"RussKie, gerhardol","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12085
12081,"chore(dubious ownership): Remove ""Trust all repositories"" button","Closes #12053

## Proposed changes

- Remove ""Trust all repositories"" button from `BugReportInvoker.ReportDubiousOwnership`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/9026b47d-9b5d-4139-a150-99ba918b4dfd)

### After

![image](https://github.com/user-attachments/assets/e83963ec-3c86-4961-8f73-dfad95397bf9)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-01T21:13:19Z,2024-12-02T17:57:16Z,2024-12-02T17:57:16Z,,master,fix/12053_no_trust_all,3,0,58,1,0,0,"gerhardol, pmiossec","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12081
12080,fix(RevisionDataGridView): Always select a revision,"Fixes #11782

## Proposed changes

- If no selection can be restored, select the first shown real commit or the first row
- Set `CurrentCell` accordingly, which works wonders!

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

(after scrolling down and up again)

![image](https://github.com/user-attachments/assets/e160150f-9d70-404e-8ac6-b6ed99a99334)

### After

![image](https://github.com/user-attachments/assets/eac0c8f4-7ed9-4d8d-8cda-92d89ef62698)

## Test methodology <!-- How did you ensure quality? -->

- manual 

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-30T21:17:13Z,2024-12-02T22:15:38Z,2024-12-02T22:15:38Z,,master,fix/11782_no_selection,1,31,2,3,0,1,"RussKie, pmiossec, gerhardol, gerhardol","APPROVED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12080
12078,feat: Support saving LFS files,"Fixes #6146
Finishes #6189

## Proposed changes

- Detect LFS pointer files and apply the LFS smudge filter in this case - in order to always get the plain file contents 

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/e20a95e3-f6e2-45c6-a724-718f9249aaa8)

### After

![image](https://github.com/user-attachments/assets/9cc781e7-3aa5-40e8-b8b5-cd15511a6030)

## Test methodology <!-- How did you ensure quality? -->

- test repo: https://github.com/mstv/test_lfs
  with LFS-pointer-like files

![image](https://github.com/user-attachments/assets/49d3e7ec-a924-41cf-b62c-a36852f76109)

- created an invalid pointer file, which cannot be pushed to GH

![image](https://github.com/user-attachments/assets/8e7790cd-958e-4f16-805a-875b7ff226fc)

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-29T22:54:26Z,2024-12-16T18:52:24Z,2024-12-16T18:52:24Z,status: ready,master,feature/lfs,6,119,34,5,8,1,"gerhardol, mstv, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12078
12075,chore(MemoryStream): Add missing `using` statement,"Fixes https://github.com/gitextensions/gitextensions/pull/12072#discussion_r1861390651 in all other occurrences

## Proposed changes

- `MemoryStream`: Add missing `using` statement 
- Remove unnecessary stream copy from `FileViewer.CreateImage`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests
- manually (view `.ico` and `.png` file of GE repo in diff and as new file)

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-28T20:09:38Z,2024-11-28T20:46:57Z,2024-11-28T20:46:57Z,,master,fix/memory_stream,3,6,13,1,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12075
12072,fix(RevisionReader): Avoid hang on lengthy StandardOutput,"Fixes #12055

## Proposed changes

- fix(`RevisionReader.GetRevision`): Avoid hang in `StandardError.ReadToEnd` on lengthy `StandardOutput`
- The other usages of `GitCommandRunner.RunDetached` are not affected as they do not read `StandardError` at all.
- Extract `GetRevisionAsync` as proposed by Roslyn analyzer

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Test environment(s) <!-- Remove any that don't apply -->

https://github.com/mstv/test_lfs/tree/test_long_commit_body

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-27T22:05:10Z,2024-12-03T22:53:06Z,2024-12-03T22:53:06Z,,master,fix/12055_detached_process_hang,1,34,7,2,0,2,"gerhardol, RussKie, mstv, mstv, mstv, RussKie, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12072
12065,fix(Scripts): Do not display mnemonic ampersand,"## Proposed changes

- Remove mnemonic ampersand in script name except for tool bar and menus 

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/user-attachments/assets/101acf22-908e-415a-8c96-951128be04cd)

Before | After
-|-
![image](https://github.com/user-attachments/assets/c75f5f08-4284-44f3-a24a-2e9e1f7e9893) | ![image](https://github.com/user-attachments/assets/de057d5b-2792-44bd-a717-475af3b616e4)
![image](https://github.com/user-attachments/assets/db58e09a-1bb1-4e85-a20f-8165f4522e9d) | ![image](https://github.com/user-attachments/assets/2a33f32f-7b7c-4f35-9e09-d30774303cba)
![image](https://github.com/user-attachments/assets/bafe24e6-31b9-451d-add2-89740aff4377) | ![image](https://github.com/user-attachments/assets/c62464e2-6097-4ad6-9fc1-123448507a58)

## Test methodology <!-- How did you ensure quality? -->

- adapt tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-24T18:58:34Z,2024-11-24T23:21:18Z,2024-11-24T23:21:18Z,,master,fix/script_name,6,26,15,1,0,0,"RussKie, gerhardol, mstv, gerhardol, RussKie","APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12065
12064,.net9,"Requires #12167 (due to submodule changes)
Requires submodules first like https://github.com/gitextensions/ICSharpCode.TextEditor/pull/48

## Proposed changes

An attempt to try out .net9
There are the usual performance and syntax improvements in .net9/c#13
.net9 do not have long term support, update to .net10 will be required in a year.

One specific feature that is interesting is dark mode, discussions in #9191 and more issues

## Test methodology <!-- How did you ensure quality? -->

?

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2024-11-24T17:43:27Z,,,,master,feature/net9,13,30,9,3,4,1,"RussKie, gerhardol, mstv, gerhardol, RussKie, RussKie, gerhardol, mstv, RussKie, mstv, mstv, gerhardol, gerhardol, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12064
12063,fix: ReadExactly from stream,"
## Proposed changes

Read() from a stream could obtain fewer characters than requested, the number of chars read was never checked.

This is a warning with .net9 and a potential issue in current master.
With this change all bytes reported to be in the stream are read, which should be the case anyway.

ReadExactly () was added in .net7. (I considered using that when optimizing the read of revisions for 4.x (that was for .net6, just testing an update.) If Git reported number of bytes for a commit the handling was slower than the current handling that searches for \0 in the stream).

Alternatives to this change:
- Suppress the warning in .net9 
- Assign Read() to _ to ack that the value is not used (there will likely be an exception below instead)
- Return with error if no of bytes are not read.

## Test methodology <!-- How did you ensure quality? -->

code review - cannot provoke the error

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-24T16:57:04Z,2024-12-02T21:22:13Z,2024-12-02T21:22:13Z,,master,feature/readexactly-from-stream,1,1,1,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12063
12062,chore(stylecop): update to 1.2.0-beta.556,"## Proposed changes

No specific reason to update, just preparing for .net9 and c#13 that potentially need updates
We had a beta before, this beta is a year old so it should be considered ""stable"".

## Test methodology <!-- How did you ensure quality? -->

Build

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-24T16:45:19Z,2024-11-25T20:24:34Z,2024-11-25T20:24:34Z,,master,feature-stylecop,1,1,1,1,1,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12062
12061,fix: WFO1000 Property does not configure the code serialization for i…,"…ts property content

## Proposed changes

Content serialization must be declared with .NET9, error WFO1000 
Similar change is needed for conemu, icsharp submodules
An alternative is to supress the warning for .net9

I took .net9 for a quick spin, this was the biggest required change. A few other suppression needed due to deprecations.
The app starts. With the favorite in left panel the app hanged after a fetch though

## Test methodology <!-- How did you ensure quality? -->

Manual use, just annotations

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-24T16:40:19Z,2024-12-22T22:54:44Z,,,master,feature/wfo1000-property-serialization,30,169,19,2,1,1,"mstv, RussKie, gerhardol, RussKie, gerhardol, gerhardol, RussKie","APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12061
12060,feat(Git Command Log): Improve display of command cache,"## Proposed changes

- Hide git configuration arguments in cache tab, too
- Add context menu item for clearing the cache

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/898b269c-caad-4dee-9109-3003cff6c6a1)

### After

![image](https://github.com/user-attachments/assets/80af9355-12ed-46aa-bd75-24776a0d5acc)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Please do not squash merge
----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-24T16:24:49Z,2024-11-24T18:46:59Z,2024-11-24T18:46:59Z,,master,feature/cache,6,66,11,2,0,1,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12060
12058,perf(FormResetAnotherBranch): Use quicker command,"Fixes #12035

## Proposed changes

- FormResetAnotherBranch: Use quicker command ""update-ref""
- Enable the `OK` button using a dry-run of the previous command ""push"" 

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- add testcase

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-22T21:35:57Z,2024-12-02T18:01:08Z,2024-12-02T18:01:08Z,,master,feature/update-ref,4,92,16,6,4,1,"RussKie, pmiossec, pmiossec","APPROVED, CHANGES_REQUESTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12058
12057,chore: Convert remaining post-fix `FileAndForget`,"## Proposed changes

- Replace `ThreadHelper.JoinableTaskFactory.RunAsync(...).FileAndForget()` with `ThreadHelper.FileAndForget(...)` 

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-22T18:18:58Z,2024-11-24T18:38:29Z,2024-11-24T18:38:29Z,,master,fix/runasync,2,6,6,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12057
12056,Fix(git-grep),"## Proposed changes

- fix(FileStatusList): Extract function `GetFileStatusListTop` and consider all additional boxes
  in order to fixup the position of ""Loading data..."" - particularly on empty (artificial) commits, the just shown empty ComBox could be covered by the ListView
- fix(FileStatusList): Expand group of selected item
  otherwise the selection of a diff file is not visible because all diff groups are collapsed for git-grep
- fix(GetGrepFileAsync): Quote filename
  in order to support files with spaces in their name
- fix(git-grep): Go to first match if showing the entire file

## Screenshots <!-- Remove this section if PR does not change UI -->

Not really applicable

## Test methodology <!-- How did you ensure quality? -->

- manual

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-22T16:43:40Z,2024-11-24T18:44:23Z,2024-11-24T18:44:23Z,,master,fix/gitgrep,3,18,3,4,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12056
12049,fix(GPG): Ignore exit code from verify-tag,"Fixes #12048

## Proposed changes

- `GitGpgController`: Ignore exit code from ""git verify-tag""
   (Git does not document exit codes of this command. And the output is handled to a certain degree. If it fails for other reasons, users need to consult the Git Command Log.)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![EOE](https://github.com/user-attachments/assets/a5062bdf-8624-4965-996d-f6d5ed428bed)

### After

![image](https://github.com/user-attachments/assets/91d7c8b6-4d1c-46e4-bfbb-d221a68da800)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-19T21:26:20Z,2024-11-19T23:49:39Z,2024-11-19T23:49:39Z,,master,fix/12048_verify-tag,1,1,1,1,0,0,"pmiossec, RussKie, gerhardol","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12049
12040,fix(inline-diff): Limit highlight length,"Fixes #12038

## Proposed changes

- DiffHighlightService: Apply highlighting to the first 2000 characters only

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

stack overflow

### After

![image](https://github.com/user-attachments/assets/4e259f97-183b-4d3c-82f2-969b7c80c71c)

![image](https://github.com/user-attachments/assets/8a98266b-53aa-4b3c-ab8e-ed25e1b894b2)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-13T21:28:09Z,2024-11-14T20:53:08Z,2024-11-14T20:53:08Z,,master,fix/12038_limit_inline_diff,1,10,2,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12040
12034,feat(FileStatusList): Add examples of negative file filter,"## Proposed changes

FileStatusList: Add two examples of regex for excluding files
1. `""^(?!.*NotThisWord)""`: self-explanatory with easy-to-delete placeholder
2. `""^(?!.*\bg?tests?/)""`: common test folders, singular & plural, optional prefix 'g' (for a common C++ test framework)

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/user-attachments/assets/e3b79f32-305b-46b6-8ec0-0565e78a5590)

### Before

![image](https://github.com/user-attachments/assets/2acbfd48-19f0-4545-b893-dd8062b5bf2f)

### After

![image](https://github.com/user-attachments/assets/b48183cf-8cdb-4896-9f7b-13a6aece4e75)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-11T21:29:33Z,2024-11-12T20:56:27Z,2024-11-12T20:56:27Z,,master,feature/negative_file_filter,2,51,49,2,0,0,"gerhardol, RussKie, pmiossec","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12034
12033,feat(FileStatusList): Focus git-grep box on show,"## Proposed changes

- Make `cboFindInCommitFilesGitGrep` the active control when it is shown

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/user-attachments/assets/c4fbf9ba-1772-4b69-a691-230f5c221616)

### Before

![image](https://github.com/user-attachments/assets/0567bd67-59ee-4f60-b125-fcd0d960921b)

### After

![image](https://github.com/user-attachments/assets/f1b3fe30-f11f-4c78-a20c-32bd1c4229e9)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-11T21:04:58Z,2024-11-12T20:54:47Z,2024-11-12T20:54:47Z,,master,feature/focus_git_grep,1,2,0,1,0,1,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12033
12032,feat: skip gaps in blocks for mark inline,"## Proposed changes

To improve inline marking of not interesting parts

Inline differences dims text that are not changed (and add markers where text were removed/added on a line)
Before only consecutive removed followed by consecutive added lines were compared.

Note: This allows gaps in the lines, but still requires removed followed by added lines, so the following is not handled
To expand on this it could be possible to match all lines within a section, but it could be confusing if matches are too far apart.

![image](https://github.com/user-attachments/assets/2dd78734-7222-4082-9678-c35511e3f7b5)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/abcd9558-07e4-473d-b9fc-75b94d1bfaa0)

### After

![image](https://github.com/user-attachments/assets/d26cd195-81f2-42ef-a976-b812efe88963)

## Test methodology <!-- How did you ensure quality? -->

Tests added

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-10T17:46:36Z,2024-11-12T21:12:27Z,2024-11-12T21:12:27Z,,master,feature/mark-inline-gaps,4,154,1,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12032
12031,Address  CVE-2019-0820,"See https://github.com/advisories/GHSA-cmhx-cq75-c4mj

![image](https://github.com/user-attachments/assets/17896d75-d5d9-44c1-8e8b-90444175db4a)

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-09T02:38:07Z,2024-11-12T22:59:56Z,2024-11-12T22:59:55Z,,master,deal_with_CVE-2019-0820,3,9,3,2,3,1,"gerhardol, gerhardol, mstv, gerhardol","APPROVED, CHANGES_REQUESTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12031
12029,feat(CI/ADO): Add support for pull requests,"## Proposed changes

- Display Azure DevOps PRs builds result in commit built (pipeline is building a merge commit
and so it is a little more tricky to get the original hash of the commit built)
- Add support to open Pull Request page from contextual menu
- improve a little the tooltip (to have all the information on one line --and prepare display of multiple build result in the tooltip--)
   - display also PR id and build name

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

* The result for the PR is not available
![image](https://github.com/user-attachments/assets/55ea5bb7-a38a-450c-91ad-a8cc0e67c768)


### After

* Build result on the commit & Tooltip (with PR information)
![image](https://github.com/user-attachments/assets/6f0abb63-5e21-423a-ba70-65cf5d190439)


* Open the PR
![image](https://github.com/user-attachments/assets/60827d12-973a-42ce-933c-8fb8e8587d36)


## Test methodology <!-- How did you ensure quality? -->

- Manual 

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 5a7e3d88ee69ac359c3dcba8160c607959f85c97 (Dirty)
- Git 2.45.0.windows.1 (recommended: 2.46.0 or later)
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.8
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.31 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.33 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.20 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.7 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.8 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer do what they want with this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-07T23:05:58Z,2024-11-15T08:31:34Z,2024-11-15T08:31:34Z,,master,feat/adp_pr_builds,3,96,27,3,2,1,"gerhardol, RussKie, RussKie, RussKie, pmiossec, pmiossec, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12029
12028,fix(Diff View): Avoid exception on open,"Fixes #12026

## Proposed changes

Fixup FileStatusList:
- Skip unnecessary git-grep box visibility handling (which called `BeginInvoke` too early)
- Clear search string on hide of git-grep box

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-07T20:21:48Z,2024-11-08T16:09:14Z,2024-11-08T16:09:14Z,,master,fix/12026_git_grep_menu,1,12,4,3,0,1,"RussKie, gerhardol, mstv, pmiossec, gerhardol, gerhardol, mstv, gerhardol","APPROVED, APPROVED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12028
12023,feat(EditboxBasedConsoleOutputControl): Improve UX and add [password] input field,"Extends and supersedes #11182

## Proposed changes

- feat(FormStatus): Add password text box
  - as `UserControl`
  - Automatically show input field
  - Show in all `FormStatus`, not only in `FormRemoteProcess`
  - Focus the new control
  - Cleanup unnecessary `FreeThreaded`
- fix(EditboxBasedConsoleOutputControl):
  - Use `MonospaceFont` and `SystemColors.Info`
  - Less delays
  - Unblock UI
  - Workaround for hang in `WaitForExit`
  - Fixup dispose
  - Log ""Process killed""
- feat(EditboxBasedConsoleOutputControl): Add `AsyncStreamReader` in order to display prompts, i.e. output which has not been terminated with a line end (yet)
  Thus, there is no need for console window for SSH any longer.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![process_before](https://github.com/user-attachments/assets/805b0759-a6e0-4958-bb2f-dae5f4ca8636)

### After

![process_after](https://github.com/user-attachments/assets/c3045547-d3ef-46e7-b4af-b65eae147b53)

![input](https://github.com/user-attachments/assets/64eaf92d-fbcf-48cc-ae74-2dc0b21ae6f7)

## Test methodology <!-- How did you ensure quality? -->

- add unit test for `AsyncStreamReader` (would have been easier if `System.IO.StreamReader` implemented an `interface`)
- manual

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-06T23:28:43Z,2025-01-08T20:15:33Z,2025-01-08T20:15:33Z,,master,feature/console_replacement,17,928,94,10,3,1,"gerhardol, gerhardol","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12023
12022,Signed contributors.txt,":black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-06T02:06:08Z,2024-11-06T20:48:10Z,2024-11-06T20:48:10Z,,master,patch-1,1,1,0,1,1,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12022
12019,feat(graph): Add branch colors to theme,"Fixes #11282

## Proposed changes

- feat(graph): Add branch colors to theme

## Screenshots <!-- Remove this section if PR does not change UI -->

unchanged

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-03T21:30:56Z,2024-11-06T20:56:22Z,2024-11-06T20:56:22Z,,master,feature/11282_graph_colors,5,49,13,1,0,1,"RussKie, gerhardol","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12019
12018,fix: Add missing defaults to git attributes parser,"## Proposed changes

GE uses the Git built-in patterns in .gitattributes to detect if a file is binary in certain situations to prune detection. Sync the list to recent Git versions to add newer formats.

https://git-scm.com/docs/gitattributes#_defining_a_custom_hunk_header

Very minor change seen together with #12007 

## Test methodology <!-- How did you ensure quality? -->

Code review

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-03T21:14:42Z,2024-11-04T20:42:58Z,2024-11-04T20:42:58Z,,master,feature/gitattr-custom-chunk-header,1,1,1,1,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12018
12016,fix(File History): Do not change capitalization of filename," Fixes #11886

## Proposed changes

- fix(FileHistory): Do not change the capitalization of filename passed on the command line
  because the filename filter of ""git log"" is case-sensitive
  rather keep the existing path, which has the correct capitalization if the File History is invoked by GE

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/c74f53b0-537f-4056-87a8-614874d6f143)

### After

![image](https://github.com/user-attachments/assets/704e85a2-d53a-473f-9e0d-7cfc1af24007)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-02T21:23:36Z,2024-11-03T21:04:03Z,2024-11-03T21:04:03Z,,master,fix/11886_filehistory_capitalization,1,2,5,3,0,1,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12016
12014,fix(FilterToolBar): Correctly resize branch dropdown,"Fixes #11942

## Proposed changes

- fix(FilterToolBar): Correctly resize branch dropdown and restore filter text

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/fd2778ee-627d-4751-be9f-516dbfc081a7)

### After

![image](https://github.com/user-attachments/assets/0ef89f16-c298-4021-bed8-f8fd842bc692)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-02T17:45:12Z,2024-11-03T20:51:01Z,2024-11-03T20:51:01Z,,master,fix/11942_branch_filter,1,5,1,1,0,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12014
12013,fix(FormCommit): Restore file selection,"Fixes #11903

## Proposed changes

- fix(FormCommit): Restore correct condition in `RestoreSelectedFiles`, which was stupidly broken in #11363

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

first file selected

### After

selected file restored

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-02T13:30:01Z,2024-11-03T20:50:22Z,2024-11-03T20:50:22Z,,master,fix/11903_formcommit_selection,1,1,1,1,0,2,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12013
12012,"fix(FormDiff): Avoid ""A task was canceled.""","Fixes #11980

## Proposed changes

- fix(`FormDiff`): Separate `CancellationTokenSequence`s of `PopulateDiffFiles` and `ShowSelectedFileDiff`
  necessary because `ShowSelectedFileDiff` is called twice before `PopulateDiffFiles` finishes

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

exception

### After

works

## Test methodology <!-- How did you ensure quality? -->

- manual (compare commit e283787912ca8b0af82461f3d1eec50f3f680242 with working dir)

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-01T22:36:58Z,2024-11-03T20:49:31Z,2024-11-03T20:49:31Z,,master,fix/11980_formdiff_async,1,3,1,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12012
12007,fix(git diff): Suppress `diff.external`,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #12006

## Proposed changes

- Add argument `--no-ext-diff` to all 6 found `git diff` commands in order to suppress a possibly configured `diff.external` tool

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- adapt existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-29T19:43:00Z,2024-11-03T20:56:24Z,2024-11-03T20:56:24Z,,master,fix/12006_override_diff_external,5,10,4,1,6,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12007
12004,fix(FileStatusList): Set `Text` for accessibility,"Fixes #10976

## Proposed changes

- Also set `listItem.Text` in addition to the `FileStatusItem` instance in order to provide accessibility information

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-28T21:47:40Z,2024-10-29T17:32:39Z,2024-10-29T17:32:39Z,,master,fix/10976_filestatuslist_accessibility,1,3,0,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12004
11999,"fix(Push): fix false positive detection of ""detached head"" state","when branch name contains brackets.

fixes #11997 and #11970

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After
![image](https://github.com/user-attachments/assets/1e66e900-f873-44ab-a836-788cad7e8826)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 2b8f800a9d26f1ba95c49516e677b0a4e387b4a7
- Git 2.45.0.windows.1 (recommended: 2.46.0 or later)
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.8
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.31 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.33 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.20 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.7 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.8 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-22T22:41:14Z,2024-10-23T23:07:44Z,2024-10-23T23:07:44Z,,master,fix/formpush_detached_head,1,2,4,1,2,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11999
11996,Feature/repo favorites,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #

## Proposed changes

Adding support for selecting the existing branches (head, remote) to be marked as favorites and list them in additional node for easy access 

## Screenshots <!-- Remove this section if PR does not change UI -->
![image](https://github.com/user-attachments/assets/c866b76b-c3fa-45a8-87c5-e11abc28c789)

### Before

<!-- TODO -->

For some reason the image of favories node is not correctly showing as Star, though the star image in the resource i sset.

### After

<!-- TODO -->

## Test methodology <!-- How did you ensure quality? -->

- 
- 
- 

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2024-10-21T09:22:22Z,,,,master,feature/RepoFavorites,24,1439,310,19,14,4,"mstv, mstv, RussKie, RussKie, mstv, chkoddi, RussKie, mstv, chkoddi, mstv, RussKie, RussKie, mstv, chkoddi, chkoddi, chkoddi, chkoddi, chkoddi, chkoddi","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11996
11995,Singed for contributing ,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #

## Proposed changes

- 
- 
- 

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

<!-- TODO -->

## Test methodology <!-- How did you ensure quality? -->

- 
- 
- 

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-21T09:13:16Z,2024-10-23T19:51:15Z,2024-10-23T19:51:15Z,,master,patch-2,1,2,1,1,0,0,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11995
11994,fix(in-line diff): Support non-reversed git coloring,"## Proposed changes

- in case of `AppSettings.ReverseGitColoring` set to `false`, dim the text and keep the window background

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/0c1496c2-42e9-4566-90a9-29665774b06e)

### After

![image](https://github.com/user-attachments/assets/58f74933-c9f3-41ab-b5c9-424f8d69de54)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-20T16:45:32Z,2024-10-23T19:49:50Z,2024-10-23T19:49:50Z,,master,fix/inline_diff_positive,2,24,26,2,0,0,"gerhardol, mstv, RussKie, mstv","APPROVED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11994
11993,Improve unit tests code,"
## Proposed changes

- Add missing category to some unit tests
- use more idiomatic fluentassertion asserts
- update FluentAssertions to last stable

## Test methodology <!-- How did you ensure quality? -->

- run unit tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer do whatever he wants with this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-18T22:42:37Z,2024-10-19T21:24:10Z,2024-10-19T21:24:10Z,,master,improve_unit_tests,30,190,182,3,0,1,"RussKie, mstv, gerhardol","APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11993
11992,"fix: Handle dubious repo ownership, too, if detected by GitStatusMonitor","Fixes #11964

## Proposed changes

- `GitStatusMonitor`: Let the `BugReportInvoker` handle dubious repo ownership, and trace other exceptions
- `Main`: Register exception handlers as early as possible

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

empty FormBrowse

### After

dubious ownership popup

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-18T22:21:05Z,2024-10-19T21:47:46Z,2024-10-19T21:47:46Z,,master,fix/11964_bugreporter,2,19,8,2,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11992
11987,fix(FormRenameBranch): Run git interactively,"Fixes #10375

## Proposed changes

- FormRenameBranch: Run git interactively instead of manually dealing with git output and silent tracing of exceptions
- dialog remains open on error in order to be able to fixup the entered name

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

nothing but an entry in the Git Command Log:

![image](https://github.com/user-attachments/assets/77b1a307-2b4b-4629-a576-bb1747991dca)

### After

![image](https://github.com/user-attachments/assets/5e846766-89be-4ac0-a5c1-4e51bdc3ea1a)

## Test methodology <!-- How did you ensure quality? -->

- manual
- adapt testcase

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-15T19:57:39Z,2024-10-18T17:50:00Z,2024-10-18T17:50:00Z,,master,fix/10375_eoe,7,27,47,1,0,1,"gerhardol, mstv, gerhardol, RussKie","APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11987
11983,fix(difftastic): Adjust endmarkers,"## Proposed changes

First commit reviewed in #11982, this commit is incomplete in the handling of text markers . Actually, #11921 that merged adjacent textmarkers, slightly broke the Difftastic color processing.
The colors bleed slightly.
This PR refactors the processing and simplifies the handling too.

Note: It was maybe not a good move to try to process the Difftastic output to be similar to other GE diffs, but now its done.

## Screenshots <!-- Remove this section if PR does not change UI -->

This is with #11982 only, not in master
![image](https://github.com/user-attachments/assets/33d7fb40-6c0c-4950-8c68-c31063c649ef)

![image](https://github.com/user-attachments/assets/e1ff7866-6d15-4843-84f8-fe6fb99b06ea)


![image](https://github.com/user-attachments/assets/65957489-5e80-41c2-844f-ad8a29c5e714)

![image](https://github.com/user-attachments/assets/853a1242-46cf-4633-a81d-c8d8d3df2546)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-14T21:26:45Z,2024-10-27T12:59:45Z,2024-10-27T12:59:44Z,,master,feature/difftastic-markers,3,123,97,4,3,1,"mstv, gerhardol, gerhardol, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11983
11982,feat(difftastic): use VRulerPos for right hand diff,"## Proposed changes

instead of inserting '|' to the text

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
5.0.0 
Highlight colors is here normal/bold, changed to dim/bold in master

![image](https://github.com/user-attachments/assets/c6b11bd2-b9d2-4a7c-a9d5-3eb1a19975af)

### After

![image](https://github.com/user-attachments/assets/74dd30e9-1d2c-4843-ad6a-640aff8ce91b)

## Test methodology <!-- How did you ensure quality? -->

test for the divider added

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-14T20:52:09Z,2024-10-20T14:57:18Z,,,master,feature/grep-splitter,3,27,11,1,1,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11982
11981,feat: Cache the diff highlighting,"Depends on #11947

## Proposed changes

Split in two commits for review:

- GE diff highlighting, if Git coloring is not used (Git colors were cached already) 
- Inline processing to find common parts

Before this processing was done every time a marker was changed in the diff viewer.
(before #11947 the complete text was parsed every time too)

## Test methodology <!-- How did you ensure quality? -->

Refactoring only, tests exists

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-14T20:41:35Z,2024-10-21T21:31:23Z,2024-10-21T21:31:23Z,,master,feature/cache-textmarkers,7,48,69,1,0,2,"mstv, gerhardol, gerhardol, mstv, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11981
11976,Create SEC,9,closed,2024-10-12T20:26:12Z,2024-10-12T21:20:55Z,,,master,patch-1,1,21,0,1,0,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11976
11965,"fix(ReportDubiousOwnership): Support normal paths, too","Fixes #11958

## Proposed changes

- `ReportDubiousOwnership`: Support normal paths (containing spaces), too, by replacing the first single quote instead of searching for `""'%(prefix)""`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/f58f34b4-44c5-4502-acf5-8d2eaece5314)

### After

![image](https://github.com/user-attachments/assets/de02cb39-ea0c-4201-aa2e-0ff9e825d14b)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-07T07:10:20Z,2024-10-07T20:11:54Z,2024-10-07T20:11:54Z,status: ready,master,fix/11958_trust_dir,1,4,1,1,0,1,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11965
11963,fix: commit gpgSign Git defaults,"Fixes #11931

## Proposed changes

Commit dialogue ""Do not sign commit"" should explicitly not set GPG key.
The default is set to ""Git default"", using the git-config settings.

## Screenshots <!-- Remove this section if PR does not change UI -->

Adding the first option in the dropdown
![image](https://github.com/user-attachments/assets/5338277f-f5b8-4c8d-892f-aaad6c105593)

## Test methodology <!-- How did you ensure quality? -->

tests updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-06T17:09:31Z,2024-10-08T20:34:30Z,2024-10-08T20:34:30Z,,master,feature/i11931-default-gpg-sign,4,31,25,3,1,1,"mstv, mstv, mstv, RussKie, mstv","DISMISSED, COMMENTED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11963
11962,fix: Reset current ansi terminal color,"Fixes #11940

## Proposed changes

An empty ansi terminal sequence must be handled as an explicit reset.
This could cause that foreground colors were applied when black was to be used.

Adjust overridden colors for range-diff.
contextBold should not be reverse bold and
newDimmed/oldDimmed should be reverse.
(There is a minimal difference bold/normal black, but this context is
not very interesting.)

## Screenshots <!-- Remove this section if PR does not change UI -->

Slightly different behavior in 5.0 and master
Use mstv's branches repro/rangediff2-a and repro/rangediff2-b

5.0
![image](https://github.com/user-attachments/assets/d89d15c7-9543-4e5d-8d74-632189015709)

master
![image](https://github.com/user-attachments/assets/c8f4c8c5-c650-4002-adef-83f54370862d)

after
![image](https://github.com/user-attachments/assets/13bfed3f-2683-4e27-a10a-d0f1c474a0a3)

## Test methodology <!-- How did you ensure quality? -->

Tests are updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-06T15:59:27Z,2024-10-07T19:22:58Z,2024-10-07T19:22:58Z,,master,feature/i11940-reset-terminal-color,4,22,8,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11962
11960,Fix FileViewer's encoding bug when showing unstaged files,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11934

A bigger issue than originally mentioned in #11934 is that currently TextEditor provided/used by GitExtensions actually corrupts files 😬

## Proposed changes

- ICSharpCode.TextEditor has a helper which attempts to auto-detect the encoding, lets use it
- Depends on https://github.com/gitextensions/ICSharpCode.TextEditor/pull/42 because of this line [`FilePreamble = reader.CurrentEncoding.GetPreamble();`](https://github.com/gitextensions/gitextensions/blob/master/src/app/GitUI/Editor/FileViewer.cs#L793)
- For good measure, lets avoid creating `MemoryStream` when not necessary and we can write straight to `FileStream`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Switching between UTF8 file without BOM and with BOM

https://github.com/user-attachments/assets/b746f341-b702-427d-9514-2e83874c6d98

After save using `fileeditor` (`F4` from within commit dialog) ⚠️⚠️⚠️ notice corruption in a file without BOM

https://github.com/user-attachments/assets/6db61e34-6906-4713-a16b-fe100110bc35


### After

Both files even after saving them with `fileeditor` (`F4` from within commit dialog) are recognized as UTF8

https://github.com/user-attachments/assets/23260abd-30e1-4848-8027-323de38f1bcf


## Test methodology <!-- How did you ensure quality? -->

- Manually, checking files visually and with Hex editor

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-05T16:58:23Z,2024-10-06T11:58:02Z,2024-10-06T11:58:02Z,,master,fileviewer-encoding-fix,4,16,15,6,1,3,"mstv, RussKie, mdonatas, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11960
11959,fix(settings): Ignore non-boolean advanced git config settings,"Fixes #11939

## Proposed changes

GitConfigAdvancedSettingsPage:
- display git config without value or with non-boolean value as indeterminate 
- do not overwrite such settings

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/3da63fa5-0186-428e-87f4-49407a8b6856)

### After

![image](https://github.com/user-attachments/assets/4ee39b47-585f-4b7e-acd9-e37a0664114b)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-04T21:38:26Z,2024-10-09T20:14:36Z,2024-10-09T20:14:36Z,status: ready,master,fix/11939_git_config,1,7,2,2,0,0,"RussKie, gerhardol, gerhardol","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11959
11955,"fix: Restrict settings to ""global"" when not in a repository","and so that settings file can't be saved in a ""not existing"" local repository.

Check that repo is valid and provide the information when creating pages

Fixes #11907 (at least prevent one way to reproduce it)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/f367efa8-1506-415e-ac17-f8cbc727d8f0)

### After

![image](https://github.com/user-attachments/assets/51b27e99-252c-412d-8244-7aba513fc481)

## Test methodology <!-- How did you ensure quality? -->

- Manual (Opening settings from dashboard i.e. while no repo opened)

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).
(Will be squashed before merging)

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-02T08:32:17Z,2024-10-19T22:17:09Z,2024-10-19T22:17:09Z,,master,fix/settings-outside-repo,2,12,5,1,3,4,"gerhardol, RussKie, mstv, gerhardol, RussKie, pmiossec, pmiossec, RussKie, pmiossec, RussKie, mstv","COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11955
11954,fix(push): fix tracking reference not well selected,"by retrieving the gitref corresponding to local branch combobox

fixes #11899

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/bdae64e4-9bf8-487b-a574-32f5e08bdc8b)

### After

![image](https://github.com/user-attachments/assets/136653c9-7cbf-4023-84ac-199ca6267603)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-02T07:55:09Z,2024-10-19T12:58:06Z,2024-10-19T12:58:06Z,,master,fix/push_tracking_ref,1,20,14,1,5,3,"mstv, RussKie, gerhardol, pmiossec, mstv, RussKie","COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11954
11952,fix(FormGoToCommit): Improve performance,"Fixes #11683

## Proposed changes

`FormGoToCommit`:
- limit number of loaded branches and tags to 20.000 entries each
- assign `DisplayMember` first!
- activate `TextChanged` last
- cancel loading on `FormClosed`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual
- simulate lots of tags

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-01T20:22:24Z,2024-10-04T12:40:06Z,2024-10-04T12:40:06Z,:eyeglasses: status: needs review,master,fix/11683_gotocommit,2,16,7,2,5,0,"RussKie, mstv, gerhardol, RussKie","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11952
11950,Correctly select destination remote branch,"Resolves #11899


## Test methodology <!-- How did you ensure quality? -->

- manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-30T13:55:42Z,2024-10-10T02:50:07Z,,,master,11899,1,3,2,1,6,1,mstv,COMMENTED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11950
11948,fix(show git-grep): Sync and use actual visibility,"## Proposed changes

`AppSettings` can be changed by another instance.
`AppSettings` are automatically updated in all other instance but are not applied to most of the UI.
Thus, the visibility of the `cboFindInCommitFilesGitGrep` can become out of sync with the checked state of `Show 'Find in commit files using git-grep'` - both in the git-grep form and in the context menu.

So, set the checked state of `Show 'Find in commit files using git-grep'` to the actual visibility of `cboFindInCommitFilesGitGrep` instead of `AppSettings.ShowFindInCommitFilesGitGrep`.

## Screenshots

### Before

![image](https://github.com/user-attachments/assets/dea975aa-e824-4846-bfc1-43288ee37e09)

### After

![image](https://github.com/user-attachments/assets/2969f859-f5de-4421-99a4-20b6a4501bb2)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-09-27T23:00:03Z,2024-09-28T20:22:46Z,2024-09-28T20:22:46Z,status: ready,master,fix/gitgrep_setting,3,12,2,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11948
11947,feat: Avoid coloring moved lines,"Fixes #11843
Depends on #11862 

## Proposed changes

* feat: Avoid coloring moved lines

Use heuristics to select which lines that are candidates to
mark inlines for, avoid lines that Git has detected
as moved lines.
(the change is not complete, a few parts required from the second commit, to be squashed befor merge)

* feat: Only parse diff files once

Only parse the document for added/removed lines once, by using
the DiffLineInfo info parsed for the linenumbering.
Previously, the document was parsed many times every time the
highlighting (including searching and marking) was changed.
This simplifies the code.

## Test methodology <!-- How did you ensure quality? -->

Some kind of tests will be added for the gap change, the other visible change has updated tests.

## Merge strategy

Rebase

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-27T22:58:23Z,2024-10-19T19:33:57Z,2024-10-19T19:33:57Z,,master,feature/difflineinfo-coloring,18,504,516,3,5,3,"mstv, RussKie, gerhardol, gerhardol, gerhardol, mstv, gerhardol, mstv, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, mstv, mstv, gerhardol, mstv, gerhardol, gerhardol, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11947
11946,fix: Align difftastic colors,"## Proposed changes

Align with updated GE colors in #11851 and use normal/dim instead of bold/normal.
GE uses dim-dim for unchanged, but the difftastic default normal is not exactly the same and need better visibility.

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/user-attachments/assets/cb17bfd6-b04c-4d1f-bb88-e869d7230ec4)
![image](https://github.com/user-attachments/assets/2bdd9317-257a-46aa-94b4-48cf890f499b)

![image](https://github.com/user-attachments/assets/dce8d59e-34f1-4725-a863-9623abded1ef)
the ""bleeding of green"" is due to incorrect vwesion used to take screenshot...
![image](https://github.com/user-attachments/assets/68f7248d-3dc2-42ea-83b4-d9f0aee3da0d)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-27T22:22:06Z,2024-09-28T20:59:16Z,2024-09-28T20:59:15Z,,master,feature/diftastic-colors,1,6,3,1,0,2,"mstv, RussKie","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11946
11937,"Use ""-D"" instead of ""-d"" when deleting unmerged branches","<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #3871

## Proposed changes

Use `git branch -D` instead of `git branch -d` when explicitly deleting unmerged branches.

## Screenshots <!-- Remove this section if PR does not change UI -->

## Test methodology <!-- How did you ensure quality? -->

- Manual test to check if deleting unmerged branches works instead of return an error message from git.

## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.46.0
- Windows 10 Enterprise 22H2

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-26T08:10:24Z,2024-09-27T14:23:42Z,2024-09-27T14:23:42Z,,master,master,2,3,2,1,1,0,"pmiossec, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11937
11930,fix!: View colors in git-blob diff files,"## Proposed changes

This PR is to simplify troubleshooting, not really something that normal users will have benefit from.

GE currently tries to apply coloring with the ""GE color engine""
for all files that ends with .diff or .patch.
This PR expands on this heuristics by trying to  present colors in
files where the Git color engine has stored the colors as ANSI
terminal sequence.

If a file to present seem to be a diff file get the file with escape
sequences and present with the ansi terminal colors if they exist.
For other diff files, use the GE color engine.

Include tests/app/UnitTests/GitUI.Tests/Editor/Diff/AnsiTerminalColors.diff
to view terminal colors.

Also include a file to present the presentation of ansi terminal
colors.

tests/app/UnitTests/GitUI.Tests/Editor/Diff/diff_added_moved.diff
tests/app/UnitTests/GitUI.Tests/Editor/Diff/diff_removed_moved.diff
will also be used in follow ups

Note that all sample diff files are not displayed as they would be if Git
displays them

 * tests/app/UnitTests/GitUI.Tests/Editor/Diff/SampleCombined.diff
 Not stored with colors
The output is not changed

* tests/app/UnitTests/GitUI.Tests/Editor/Diff/SampleCombined.diff
Not stored that this is a combined diff, so line numbers are not detected.

* tests/app/UnitTests/GitUI.Tests/Editor/Diff/SampleDifftastic.diff
Not stored that this is a difftastic file, so the GE adjustments are not done.
fix: presentation tweak of command cache commands
command 
Easier to copy the commands when viewing/debugging cache.

## Screenshots <!-- Remove this section if PR does not change UI -->

Syntax highlighting is deactivated to not distract
After includes #11851/#11862

![image](https://github.com/user-attachments/assets/34485826-1d13-4176-b4bf-ae1a4755def5) ![image](https://github.com/user-attachments/assets/6431aad1-9757-4b1f-80e7-3d6e6b7a256a)


![image](https://github.com/user-attachments/assets/9882b2aa-5929-4b8e-8850-0595d87f29d2) ![image](https://github.com/user-attachments/assets/1413c90a-8bd5-40ef-972b-3a5ec3f3f85b)


![image](https://github.com/user-attachments/assets/afd67545-0204-4ab4-8105-fbcd358d2b98) ![image](https://github.com/user-attachments/assets/936dedaa-782a-462c-9e4f-413affdd2cbc)


![image](https://github.com/user-attachments/assets/d8ef17dd-c6ec-4a8b-a132-f659a4d45bc1) ![image](https://github.com/user-attachments/assets/f130454c-893b-49a3-bc5c-cc2cd858649c)


![image](https://github.com/user-attachments/assets/5d13ee62-dc59-4e4e-93ee-0a9bacac6f32) ![image](https://github.com/user-attachments/assets/aef7600e-9268-4427-ad06-b7eba7841bc3)

## Test methodology <!-- How did you ensure quality? -->

Manual - for debugging

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).
(Could be rebase merged too, but the first commit is very minor.)

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-20T19:48:01Z,2024-09-25T20:06:52Z,2024-09-25T20:06:52Z,,master,feature/view-diff-blob,9,95,8,3,0,1,"mstv, gerhardol, mstv","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11930
11927,"Use ""real"" GitUICommands instance","Resolves #11906



## Test methodology <!-- How did you ensure quality? -->

- manually

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-18T11:56:10Z,2024-09-25T12:04:14Z,2024-09-25T12:04:14Z,,master,11906,2,6,6,1,1,2,"pmiossec, RussKie, mstv, RussKie","APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11927
11923,fix: Allow ^and .. in manual branch filters,"Fixes #](https://github.com/gitextensions/gitextensions/issues/3165#issuecomment-2352794359)

## Proposed changes

Allow ranges in Branches quick search
With this, it possible to search branches with ^ .. ... in the search box
Previously only arguments starting with -- was excluded from git-rev-parse checks if it was not a known branch/tag so the arguments were not allowed.
The check that there is a valid reference for ^branch is there, no such check for branch2..branch1 though.

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-16T22:11:36Z,2024-09-25T20:02:12Z,2024-09-25T20:02:12Z,,master,feature/i3361-branch-filters-cli,2,7,6,1,0,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11923
11922,fix: Always present git inserted as Header,"Part of #11831, that PR reports on the Git behavior to insert the information rather than the GE presentation.
I do not want to manipulate the git-diff output here, which is what is requested in #11831.

## Proposed changes

Git may insert ""\ No newline at end of file"" in the end lines of a diff, this was not presented as Header unless last line.
(This printout may appear before last line in addition to the last line.)
Incorrect line numbers and not extra gray background.
Note that all printouts with '\' as first chars could be handled this way, the first position is special (+/-/@ after the header).

## Screenshots <!-- Remove this section if PR does not change UI -->

See 1e1b946b65669c232db8eef55efb378d41a44b82

### Before

![image](https://github.com/user-attachments/assets/4861337f-6cff-4c04-a69f-affa2d20ace0)

### After

![image](https://github.com/user-attachments/assets/601b281b-2f58-4d95-b358-f6624fdd5a9a)

## Test methodology <!-- How did you ensure quality? -->

A test is added in an upcoming PR, some restructuring is done to tests and I prefer to wait on that. 
(PR awaits #11851 and #11862).

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-16T19:59:10Z,2024-09-17T19:07:32Z,2024-09-17T19:07:32Z,,master,feature/i11831-no-newline-header,1,3,1,1,2,0,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11922
11921,fix: Merge git-diff textmarkers separated by newlines,"Follow up to #11887 
Adds tests, refactor a little, slightly more performant and merges some more text markers.
This was discussed with #11843 but is not strictly needed (but simplifies that PR too).

## Proposed changes

Number of text markers affect performance, merge with previous text marker if the new is directly following or only separated by newline.

* do not color empty \r

git-diff tries to color \r also if diff.colorMovedWS=no This has no visible effect and is just polluting the markers.

## Screenshots <!-- Remove this section if PR does not change UI -->

No change, \r\n are never colored.

## Test methodology <!-- How did you ensure quality? -->

Tests are added.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-16T19:35:22Z,2024-09-18T19:12:12Z,2024-09-18T19:12:12Z,,master,feature/newline-textmarkers,2,133,32,2,0,0,"mstv, gerhardol, mstv, mstv, RussKie, gerhardol","COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11921
11917,FormCommit: Disable ResetSoft if command not applicable,"Fixes #11894

## Proposed changes

- FormCommit: Disable ResetSoft if the git command will not be applicable, i.e. if ""HEAD~1"" does not exist

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

exception (refer to issue)

### After

![image](https://github.com/user-attachments/assets/bb08bfda-f2da-460e-98d5-fee9ce1132ca)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-09-14T13:36:00Z,2024-09-15T08:54:02Z,2024-09-15T08:54:02Z,,master,fix/11894_disable_reset_soft,1,5,1,1,0,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11917
11916,FileStatusList: Reuse context menu separators,"Fixes #11909

## Proposed changes

1. There are used different ContextMenuStrips for files and for submodules.
The menu items are added on menu open - and automatically removed from the other menu.
When re-adding them, the separators must not be created anew (as it is done for `_openInVisualStudioSeparator`).

2. Set the visibility of `FormCommit.toolStripSeparatorScript` as in https://github.com/gitextensions/gitextensions/commit/844050a9fd4a5d3a93a4888a2f6e5d424d7e1ac0 (done for all usages of `AddUserScripts`).

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

see issue

### After

no multiple separators

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-09-13T21:21:20Z,2024-09-15T08:53:09Z,2024-09-15T08:53:09Z,,master,fix/files_context_menu,2,13,14,4,0,1,"gerhardol, RussKie, mstv, mstv, RussKie, mstv, drewnoakes","COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11916
11915,fix: support Git < 2.26 with bright colors,"https://github.com/gitextensions/gitextensions/pull/11847#issuecomment-2346101789

## Proposed changes

Git before 2.26 do not support the bright attribute for colors. As a workaround reverse bold is set, which has occasionally derived white foreground colors.
This doeos not change the appearance, except for the situations that #11847 addressed. The workaround for #11847 would have to be done for all Git users with < 2.26

Note: Adding the version to IGitVersion would require a change of all plugins to change this. Even if this is done for 5.0.1 I rather change this at this single usage.

An alternative is to raise LastVersionWithoutKnownLimitations from 2.15 to 2.26, which is a little steep.
I have whish to support 2.25 as that is the version in Ubuntu 20.04, not very important though.

## Test methodology <!-- How did you ensure quality? -->

Manual, faking version

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-13T21:01:57Z,2024-09-15T11:14:34Z,2024-09-15T11:14:34Z,,master,feature/p11847-git25-bright,1,15,4,1,2,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11915
11913,feat(settings): deeper checks for GitExtensions install directory,"* Check that the folder exists
* Check that it is set to the currently running instance GE install path

Make GE config more reliable. Related to https://github.com/gitextensions/gitextensions.vsix/issues/33#issuecomment-2348488930

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->
- Git Extensions 33.33.33
- Build 5ac26f6ed7cd0d8da2f8fe1f629f4de3b77948fb (Dirty)
- Git 2.45.0.windows.1 (recommended: 2.46.0 or later)
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.8
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.31 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.33 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.20 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.7 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.8 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-13T11:13:18Z,2024-09-17T07:42:16Z,2024-09-17T07:42:16Z,,master,reliability-installdir-registry-check,1,7,1,1,0,1,"RussKie, RussKie, gerhardol, RussKie, gerhardol, RussKie, pmiossec","APPROVED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11913
11912,chore: Update wix to v3.14.1 (security update),"No more need to ignore warning NU1903 raised by Wix package <= v3.14.0
(better fix for #11574 than ones done in #11575 and #11911 )

https://wixtoolset.org/news/2024/02/06/wix-v4.0.4-available/

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11574


## Test methodology <!-- How did you ensure quality? -->

- Build successful in AppVeyor

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-13T07:49:46Z,2024-09-17T07:42:44Z,2024-09-17T07:42:44Z,,master,update-wix,2,2,2,1,4,3,"mstv, gerhardol, RussKie","APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11912
11911,Move NoWarn=NU1903 to the Wix PackageReference,"
https://github.com/gitextensions/gitextensions/issues/11574 @RussKie 

## Proposed changes
- Instead of suppressing warning globally for the repo, suppress it on the single package reference where its needed.  This lets GitExtensions still see warnings for other vulnerable packages.

## Test methodology <!-- How did you ensure quality? -->

- Restore before change - works
- Remove NoWarn - fails with NU1903
- Add NoWarn to package reference - works again

## Test environment(s) <!-- Remove any that don't apply -->

Windows, dotnet 9.0 preview 7 SDK

## Merge strategy
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).

I agree that the maintainer squash merge this PR (if the commit message is clear).

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-12T22:56:33Z,2024-09-13T04:38:59Z,2024-09-13T04:38:59Z,,master,reduceNoWarnScopeNU1903,3,3,2,1,4,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11911
11900,Correctly escape paths,"Fixes #11896
Fixes #11897

![image](https://github.com/user-attachments/assets/4e241541-76b3-4c0d-b2f5-9970a04f3dee)


## Test methodology <!-- How did you ensure quality? -->

- manual
- unit tests

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-10T10:33:55Z,2024-09-11T21:45:00Z,2024-09-11T21:45:00Z,,master,11897,9,120,26,1,2,1,"mstv, RussKie, gerhardol, mstv","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11900
11893,Fix NRE in scripts if `arguments` unset,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11892

## Proposed changes

Handle unset script arguments which result in an NRE when a script is invoked (before the Settings dialog is opened - this sets all unset arguments to `""""`).

## Screenshots <!-- Remove this section if PR does not change UI -->

## Test methodology <!-- How did you ensure quality? -->

- manual
- unit tests

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-09T11:25:43Z,2024-09-09T21:03:35Z,2024-09-09T21:03:35Z,,master,11892,5,45,16,1,0,2,"mstv, gerhardol","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11893
11889,Update README.md to v5.0,,closed,2024-09-09T00:42:00Z,2024-09-09T12:06:52Z,2024-09-09T12:06:52Z,,master,readme,2,6,19,1,0,0,"mstv, RussKie","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11889
11888,fix: LineNumber presentation for Git word-diff,"
## Proposed changes

Tune the heuristics to get word-diff line numbers. If the diff only had added or removed chars, only added/removed line numbers were presented.

There are still many situations where the Git output is incomplete, the line numbers will be incorrect still.
Comments added to the code, trying to explain the issues.

## Screenshots <!-- Remove this section if PR does not change UI -->

File to compare is in a private branch, did not find a good example in recent commits

![image](https://github.com/user-attachments/assets/092fc7bc-8399-4cb7-b88d-3eb1a615eb58)

with #11868 

![image](https://github.com/user-attachments/assets/2a33873b-2990-45b3-801e-63799ac87e49)

### Before

see line 20

![image](https://github.com/user-attachments/assets/10fb12eb-091f-4f3e-b33d-dd3c3c905922)

### After

![image](https://github.com/user-attachments/assets/baaf9c5a-50c8-4ce0-9635-405b14d65d83)

## Test methodology <!-- How did you ensure quality? -->

tests updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-08T17:46:29Z,2024-09-09T21:07:29Z,2024-09-09T21:07:29Z,,master,feature/git-word-diff-lineno,3,129,67,2,1,1,"mstv, gerhardol, gerhardol, mstv, vbjay","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11888
11887,fix: merge adjacent textmarkers,"## Proposed changes

Git often emits a separate sequence for the first +/-, merge this with the reminder of the line.
This is a minor performance improvement (probably not possible to detect),
for big files number of textmarkers slow down.

Also set the terminal backcolor to SystemColors.Window if unset (instead of hardcoding to White).

## Test methodology <!-- How did you ensure quality? -->

Tests adjusted

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-08T17:27:00Z,2024-09-09T20:17:15Z,2024-09-09T20:17:15Z,,master,feature/merge-adjacent-textmarkers,2,21,17,1,0,2,"RussKie, mstv","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11887
11884,"Add navigation commands ""Go to first / last parent commit""","Fixes #11863

## Proposed changes

- Add navigation commands `GoToFirstParent` / `GoToLastParent` to the RevisionGridControl and to the FileStatusList of the RevisionGridControl
  (hotkeys `Ctrl+Left` / `Ctrl+Right` are free yet and can be assigned manually)
- Add icon to `GoToCommonAncestor`

I use this for following the main branch or for entering the feature branch, respectively.
Note: Left and right do not always match the graph - but strictly the merge direction.

`GoToFirstParent` is almost the same as `GoToParent`. But when moving down and up in branches, `GoToParent` chooses the parent commit from the navigation history.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![grafik](https://github.com/user-attachments/assets/fdaccd5f-a454-4cbe-8254-5845ca06a8a3)

![grafik](https://github.com/user-attachments/assets/94178417-bed8-4994-bdd7-69e956a5fbc2)

### After

![image](https://github.com/user-attachments/assets/8c71d4a2-aa17-4d48-9478-a48b250e9e1c)

![image](https://github.com/user-attachments/assets/16fc74c5-c724-4b21-ab9e-b5af3d9aa1b7)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-09-06T21:31:37Z,2024-09-11T22:57:38Z,2024-09-11T22:57:38Z,,master,feat/11863_gotolastparent,11,113,0,2,1,1,"gerhardol, gerhardol, mstv, RussKie","COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11884
11871,fix: RunCommand() should not throw when exit is checked,"Fixes #11869 

## Proposed changes

Some methods intend to check the Git output, but the command always throws at exit.
throwOnErrorExit need to be configurable for these methods.
Quotes were additionally quouted too (done in QuoteNE())

This occurs for instance when checking the characters in a branch name and staging files.
Note that the command still echoes the branchname to the console.

While Git allows quotes in branch names, Windows does not (this is a file) allow quotes in the name.

Note: There are a few calls of RunCommand() that could be supressed in addition to those thatactually check the output, but I left it at the checked calls.
This cannot be be too commonly occurring as the throwOnErrorExit checks were added in 4.1 or 4.0.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

NBug

### After

![image](https://github.com/user-attachments/assets/492dfadf-3214-4c7d-a275-7f00c9569902)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-02T20:45:40Z,2024-09-04T19:46:30Z,2024-09-04T19:46:30Z,,master,feature/i11869-create-branch,4,21,37,3,0,0,"RussKie, gerhardol, mstv, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11871
11868,Remove seconds from commit date display (#11812),"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11812

## Proposed changes
- It changed the commit date format in commit lists from `YYYY-MM-DD HH:MM:SS` to `YYYY-MM-DD HH:MM`.


## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![スクリーンショット 2024-09-01 202240](https://github.com/user-attachments/assets/dec54cf0-0ecd-42ee-b8bd-d686047abecb)



### After

![スクリーンショット 2024-09-01 203256](https://github.com/user-attachments/assets/abc3a890-39f8-45cd-99d5-bd740d082123)


## Test methodology <!-- How did you ensure quality? -->
- manual


## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-01T12:15:43Z,2024-09-08T23:31:33Z,,:scroll: status: needs cla,master,modify-gridview,1,1,1,1,11,1,mstv,COMMENTED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11868
11865,Adjust ToolStripComboBox size based on DPI scaling,"## Proposed changes

- It seems that `ToolStripComboBox` is immune to AutoScaling things.. thus it's necessary to perform the scaling manually
  - Manually scale all instances of `ToolStripComboBox`
- Fix gpg drop down width

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before / After

![image](https://github.com/user-attachments/assets/9e94cb78-872e-420f-a1eb-57d2155e4ed6)
![image](https://github.com/user-attachments/assets/f68b2bbe-d9cc-4740-9486-b41eea905e34)

---

![image](https://github.com/user-attachments/assets/b365f7e0-d677-424d-9585-4c8ef2f1d5a8)
![image](https://github.com/user-attachments/assets/1c91599c-4d19-484d-a107-1a31850e96a8)

---

![image](https://github.com/user-attachments/assets/9485eacb-723f-4a0b-952e-d63cf4b03819)
![image](https://github.com/user-attachments/assets/ef72c258-cd18-437d-8bd4-6106fa20aaee)



## Test methodology <!-- How did you ensure quality? -->

- Manually at 1x and 2x scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 4K 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-31T19:32:40Z,2024-09-16T04:36:47Z,2024-09-16T04:36:47Z,,master,toolstripcombobox-dpi-fixes,4,73,0,5,4,4,"mstv, RussKie, mdonatas, RussKie, RussKie, mstv, mdonatas, mdonatas, mdonatas, mstv, mdonatas, mstv, RussKie, mdonatas, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11865
11864,Make DropDownWidth calculation Dpi aware and account for vertical scrollbar,"## Proposed changes

- Take DPI into account when setting ComboBox width
- Take `DisplayMember` into account
- Take vertical scrollbar into account
- Allow for narrower drop downs

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Combo box is not adjusted for DPI
Max width at 1x scale is 600px, screenshot at 2x scaling

![image](https://github.com/user-attachments/assets/7bae7b27-1792-4e40-a09d-7d6efea2a35c)


### After

`Commit:` **Call ResizeDropDownWidth with Dpi adjusted values**

Weird; why is it so wide?..
![image](https://github.com/user-attachments/assets/f3ee4e6b-e3a0-4e45-aa90-67dd03b35192)

---

### DisplayMember

Turns out some combo boxes have their `DisplayMember` set to something other than a value of `.ToString()` and the width is measured based on a wrong value
`Branches.DisplayMember = nameof(IGitRef.LocalName);`

### After

`Commit:` **Measure combo box item's displayed value width**

![image](https://github.com/user-attachments/assets/c91f7f15-61e2-4975-a4b2-abdff6e21b0f)

---

### WS_VSCROLL

Turns out, when setting combo box drop-down width `comboBox.DropDownWidth = ...`, one needs to take vertical scrollbar's width into account

### After

`Commit:` **Take vertical scrollbar width into account when setting drop down width**

Nice :)
![image](https://github.com/user-attachments/assets/79917461-373d-42a2-b6fb-5581eb467327)

---

### High value of `AppSettings.BranchDropDownMinWidth = 300`

Maybe this value was picked by someone not running at 1x scaling? It seems too high.

![image](https://github.com/user-attachments/assets/72b5375d-abfb-4adb-afea-5285229d45ed)

### After

`Commit:` **Adjust AppSettings.BranchDropDownMinWidth**

![image](https://github.com/user-attachments/assets/4c45a453-2ab0-49f5-bad1-fcda6280c33a)


## Test methodology <!-- How did you ensure quality? -->

- Manually with 1x and 2x scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 4K 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-31T13:13:34Z,2024-09-16T04:34:26Z,2024-09-16T04:34:26Z,,master,combobox-dpi-fixes,21,315,37,22,5,2,"mstv, mdonatas, mstv, mdonatas, mstv, mdonatas, mstv, mdonatas, mdonatas, mstv, mdonatas, RussKie, RussKie, RussKie, mdonatas, mdonatas, mdonatas, mdonatas, mdonatas, mdonatas, mdonatas, mstv, mdonatas, mdonatas, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11864
11862,Improve in-line diff highlight and add anchor markers,"## Proposed changes

- Try to find multiple identical sections in removed/added line (instead of just at begin and end of line)
- Draw anchor markers in order to indicate where a pure addition / removal is located

## Screenshots <!-- Remove this section if PR does not change UI -->

of `ScriptOptionsProvider.cs` of 25d4c139682b874af21a3a4ad94dbad9806a7385

### Before

![image](https://github.com/user-attachments/assets/00962bac-9f46-41f0-91b5-c28a5e07fde1)

### After

![image](https://github.com/user-attachments/assets/988cb662-1854-43d7-9c2e-b9dd9982c854)

## Test methodology <!-- How did you ensure quality? -->

- adapted tests
- add tests
- manual

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-08-28T17:28:16Z,2024-10-14T19:06:23Z,2024-10-14T19:06:23Z,status: ready,master,feat/inline_diff,4,282,88,2,6,3,"gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, mstv, mstv","COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11862
11858,Expose git-grep in settings and context menu,"Addendum to #11350


## Proposed changes

- Expose ""git-grep"" search in Settings
- Expose ""git-grep"" search in the context menu

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/82a194d3-cad4-4045-bad6-aab61553b389)
![image](https://github.com/user-attachments/assets/0a5d63ee-cd4f-4d6d-8f77-7dafe4b449fb)

### After

![image](https://github.com/user-attachments/assets/473164f9-707d-4a8a-9c19-6645d691732b)
![image](https://github.com/user-attachments/assets/b933808d-f640-41be-ba61-2f27b8dc3077)
![image](https://github.com/user-attachments/assets/f90fdef4-5212-4142-bf30-3814361118bf)


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-27T09:52:22Z,2024-09-27T21:25:12Z,2024-09-27T21:25:12Z,,master,gitgrep,16,812,470,2,20,7,"gerhardol, gerhardol, RussKie, gerhardol, RussKie, mstv, gerhardol, RussKie, RussKie, gerhardol, mstv, gerhardol, mstv, RussKie, gerhardol, RussKie, mstv, RussKie, mstv, gerhardol, gerhardol, gerhardol, RussKie, RussKie, RussKie, RussKie, gerhardol, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11858
11855,fix: try-catch for FileSystemWatcher,"Fixes #11854

## Proposed changes

Add try-catch for FileSystemWatcher, as this can raise FileNotFoundException. This addresses exceptions with interactive rebase editor for the FileSettingsCache in WSL.

## Test methodology <!-- How did you ensure quality? -->

Manual use

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-25T19:18:44Z,2024-08-28T20:16:03Z,2024-08-28T20:16:03Z,,master,feature/i11854-fileditor-filewatcher,3,34,12,3,0,0,"mstv, gerhardol, gerhardol, mstv, gerhardol, mstv, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11855
11853,feat: Recommend Git 2.46.0,"
## Proposed changes

Recommend the latest release version

## Test methodology <!-- How did you ensure quality? -->

manual use

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-25T16:13:20Z,2024-08-26T07:26:07Z,2024-08-26T07:26:07Z,,master,feature/git-2.46,1,1,1,1,0,0,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11853
11851,Diff View: Match similar lines in changed blocks,"## Proposed changes

- Detect indented lines
- Then match by common words
- Reduce the highlight (from git) for identical parts of the line - instead of marking the different part
- Remove highlighting of filenames in the diff header because their background highlighting was removed in f201220e8b77f5ab218277f60fd3e008c1ee5041
- Some refactoring into functions

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

`FormRevertCommit.cs` in 6a9f3c01b1c988d5a01369a5f54020115022a5cf

![image](https://github.com/user-attachments/assets/d0ff86e4-ffce-41f8-ad03-10c954e7215d)

### After (final variant)

![grafik](https://github.com/user-attachments/assets/2e096864-b8cd-4657-81a0-f67319471e89)

### After (intermediate variant with bold highlight)

![image](https://github.com/user-attachments/assets/678630e4-6053-4040-b4db-296ab8dc1946)

## Test methodology <!-- How did you ensure quality? -->

- some additional tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-08-24T21:00:10Z,2024-09-27T20:54:03Z,2024-09-27T20:54:03Z,":eyeglasses: status: needs review, status: ready",master,feat/multiline_diff,7,519,70,7,20,5,"gerhardol, mstv, mstv, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, mstv, gerhardol, RussKie, gerhardol, mstv, pmiossec, gerhardol, mstv, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11851
11850,feat: GitCache: Add current directory to key,"Depends on #11848 

## Proposed changes

Git cache uses the command as the cache key. However a sha could
theoretically be duplicated in repos, so the path is added.
(This means that multiple clones (like worktrees) are no longer cached.)

Clean escape sequences before storing in the cache to speed up
fetching information from the cache.
Clean escape is also added to the cache key.

Cache DiffTastic commands, add environment variables as cache keys.

--

There is no strong requirement to include this PR in 5.0, but it improves DiffTastic usage in reviews. I switch the different mode several times per file and the delay to open difftastic is annoying.

## Test methodology <!-- How did you ensure quality? -->

The cache tests are updated - only the format of what is changed that is changed.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-23T20:50:02Z,2024-08-28T20:15:18Z,2024-08-28T20:15:17Z,,master,feature/cache-dir-key,14,108,66,6,2,0,"RussKie, mstv, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, RussKie, mstv, gerhardol, mstv, gerhardol, mstv, gerhardol, mstv, RussKie, RussKie, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11850
11849,fix: bold attributes applies to both fore/back,"
## Proposed changes

Related to #11847 

The handling of ANSI escape sequences was probably not completely correct (there is no clear spec...).
All direct attributes applies to all colors specified.

So git colors ""black bold red"" and ""black bold red"" are translated to the sequence ""1, 30, 41"" which will render the same as  ""brightblack brightred"" (""90, 101""), but ""black brightred"" (""30, 101"") is different.
Attributes should not be ""persistent"" if a ""bright"" color is set explicitly.

The implementation is slightly simplified too.

In reality, the implementation would not be a major issue as attributes are not often used in combination like this.

## Test methodology <!-- How did you ensure quality? -->

Tests are mostly unchanged.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-23T19:34:03Z,2024-08-25T18:32:08Z,2024-08-25T18:32:08Z,,master,feature/ansi-bold-attribute,2,105,141,3,1,1,"RussKie, gerhardol, RussKie, mstv","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11849
11848,feat: Unprintable chars in cache viewer,"
## Proposed changes

To simplify debugging of parsing of GE processing
of Git output.

Related to discussions in #11843, #11831

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/5cd26399-144d-4b24-aff0-b32db95cfe54)

### After

![image](https://github.com/user-attachments/assets/f9b7e4a3-747c-4bf2-9c76-12dc75aca40a)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-23T18:59:40Z,2024-08-25T03:30:12Z,2024-08-25T03:30:12Z,,master,feature/cache-viewer-nonprintable,1,15,1,2,0,1,"RussKie, mstv, gerhardol, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11848
11847,fix: Force black foreground colors for bold in moved diff,"
## Proposed changes

Always use black as foreground colors for moved lines. GE may calculate the color to be white, this is a an override to avoid the low contrast without risking breaking other scenarios.

This can be seen in https://github.com/gitextensions/gitextensions/issues/11843#issue-2473084897
even if that issue is about something related.
I cannot reproduce, this is a good enough default configuration as theming is limited anyway.
(and colors can be overridden with git-config)

Note that colors set as ""black brightyellow"" instead of ""black yellow bold"" as that has a separate meaning - a separate PR will clarify.

## Screenshots <!-- Remove this section if PR does not change UI -->
white foreground is configured in debugger, cannot reproduce.

![image](https://github.com/user-attachments/assets/4f137997-fb5d-4b52-b925-832c1df12aa0)
![image](https://github.com/user-attachments/assets/c7303c7a-8b34-4cdb-af32-e349d0afd3ed)

![image](https://github.com/user-attachments/assets/dd004c3e-6f4f-4f7e-a49e-7749801c8370)
![image](https://github.com/user-attachments/assets/4c44acb6-eba6-4835-a338-9ec1bfa87255)

![image](https://github.com/user-attachments/assets/31223b74-4458-4bcd-b11a-5b6c0c88a92e)
![image](https://github.com/user-attachments/assets/1301d5c6-b7f6-4b94-9a10-e64fd74ef3a9)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-22T21:03:12Z,2024-08-25T03:30:51Z,2024-08-25T03:30:51Z,,master,feature/ansi-black-foreground,1,10,6,1,3,1,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11847
11846,fix(DiffHighlightService): Skip unchanged char after pure addition/removal,"## Proposed changes

`DiffHighlightService.MarkDifference`:
- search the end of the diff back to `beginOffset` including
- avoid accessing characters out of range, i.e. before `beginOffset`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/69c8c294-67d9-42a5-aafa-9d83b8803b45)

### After

![image](https://github.com/user-attachments/assets/dc1f9800-9193-4dce-8128-56033f72113c)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-08-21T18:18:22Z,2024-08-24T14:43:46Z,2024-08-24T14:43:46Z,,master,fix/inline_diff,1,11,3,1,7,1,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11846
11842,fix: WslGitPath in FormProcess,"Fixes #11839

## Proposed changes

Use the hidden read-only setting WslGitPath also in FormPath (""popup"" commands like push and fetch) as all other Git commands executed in WSL (a few commands in WSL uses Windows Git).

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-17T17:52:50Z,2024-08-17T18:42:47Z,2024-08-17T18:42:47Z,,master,feature/i11839-wslgit,1,1,1,1,0,0,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11842
11841,fix: Allow user to override git-grep color,"## Proposed changes

The intention was to allow the user to override the git-grep color, this was not implemented.
Also allows for removal of a routine.

Note: SetIfUnsetInGit() is used in DiffHighlightService too, but it is not worth it to share the method.

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-16T20:30:16Z,2024-08-17T18:05:39Z,2024-08-17T18:05:39Z,,master,feature/user-override-grep-color,3,12,27,2,0,1,"mstv, gerhardol","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11841
11838,fix: Tweak difftastic colors,"## Proposed changes

Use reverse colors also for difftastic bold colors, to improve visibility
By default difftastic use normal colors, just like diff.
This was modified to use reverse color for normal red/green, but difftastic uses bold for changed words.
https://github.com/Wilfred/difftastic/blob/master/src/display/style.rs#L313
https://github.com/Wilfred/difftastic/blob/master/src/display/style.rs#L368
https://github.com/Wilfred/difftastic/blob/master/src/display/style.rs#L384

Note that difftastic uses dim colors for ""unchanged blocks"" like when there are only whitespace changes.
This PR does not change that, see an example below of how that would look.
https://github.com/Wilfred/difftastic/blob/master/src/display/style.rs#L396

Darken some foreground colors to improve visibility, even if the difference between normal and bold is smaller.
Even if the colors are not directly used in difftastic or other diffs, they could by configured to used by users.
Also, the dimmed colors are partly used by difftastic for ""non interesting"", example below is changed just for whitespace.

## Screenshots <!-- Remove this section if PR does not change UI -->

![difftastic1](https://github.com/user-attachments/assets/651fb301-4166-4102-8547-cd6fb878b3e2) ![difftastic2](https://github.com/user-attachments/assets/a6195cab-5d9b-4af3-8fa1-17604384cb1c)


Normal diff and difftastic default
![difftastic3](https://github.com/user-attachments/assets/be730d9e-2fab-40dc-80ec-7df68246e21b)
![difftastic0](https://github.com/user-attachments/assets/27fba9da-a8eb-4cef-9982-5fbf5ce4cec8)

![resx1](https://github.com/user-attachments/assets/66b4bcc9-5874-4316-8fa9-94aac7b99ca6) ![resx2](https://github.com/user-attachments/assets/d5add29c-1bb9-419d-a7e1-18b9103f85ca)

The above diff with normal, then with dim background (not used)
![resx3](https://github.com/user-attachments/assets/6fcab207-94b7-42cf-9227-055ea377f482) ![resx4](https://github.com/user-attachments/assets/2d92eb2f-be5f-42e8-864e-f5a6774ca8ae)


![color1](https://github.com/user-attachments/assets/5d4dc8ce-1a41-4e7b-b59d-11e515ab5f6f) ![color2](https://github.com/user-attachments/assets/a25d6d40-5a83-4a67-8ebe-db5ee90c87a9)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-14T20:37:46Z,2024-08-17T18:41:33Z,2024-08-17T18:41:33Z,,master,feature/difftastic-reverse-bold,3,7,7,2,1,1,"mstv, gerhardol, mstv","COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11838
11837,Fix Revision Links settings page DPI,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Fix DPI
- Align `Links` label to the `left`

This ""bug"" has made me both sad and angry.. look at the _200% before_ screenshot.. ""drowners-donut"" icon is not clickable. In order to get the link, I had to make a screenshot and use OneNote's OCR to copy the text! I honestly thought this was an incarnation of the most evil UX I've ever encountered....... turns out it's a DPI issue 😡

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

100%
![revisionlinks_old_100](https://github.com/user-attachments/assets/94de82ab-062c-461b-8dd8-9883f3570e1c)

200%
![revisionlinks_old_200](https://github.com/user-attachments/assets/b2d5a0c5-1845-42be-9b0e-776b2b2f60e6)


### After

100%
![revisionlinks_new_100](https://github.com/user-attachments/assets/a93cc5d6-2b30-43e0-8dd5-8c86fd96b5df)

200%
![revisionlinks_new_200](https://github.com/user-attachments/assets/ee5ccc0b-18c7-4a16-9807-1a0fdbe0b390)


## Test methodology <!-- How did you ensure quality? -->

- Manually with 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 4K 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-12T19:40:15Z,2024-08-18T19:31:59Z,2024-08-18T19:31:59Z,,master,fix-revision-links-dpi,2,108,109,2,2,2,"mstv, gerhardol, mdonatas, RussKie, RussKie, gerhardol","APPROVED, COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11837
11836,Fix FormRevertCommit dpi,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Convert `FormRevertCommit` to `GitExtensionsDialog`
  - Fix its DPI in a process
  - Add Abort button
  - Align designer/form-sizing code with `FormCherryPick`
- Align forms `FormCherryPick` code with `FormRevertCommit`, they are very similar
  - Designer file mainly had controls moved around
    - `label2` got a proper field and got renamed to `lblAnotherRev`
  - Code file had an improvement for how to calculate controls size (mainly because previous approach for some reason didn't work with `FormRevertCommit`)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

`FormRevertCommit` 100% 1 parent
![revert_old_100_1parent](https://github.com/user-attachments/assets/e46d6b4b-bc27-4ef7-aee1-35d4dee9229b)

`FormRevertCommit` 200% 3 parents (notice column width and button size)
![revert_old_200_3parents](https://github.com/user-attachments/assets/7b48f901-b26c-4a63-bfb9-4340318e3dff)


### After

`FormRevertCommit` 100% 1 parent
![revert_new_100_1parent](https://github.com/user-attachments/assets/c737d703-71b2-4ac5-9b41-ce0028734e6d)

`FormRevertCommit` 100% 2 parents
![revert_new_100_2parents](https://github.com/user-attachments/assets/796422b9-f7b4-4086-9b01-c5e596a6d49c)

`FormRevertCommit` 100% 3 parents
![revert_new_100_3parents](https://github.com/user-attachments/assets/cfce8399-2abd-44d9-a36b-00f67c87b68d)

`FormRevertCommit` 200% 1 parent
![revert_new_200_1parent](https://github.com/user-attachments/assets/9e1b2d28-9b87-4024-870f-019198f2d7f8)

`FormRevertCommit` 200% 2 parents
![revert_new_200_2parents](https://github.com/user-attachments/assets/da1be9fd-8a99-451d-a106-956f23d82457)

`FormRevertCommit` 200% 3 parents
![revert_new_200_3parents](https://github.com/user-attachments/assets/4fac09ca-ae2b-48ac-82c7-2da1e04382ec)

---

The only difference is that parents list view has some extra white-space at the bottom to make it evident that there are no more items

`FormCherryPick` 200% 1 parent
![cherrypick_new_200_1parent](https://github.com/user-attachments/assets/335c8e62-929c-4abf-8131-4adc28c9a16d)

`FormCherryPick` 200% 2 parents
![cherrypick_new_200_2parents](https://github.com/user-attachments/assets/0eaef934-fa54-4a9d-8846-1a036dd6e6d0)

<!-- TODO -->

## Test methodology <!-- How did you ensure quality? -->

- Manually at 100% 175% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 4K 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-12T19:02:32Z,2024-08-18T19:32:48Z,2024-08-18T19:32:48Z,,master,fix-form-revert-dpi,7,366,294,3,6,3,"gerhardol, mstv, RussKie, mstv","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11836
11833,fix: Keep linenumber when switching viewer,"Related to https://github.com/gitextensions/gitextensions/pull/11832#issuecomment-2278328551

## Proposed changes

Try to keep the linenumber in the fileviewer if the identification for the contents is the same (using the filename as identification).

Previously the line was restored if the number of lines were the same or if it was a diff and the first line matched.
Some situations where this did not work:
* Switch diffviewer to/from difftastic (as header differs)
* Select a new commit for a file in the file tree, where the number of lines differed in the other commit.

## Screenshots <!-- Remove this section if PR does not change UI -->

![filetree-nostore-changed-file](https://github.com/user-attachments/assets/5ae62857-ac77-42c0-a571-bcdf03135f99) ![filetree-restore-changed-file](https://github.com/user-attachments/assets/4f7273bc-0a4b-428d-80d2-8336b4b96926)

![difftastic-norestore](https://github.com/user-attachments/assets/3ad98474-d63c-4536-ae07-9ef2c939e09f) ![difftastic-restore](https://github.com/user-attachments/assets/94cb92a4-85a5-4cd9-a90b-eeb2e4959f3e)

## Test methodology <!-- How did you ensure quality? -->

Tests updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-09T21:55:01Z,2024-08-17T18:03:54Z,2024-08-17T18:03:54Z,,master,feature/fileviewer-restore-line,5,135,29,3,1,1,"mstv, gerhardol, mstv, gerhardol","APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11833
11832,fix(file tree): Do not force line first line when changing commit,"## Proposed changes

Keep the current linenumber when switching to a new commit in file tree, instead of always resetting to first line.

This is a regression from 9bbd08ff2985e46df1a30edc94f1dddb3ba9d247 in 4.2
(The change in that commit is otherwise OK. cc @pmiossec)

This is useful when viewing a file in the file tree (possibly filtered the revision grid), then selecting various commits.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![filetree-reset-lineno](https://github.com/user-attachments/assets/7ddc39c9-8c5b-410f-8f77-b0f41844b965)

### After

![filetree-keep-lineno](https://github.com/user-attachments/assets/6611d26c-1215-4bd1-a5d9-e774f0875528)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-08T21:42:24Z,2024-08-09T21:30:01Z,2024-08-09T21:30:01Z,,master,feature/restore-lineno-file-history,1,1,1,1,3,1,"RussKie, mstv, mstv","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11832
11830,feat: Configure ANSI background colors separately,"Supersedes #11824 
Fixes #11821

## Proposed changes

This PR has four serial parts, the last commit could be dropped.

- feat: ANSI PrintColors also in Release builds

Enable the routine to print the ANSI terminal colors also in release builds.
The colors are used to display e.g. git-diff.

- feat: Configure ANSI background colors separately

Specify foreground/background colors for the terminal separately,
to enable themes that work better with GE colors.

Apply theme colors for difftastic: Do not change background
for bold text, to improve readability.
Only reverse video for normal red/green.

- feat: GE theme ANSI terminal colors

Adjust the ANSI terminal colors to align with the GE theme.
The background/foreground colors are separate to improve the
display for the extremely bright GE colors.

The theme is somehow based on mintty Helmhotz, but heavily modified
especially for background (reverse video) to align with the
existing GE theme colors.

- feat: moved lines in diff as reverse

If GE theme colors are applied, set moved lines as
reverse video (colored background) to match the appearances

## Screenshots <!-- Remove this section if PR does not change UI -->

Yellow foreground is still not great, but not much used by git-diff
The background (reverse) are to most used with the last commit
![image](https://github.com/user-attachments/assets/6a602482-0f7f-4df1-89b1-b79869cb1b66)  ![image](https://github.com/user-attachments/assets/5ab55f12-bfe9-4b58-ac18-786865357c19)


#### Before

![image](https://github.com/user-attachments/assets/1b93e0e8-d386-4b7e-a0d7-00cbd4ad1c8d)

![image](https://github.com/user-attachments/assets/69533ca7-c6c9-40e2-9cd8-efa92ef753e1)

![image](https://github.com/user-attachments/assets/b3e2c1b3-d324-4da7-858a-0784f116cd2e)

#### no reverse video

![image](https://github.com/user-attachments/assets/068b049b-851b-4dd9-a9d2-8bd2030b9bc7)

![image](https://github.com/user-attachments/assets/037a18eb-6203-4dff-b103-1bd54bb1e922)

![image](https://github.com/user-attachments/assets/954bd06f-9379-448d-94dc-7a01252ae92d)

#### reverse video

Not convinced that this is better, but maybe more predictable

![image](https://github.com/user-attachments/assets/7ea364bf-3600-4762-8b83-3ca98f8fe33e)

![image](https://github.com/user-attachments/assets/353b45a0-d4cb-4367-95d3-eb3988dd823e)

![image](https://github.com/user-attachments/assets/10cad2df-1961-43f0-9e84-1cc2c102aa15)

### Difftastic

Visibility is still not great, that need to be handled in difftastic itself

![image](https://github.com/user-attachments/assets/bfc79d59-bf6b-4a05-9b8d-02e9bd40a39f)

![image](https://github.com/user-attachments/assets/c7a31b4e-86ac-4a81-9549-76a692845bc3)

## Test methodology <!-- How did you ensure quality? -->

Tests are updated

## Merge strategy

- Rebase merge (PR submitter must change the commit message for the last commit).
I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-07T11:33:03Z,2024-08-09T21:08:11Z,2024-08-09T21:08:11Z,,master,feature/i11821-ansi-background-theme-colors,25,428,301,5,3,2,"RussKie, mstv","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11830
11827,feat: Dynamically calculate dim colors,"Follow up to #11823 
To be followed by a tweak of colors for #11821 

## Proposed changes

Dim(faint) colors was previously hardcoded, only related to the normal colors.
This is the normal use, bold and dim s not often used.
However, with this change the dim colors do not need explicit configuration, which simplifies #11823 (this could be merged first if required, but I prefer this way as it was implemented after).
Further color tweaks are simpler.

The method to dim is the same as in mintty.

Note: Another feature from mintty could be to separate foreground/background configuration. It does not work so well with the GE default handling (as the alternative should use the theme configuration before the GE configuration).

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/30d5e610-3dd7-468c-a2ef-75ad49383159)

Example where the moved code with alternative colors at a block change is seen.
The lines that are at the border are normal (GE tweak, is bold by default), the other lines are dimmed.
The second diff is just a reverse diff in this case.

![image](https://github.com/user-attachments/assets/119fc7da-41f3-4ef4-9810-20039c0da187)

![image](https://github.com/user-attachments/assets/53834d8e-ec5a-430c-855d-8103de26360f)

### After

The second line for fore/back is dimmed and corresponds to the third 65536 line for previous. These colors have minor changes to before.
The second dimmed line is new, not expected to be used.

![image](https://github.com/user-attachments/assets/e577c832-7099-4aca-836c-f763adb491bc)

![image](https://github.com/user-attachments/assets/2c84eb16-b039-4ee6-884e-44d5fc574fa8)

![image](https://github.com/user-attachments/assets/67e7234c-b591-42ac-9f9a-692728cd3679)

## Test methodology <!-- How did you ensure quality? -->

Tests updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-05T22:10:36Z,2024-08-07T10:50:55Z,2024-08-07T10:50:55Z,,master,feature/i11821-ansi-dim-colors,6,101,107,2,0,1,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11827
11826,fix: Migrate core.editor settings from GE x86 path,"Fixes #11819

## Proposed changes

Migrate editor settings if GE was installed in 'Program Files (x86)' before 4.3.
Only check and update global Git settings in Windows, the only set by GE.
Guess previous, migrate to current path (i.e. the first usage).

When running in debug, migration is not automatic as the debug path is probably not what should be used.

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-05T12:06:57Z,2024-08-07T10:49:17Z,2024-08-07T10:49:17Z,,master,feature/i11819-core-editor-x86-path,2,43,0,3,0,1,"RussKie, RussKie, gerhardol, mstv, gerhardol, gerhardol, mstv, mstv, gerhardol","COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11826
11824,feat: moved lines in diff as reverse,"https://github.com/gitextensions/gitextensions/issues/11821#issuecomment-2266663665

Fixes #11821

## Proposed changes

If GE theme colors are applied, also set moved lines as reverse video (colored background) to match the appearances

Not sure if I want this, the moved lines are less important.
(The default colors are slightly to bold though, also as reverse)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/cd8fb2a5-b2f2-418e-afd8-558cabe6b573)

### After

![image](https://github.com/user-attachments/assets/d4eef542-8edd-4073-abb9-ea1aef11fa3a)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-03T17:15:19Z,2024-08-07T11:37:44Z,,,master,feature/i11821-reverse-moved-lines,1,15,12,1,2,0,,,True,https://api.github.com/repos/gitextensions/gitextensions/issues/11824
11823,feat: Themeable ANSI colors,"After discussions in #11821

## Proposed changes

Add the terminal (cli) ansi color output sequences to the default theme.
This controls how e.g. ""blue"" text are presented for applicable commands, primarily the Git diff viewer.

The GE overrides like added/removed is themeable as before (overriding the Git colors).

This makes it simpler to experiment with terminal color translations, change of source is not required.

## Test methodology <!-- How did you ensure quality? -->

Manual, output of colors in debug mode

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-03T16:36:34Z,2024-08-06T09:26:20Z,2024-08-06T09:26:20Z,,master,feature/i11821-ansi-theme-colors,4,106,29,4,0,1,"mstv, gerhardol, gerhardol, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11823
11822,Change diff.wordRegex to match words,"(https://github.com/gitextensions/gitextensions/issues/11634#issuecomment-1995477095)

## Proposed changes

This affects git-word-diff output. (Ctrl-D in diffviewer) 
Suggested by @mstv , I had been testing this some time too. Not convinced it is better but maybe easier to understand

As it is now, as much as possible commonalities are chown, so changed suffixes are listed.
However, the current could also show slightly chopped up if some chars matched.

## Screenshots <!-- Remove this section if PR does not change UI -->

The first diff is better after this change, I prefer the second occurrence

### Before

![image](https://github.com/user-attachments/assets/2abb1466-fb5a-4688-ac31-4a4df5dd1242)

### After

![image](https://github.com/user-attachments/assets/fd68f544-cf86-43ed-bd21-903e72423533)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-03T12:39:48Z,2024-08-06T09:02:45Z,2024-08-06T09:02:45Z,,master,feature/i11634-diff-wordregex-tweak,1,1,1,1,0,1,"mstv, RussKie","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11822
11818,fix(avatars/initials): fix a special case causing an exception,"when generating the initials
where none of the email and name starts by a letter

and add better fallback to always return a not empty string

## Test methodology <!-- How did you ensure quality? -->

- unit tests (I don't remember the repository where I encounter this case to manual test the case)

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-07-31T09:24:51Z,2024-08-01T13:47:47Z,2024-08-01T13:47:47Z,,master,fix_avatar_initial_exception,2,20,5,1,0,1,"mstv, mstv, gerhardol, RussKie","COMMENTED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11818
11817,Update dashboard logo,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Resolves #11810

## Proposed changes

The current logo was a failed attempt at rebranding and it's been bothering me since the inception. Also I'd like to bring consistency back. 

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/85fbc315-0ee3-419a-a355-dd003a230345)

### After

![image](https://github.com/user-attachments/assets/c6a3c580-8c16-4f43-83c2-0292d82ffd10)



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-07-30T04:35:30Z,2024-08-02T00:26:09Z,2024-08-02T00:26:09Z,,master,icons,1,0,0,1,1,1,"pmiossec, mstv, gerhardol, mstv","APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11817
11811,fix: Clarify prune is for branches,"Follow up to #11571 

## Proposed changes

Just a tooltip clarification

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-07-15T20:27:43Z,2024-07-17T00:45:32Z,2024-07-17T00:45:32Z,,master,feature/i11571-fetch-prune,2,2,2,1,0,0,"pmiossec, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11811
11802,Improve Quick Search keyboard interaction,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Enable cancelling of Quick Search via `Esc` key
- Allow pasting text as Quick Search value
- ~~While Quick Search is active, enable moving through the results using `up` / `down` arrow keys~~

I've personally found that these changes have greatly improved Quick Search usability.

## Screenshots <!-- Remove this section if PR does not change UI -->

### After

In here I show how pasting could be useful (works great with pasting `sha` too); how `Esc` terminates quick search and how movement through results via `up` / `down` works

https://github.com/gitextensions/gitextensions/assets/483659/2924d532-9eb8-4dab-8f36-686b69e0494c

## Test methodology <!-- How did you ensure quality? -->

- Manually

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-07-07T14:17:13Z,2024-07-09T21:20:10Z,2024-07-09T21:20:10Z,,master,improve-quick-search,2,32,16,8,1,2,"mstv, mdonatas, mstv, mdonatas, mstv, mdonatas, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11802
11799,Improve sorting in quick git ref selector dialog,"


## Proposed changes

- Sort refs in the following order: local/remote/tags. Then sort by local ref name within each group.
- Add group separators for ease management.


## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/4403806/e436a2b3-f2d8-423e-a727-6d9d9715c4dc)
![image](https://github.com/gitextensions/gitextensions/assets/4403806/2516d960-8745-4c71-969d-9fb99e3a9250)

### After

![image](https://github.com/gitextensions/gitextensions/assets/4403806/ec1e94c4-7321-46d4-a008-4318846aeeae)
![image](https://github.com/gitextensions/gitextensions/assets/4403806/448cb92b-0c1d-42ec-bc7c-58e990b072ec)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-07-03T11:03:41Z,2024-07-13T06:02:30Z,2024-07-13T06:02:30Z,,master,sort_delete_refs,7,99,33,1,5,1,"mstv, RussKie, mstv","COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11799
11797,fix(sidepanel): Await reload before updating visibility,"Fixes #11796 

## Proposed changes

UpdateVisibility() (started when the grid is loaded) must run after all objects in the sidepanel is loaded.
Previously there could be a race condition, especially when reloading with ""current branch only"" filter.

An alternative could be to use SlimSemaphore.

Did a quick check for similar uses as in RevisionGrid, TaskCompletionSource is used in Executable.

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-06-28T22:37:50Z,2024-07-07T21:09:00Z,2024-07-07T21:09:00Z,,master,feature/i11796-rot-await-load,2,10,4,1,0,1,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11797
11795,fix(scripts): Do not quote {SelectedRelativePaths},"Fixes #11794

## Proposed changes

- fix(scripts): Do not quote `{SelectedRelativePaths}`
- fix(scripts): Support multiple values in `IScriptOptionsProvider`
  each value quoted for `{{SelectedRelativePaths}}`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- extended test

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-27T21:37:13Z,2024-08-14T18:06:06Z,2024-08-14T18:06:06Z,,master,fix/11794_script_option_provider,7,52,41,4,8,2,"gerhardol, mdonatas-trafi, mstv, RussKie, gerhardol, RussKie, mstv, RussKie, mstv, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11795
11793,Update privacy policy reference,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #

## Proposed changes

PR #11744 moved the location of the `PrivacyPolicy.md` file. This PR adjusts sources to changes.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

<!-- TODO -->

## Test methodology <!-- How did you ensure quality? -->

- 
- 
- 

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-06-24T11:49:29Z,2024-06-26T06:31:05Z,2024-06-26T06:31:05Z,,master,wip,1,1,1,1,1,1,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11793
11791,fix(DiffMergeTools): path for diff/merge command,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11741

## Proposed changes

- treat `difftool.<tool>.path` as (absolute) executable path (see [difftool doc](https://git-scm.com/docs/git-difftool#Documentation/git-difftool.txt---toollttoolgt))
- add last resort fallback to avoid empty string as command path

## Test methodology <!-- How did you ensure quality? -->

- Verify the _empty path_ mentioned in #11741 is now set correctly

## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.45.2.windows.1
- Windows 10.0.19045.4529

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](/gitextensions/gitextensions/blob/master/contributors.txt).
",closed,2024-06-17T11:58:17Z,2024-06-20T17:26:45Z,2024-06-20T17:26:45Z,:pen: status: cla signed,master,fix/difftool-path,2,18,2,1,0,2,"mstv, mstv, gerhardol","COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11791
11790,RecentReposSettings: Streamline naming,"between ""Top"", ""Recent"" and ""Anchored"" repositories

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Also:
* inverted the 2 top settings to be in the same order than list it is referring to.
* used similar label as 2 settings are referring the the same behavior for top and recent lists..

Discussed [here](https://github.com/gitextensions/gitextensions/pull/11779#issuecomment-2164942593)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/23f8e588-c563-4d23-bc42-b7e1f00f1592)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/a1a640b5-c36d-4c9b-a961-81e1e5d44b14)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-06-17T10:16:02Z,2024-06-22T20:16:36Z,2024-06-22T20:16:36Z,,master,recent_repos_settings_adjust_naming,12,296,291,2,0,1,"mstv, gerhardol, RussKie, pmiossec, gerhardol","APPROVED, APPROVED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11790
11785,FormCommit: Fixup cursor movement in message editor,"Fixes #11784
and further regression from #10730

## Proposed changes

- `EditNetSpell`:
  - disable `RichTextBox.WordWrap` in order to avoid issues with cursor position calculation (not made public by `RichTextBox`)
- `TextBoxSilencer`:
  - do not suppress keypress if there is a selection
  - evaluate position on `KeyDown` not on `SelectionChanged`
    because `RichTextBox.Text` can be empty yet on `SelectionChanged` and the selection does not change on setting `Text`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-10T19:55:08Z,2024-06-12T16:15:52Z,2024-06-12T16:15:52Z,,master,fix/11784_commit_msg,2,16,24,1,0,1,"gerhardol, RussKie","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11785
11781,fix(FileSettingsCache): Always watch repo-local settings,"Fixes #11720

## Proposed changes

Cleanup `FileSettingsCache`:
- Always watch the settings file also if the checkout does not contain that file on startup (repo open) 
- Hence remove `_canEnableFileWatcher`
- React on deletion, too
- There is no need to distinguish the kind of file change because we just need to know whether to refresh the settings or not
- Use `FileChanged` instead of assigning `_lastFileModificationDate`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual
- Remove obsolete testcase `ctor_CanEnableFileWatcher_should_be_false_if_invalid_dir` which is redundant with the existing
  `ctor_FileWatcher_EnableRaisingEvents_should_be_false_if_invalid_dir`

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-04T21:47:59Z,2024-06-11T18:44:58Z,2024-06-11T18:44:58Z,,master,fix/11720_distributed_settings,2,14,41,1,2,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11781
11780,Make graph settings non-experimental,"## Proposed changes

in preparation of upcoming release:
- Move `RenderGraphWithDiagonals` and `StraightenGraphDiagonals` to non-experimental settings

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-04T20:30:26Z,2024-06-11T22:27:27Z,2024-06-11T22:27:27Z,,master,fix/graph_diagonals,1,2,2,1,0,0,"mstv, gerhardol, gerhardol, RussKie, mstv, RussKie, RussKie","COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11780
11779,Improve pinned repos handling,"Based on PR #11790 that should be merged first.

- Add a icon to clearly see anchored repositories
- Add an option to remove pinned repositories from recent repositories (to not have duplicate repositories and save space --and user brain CPU cycles--)
- ~~Remove ""Maximum number of pinned recent repositories"" because if user add a repository to the pinned list, it's to see it (otherwise he will remove it from the list)~~

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

no ""pinned"" icons & repos duplicated

![image](https://github.com/gitextensions/gitextensions/assets/460196/107c836e-aca6-4281-b3b6-29299fc385ac)


### After

Settings:

![image](https://github.com/gitextensions/gitextensions/assets/460196/17b9291d-c040-4d3e-8f6f-64588aa209c5)



Pinned repos with icon:

![image](https://github.com/gitextensions/gitextensions/assets/460196/d14b3d3a-65cb-4ed5-8f56-7e9fed570c14)

With pinned repos not deduplicated (as before):
![image](https://github.com/gitextensions/gitextensions/assets/460196/ec342ddc-8294-42c0-9e47-7baafec09d40)

With pinned repos deduplicated (so less repo lines displayed) :

![image](https://github.com/gitextensions/gitextensions/assets/460196/3f56cb5f-0d18-4d93-b4b7-0a973028f6f3)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 392712e717aa06c55419142557156ff185d597a3
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.5
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.30 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.19 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.5 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer rebase merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-06-04T13:12:23Z,2024-07-18T21:13:30Z,2024-07-18T21:13:30Z,,master,improve_pinned_repos_handling,11,103,20,2,10,3,"mstv, mstv, mstv, mstv","CHANGES_REQUESTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11779
11775,fix(AnsiEscapeUtilities): Limit error tracing,"Fixes #11774

## Proposed changes

- `AnsiEscapeUtilities.ParseEscape`: Limit error tracing

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

you don't want to see it

### After

```
New start marker without end for grep (270, 308) in:
diff --git a/UnitTests/GitCommands.Tests/Patches/testdata/color.diff b/UnitTests/GitCommands.Tests/Patches/testdata/color.diff
new file mode 100644
index 000000000..0bfb32613
--- /dev/null
+++ b/UnitTests/GitCommands.Tests/Patches/testdata/color.diff
[36m@@ -0,0 +1,325 @@[m
[38;2;0;0;0;48;2;200;255;200m+[1mdiff --git a/GitCommands/Patches/PatchProcessor.cs b/GitCommands/Patches/PatchProcessor.cs[m[m
[38;2;0;0;0;48;2;200;255;200m+[1mindex 70b40..c1e6c 100644[m[m
[38;2;0;0;0;48;2;200;255;200m+[1m--- a/GitCommands/Patches/PatchProcessor.cs[m[m
[38;2;0;0;0;48;2;200;255;200m+[1m+++ b/GitCommands/Patches/PatchProcessor.cs[m[m
[38;2;0;0;0;48;2;200;255;200m+[36m@@ -15,19 +15,29 @@[m [mprivate enum PatchProcessorState[m[m
[38;2;0;0;0;48;2;200;255;200m+             OutsidePatch[m[m
[38;2;0;0;0;48;2;200;255;200m+         }[m[m
[38;2;0;0;0;48;2;200;255;200m+ [m[m
<snip />
[38;2;0;0;0;48;2;200;255;200m+ }[m[m


New start marker without end for grep (362, 440)

New start marker without end for grep (389, 507)

```
## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-02T17:42:38Z,2024-06-02T19:32:51Z,2024-06-02T19:32:51Z,,master,fix/patch_error_tracing,1,4,2,1,0,0,"mstv, gerhardol","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11775
11773,feat(ScriptOptionsProvider): {SelectedRelativePaths},"Relates to https://github.com/gitextensions/gitextensions/pull/11734#issuecomment-2119243843

## Proposed changes

- Turn script option `{SelectedFiles}` into `{SelectedRelativePaths}` without resolving full paths
  in order to emphasize that these paths are valid for the selected commit (and might not apply to the working directory)
- Always replace the provided options `{SelectedRelativePaths}` and `{LineNumber}` if an according `ScriptOptionsProvider` exists - at least with an empty string
  Otherwise, ""{SelectedRelativePaths}"" was passed as is to the script, which f.i. makes VS Code open a new file with the option as name.

E.g. in order to open a file in VS Code, the following background script command can be used (if the file has not been renamed or deleted; works best with VS Code setting `window.restoreWindows` set to `preserve`):
```
cmd /c code . --goto {SelectedRelativePaths}:{LineNumber}
```
(`{LineNumber}` may not exactly match for older commits and may not apply at all if multiple files are selected in the wrong sequence.)

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-02T14:36:54Z,2024-06-23T15:31:40Z,2024-06-23T15:31:40Z,release-notes-worthy,master,feature/scripts_for_blobs,6,18,29,1,0,0,"gerhardol, mstv, RussKie","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11773
11772,FormVerify: Provide more help to user,"- Improve the 2 top labels
- Add 2 explaining tooltips

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/8b42d56b-a40c-4514-9807-d01b3da034e8)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/53eb6d89-6d6d-4645-aa19-0f5d8f82ee5d)

## Test methodology <!-- How did you ensure quality? -->

- Manual 

## Test environment(s) <!-- Remove any that don't apply -->
- Git Extensions 33.33.33
- Build c5d13dbac57836b91cbf65681f14bc7cab306eb1
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.5
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.30 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.19 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.5 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-06-01T22:55:20Z,2024-06-03T07:14:44Z,2024-06-03T07:14:44Z,release-notes-worthy,master,form_verify_help,3,53,47,2,0,1,"mstv, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11772
11771,RevisionReader: Update after at most 500 ms,"Fixes https://github.com/gitextensions/gitextensions/pull/11621#discussion_r1532965374

## Proposed changes

- fix(RevisionReader): Update after at most 500 ms
- fix(RevisionReader): Define `TRACE_REVISIONREADER` for debug build only

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![before](https://github.com/gitextensions/gitextensions/assets/36601201/ef84344a-cc6e-48b4-8875-c3636c92c497)

### After

![after](https://github.com/gitextensions/gitextensions/assets/36601201/e51117a7-7a1c-4974-9409-499b458ca580)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-01T20:32:01Z,2024-06-04T19:16:35Z,2024-06-04T19:16:35Z,,master,fix/grid_update,2,6,3,2,0,0,"gerhardol, pmiossec, gerhardol","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11771
11770,fix(ShellEx): Support adding multiple files,"Fixes #11711

## Proposed changes

- fix(ShellEx): Support adding multiple files
- fix(ShellEx): Write `InstallDir` to registry on registration of the shell extension
- fix(ShellEx): Open GE with current dir as work dir

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

N/A

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/39e1905d-f5c5-4644-b55f-98d5ca2d443f)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-31T23:17:07Z,2024-06-11T22:29:14Z,2024-06-11T22:29:14Z,release-notes-worthy,master,fix/11711_shellex_addfiles,5,66,31,3,1,1,"gerhardol, RussKie, mstv, mstv, RussKie, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11770
11769,fix(ReportDubiousOwnership): Replace single quotes,"Fixes #11767

## Proposed changes

- `ReportDubiousOwnership`: Replace single quotes with double quotes in proposed git command

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

see issue

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/777502d0-b14f-4c1a-827c-0a62b28d9062)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-31T19:31:43Z,2024-06-01T11:52:56Z,2024-06-01T11:52:56Z,,master,fix/dubious_ownership,1,16,1,3,0,1,"gerhardol, RussKie, RussKie","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11769
11765,Fixup hangs moving the RevisionGrid,"Fixes https://github.com/gitextensions/gitextensions/discussions/11441#discussioncomment-7921050

## Proposed changes

- `RevisionDataGridView`: Remove double invalidate from `CacheTo`
- `RevisionGraph`: Save masses of pointer copies by switching to a permanent instance of `List<RevisionGraphRow>`
  `ImmutableArray` is not needed any longer as the `_orderedRowCache` is built and accessed from the same exclusive background task.
  `_orderedRowCache = localOrderedRowCache.ToImmutable();` is very expensive and seems to even block the UI thread although executed in a background task. 

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual (scroll down the Linux repo)

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-29T16:13:15Z,2024-05-31T18:52:46Z,2024-05-31T18:52:46Z,,master,fix/grid_perf,2,34,52,2,2,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11765
11762,Generate P/Invoke code at compile time,"## Proposed changes

`DllImport` causes binding code to be generated at run time, which can hurt startup performance. It also precludes use of NativeAOT compilation.

This change introduces the newer `LibraryImport` (.NET 7) which performs the binding at compile time via a source generator.

This fixes instances of diagnostic SYSLIB1054.

The changes here were made by a code fix, with a few exceptions:

- I had to roll a few automated changes back as they wouldn't compile.
- I had to explicitly specify string marshaling as UTF-16 in one instance.
- I had to rename a function from `SendMessage` to `SendMessageW` to avoid an exception when opening `FormCommit`.

As this last point suggests, this still uses late binding. It's just the code generation that's done up front.

There are also possible changes in `conemu` and `ICSharpCode.TextEditor`, but they would have to be filed separately.

More info on this at:

- https://learn.microsoft.com/en-us/dotnet/standard/native-interop/pinvoke-source-generation
- https://learn.microsoft.com/en-us/dotnet/fundamentals/syslib-diagnostics/syslib1050-1069

## Test methodology <!-- How did you ensure quality? -->

Manual testing. It's possible that these changes fail at run time (as mentioned above) and most P/Invoke happens in the UI, so only using the UI will draw issues out. I'd avoid merging this right before a public release, just to give time for developers in the repo to hit any issues here. That said, I ran through a bunch of UI scenarios and didn't hit any problems.

## Test environment(s) <!-- Remove any that don't apply -->

- GIT N/A
- Windows 11

## Merge strategy

I don't mind. I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2024-05-29T03:42:41Z,,,,master,p-invoke-source-generator,27,87,80,2,4,3,"mstv, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11762
11759,Fix: Correct ProjectId retrieval in GitLab BuildServerIntegration due…,"… to improved group parsing in URLs

This commit addresses an issue where the BuildServerIntegration with GitLab was failing to correctly obtain ProjectIds.

An inconsistency was encountered in parsing GitLab project URLs, particularly those with nested namespaces (e.g., `https://git.xxx.ai/aot/xdtest/agv.git`). Previously, the namespace was incorrectly parsed as `xdtest`, and the host was mistakenly inclusive of the first part of the namespace (`git.xxx.ai/aot`), leading to failed Project ID retrievals.


Fixes 


## Test methodology <!-- How did you ensure quality? -->

Given a project URL `https://git.xxx.ai/aot/xdtest/agv.git`:
- Incorrect Namespace Parsing: `xdtest`
- Incorrect Host Interpretation: `git.xxx.ai/aot`

aot/xdtest/agv.git == [groupName]/[groupName]/[Project name].git

**Reproduction Steps:**

1. Configure the BuildServerIntegration with a GitLab instance containing projects
2.  Instance https://git.xxx.ai
3. Click on the ""Get Project ID from server"" button.
4. Observe that the system fails to retrieve the correct Project ID due to namespace parsing errors.",closed,2024-05-27T07:30:13Z,2024-06-16T20:16:06Z,2024-06-16T20:16:06Z,:pen: status: cla signed,master,master,4,16,2,4,1,3,"RussKie, gerhardol, redcatH, pmiossec, pmiossec, gerhardol, gerhardol","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11759
11758,fix(RevisionReader): Load body in dependency on commit date,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11710

## Proposed changes

- RevisionReader: Load commit body in dependency on commit date instead of on author date

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/36601201/4f57cf4d-4648-4760-971c-3a00063abd00)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/a3f75417-0040-4a6f-b660-57113f5bd1ba)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-26T12:02:36Z,2024-05-27T17:35:11Z,2024-05-27T17:35:11Z,,master,fix/11710_commit_body,1,1,1,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11758
11757,Handle `RevisionReader.GetRevision` returning `null`,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes NRE after calling `RevisionReader.GetRevision`

## Proposed changes

- Indicate that `RevisionReader.GetRevision` can return `null` and handle it
  optionally by throwing an `ExternalOperationException`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- additional testcases

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-26T11:33:28Z,2024-05-27T17:42:41Z,2024-05-27T17:42:41Z,,master,fix/revisionreader,4,40,11,1,0,0,"gerhardol, RussKie, RussKie","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11757
11754,chore: fix update-loc.cmd script (following repo restructure),"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes[ #](https://github.com/gitextensions/gitextensions/pull/11744#issuecomment-2131204692)
",closed,2024-05-25T10:51:01Z,2024-05-25T10:52:00Z,2024-05-25T10:52:00Z,,master,fix_update_script,1,1,1,1,0,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11754
11753,Improve recovery form,"## Proposed changes

* display type of data for blob in grid
* perf: fetch ** dangling commit** metadata by batch (for my GE repo, for 1074 commits: 0.8s instead of 41.5s / only the long `git fsck` command --25s-- is now taking time. Overall: 1m5s before/ 25s after )
* syntax highlighting also when opening in popup viewer
* contextual shortcut are directly accessible (no need to open contextual menu first) & Ctrl-S added
* support more file types & magic numbers
* perf: don't do GUI costly processing twice

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/03731d43-53f7-4ce7-a53e-6e61d83a7566)

![image](https://github.com/gitextensions/gitextensions/assets/460196/d003cb12-9f8b-4088-943e-536d9c25ba79)

![image](https://github.com/gitextensions/gitextensions/assets/460196/0edd7ebc-8d3e-4bd4-902e-2cd84051b3b9)

### After
![image](https://github.com/gitextensions/gitextensions/assets/460196/b8d2fa32-a5c0-4b94-9007-254ab775bc12)

![image](https://github.com/gitextensions/gitextensions/assets/460196/4362843d-c7c4-428f-8580-af5ec2a451d6)

![image](https://github.com/gitextensions/gitextensions/assets/460196/70741ce6-a97f-4757-8809-8780087c5c49)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 3c8dd1972d260d7b0bcb613805a83e3988f96a87 (Dirty)
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-25T10:17:12Z,2024-05-27T20:10:57Z,2024-05-27T20:10:57Z,release-notes-worthy,master,improve_recovery,5,135,39,7,0,3,"RussKie, pmiossec, mstv, pmiossec, pmiossec, gerhardol, mstv, RussKie, mstv, pmiossec, RussKie, pmiossec, RussKie","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11753
11752,Use `IGitUICommands` in signatures,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Follow up to https://github.com/gitextensions/gitextensions/pull/11269

## Proposed changes

- Replace `GitUICommands` with `IGitUICommands` in signatures.
- Move selected types to GitExtensions.Extensibility to enable the above change



----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-25T03:54:51Z,2024-05-27T04:30:01Z,2024-05-27T04:30:01Z,release-notes-worthy,master,interface,30,227,126,2,0,2,"mstv, gerhardol, RussKie","APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11752
11751,"Add ""Close (go to Dashboard) to repos dropdown","
## Proposed changes

- Extract the working directory / recent repositories dropdown as a standalone component
- Add ""Close (go to Dashboard) to repos dropdown

## Screenshots <!-- Remove this section if PR does not change UI -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/4403806/2553622d-a733-4032-a3c9-320d3c56532f)


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-24T02:40:29Z,2024-07-03T07:37:30Z,2024-07-03T07:37:29Z,,master,close_repo,11,446,314,2,10,1,"mstv, RussKie, pmiossec, gerhardol, RussKie, RussKie, RussKie, mstv, mstv, RussKie, RussKie, pmiossec, RussKie, RussKie, pmiossec, mstv, RussKie, RussKie, mstv, pmiossec, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11751
11749,Filter: Add 2 examples of invert grep filters,"* to exclude from commit message
* to exclude from author

Help user with #8176

2 patterns are added at the end of the filter ""history"" and the user has just to select and replace the pattern to filter.
I'm aware that it's not the perfect UX but it is **very** convenient if you want to do this kind of filter (otherwise it is really difficult)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/7a946078-e3c8-40e7-a97e-7354acd382ae)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build dd7687981074b2c7cad97c5e2cfeb41dc5811749
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-22T15:06:28Z,2024-05-24T17:21:54Z,2024-05-24T17:21:54Z,,master,invert_filter_examples,1,7,1,1,2,2,"gerhardol, mstv, mstv, gerhardol, pmiossec, mstv","APPROVED, COMMENTED, APPROVED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11749
11748,More meaningful and (I hope) pleasant default colors,"* Selected revision (blue) => Same author (**light** blue)
* Selected text (mauve) => Same text (**light** mauve)

Note: I know that colors is a sensible subject and that everyone has it's own tastes but I hope I will not open the pandora's box.
I personally prefer not seeing the kind of yellow.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/bee214f2-8368-4808-be85-1bb9070e88c0)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/03ddabeb-1a7d-4240-8dfc-12016950e2d7)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build dd7687981074b2c7cad97c5e2cfeb41dc5811749
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-22T14:40:46Z,2024-05-23T15:59:04Z,2024-05-23T15:59:04Z,,master,more_meaningful_colors,2,4,4,1,2,2,"gerhardol, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11748
11747,fix Hexa editor display of binary files,"by:
* reading file and blob with a better encoding
* not touching/altering *blob* content (i.e not breaking content by reencoding)
* not converting in ASCII before doing the Hexa editor display (it breaks char > 0x80)

As a result, display is **exactly** the same obtained by using an external Hexa Editor:
* Hexa value are accurate
* string display is the same (except some cheating done by hexa editor
for example with char 0x99 displayed as ™)
* File size is accurate

Kind of followup to #11727 as it was not always working well because beginning of some files (ex: jpegs) were badly altered when reading blob content.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

#### In commit window

* before:

![image](https://github.com/gitextensions/gitextensions/assets/460196/42e52363-58bd-40db-b364-5e3f4e740776)

* After:

![image](https://github.com/gitextensions/gitextensions/assets/460196/6517884f-9f4c-4294-b301-5eecece46496)

Goal (Hex editor):

![image](https://github.com/gitextensions/gitextensions/assets/460196/32817078-02f6-44c2-be90-c6a6a58535b9)

#### Recover jpeg blob:

* before: 
![image](https://github.com/gitextensions/gitextensions/assets/460196/023925d3-194c-4fc0-abff-08ad56f83d48)


* after (because content is not corrupted, type of file is well recognized):

![image](https://github.com/gitextensions/gitextensions/assets/460196/b5654273-09e7-4398-9147-3c8a22bc741a)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 561d355dff3fc916f7a8fe04b18b65ad911dddb1
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-22T12:19:22Z,2024-05-24T17:23:19Z,2024-05-24T17:23:19Z,,master,fix_binaries_display,5,63,40,2,1,5,"mstv, gerhardol, mstv, gerhardol, gerhardol, mstv","COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11747
11746,feat(GitHub): Add commit message issue helper feature,"
## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

no git issue menu item

### After

Need to be enabled:
![image](https://github.com/gitextensions/gitextensions/assets/460196/91667560-be47-4d1d-9735-a380dd1fdff2)

Issue template from GitHub assigned issues:
![image](https://github.com/gitextensions/gitextensions/assets/460196/c5233d9e-622f-49e7-9dbf-0a4f623f9fa1)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build a32c590c1f00a2e918f68d0fe5b70d86bc54db48
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-21T13:15:01Z,2024-05-26T17:51:00Z,2024-05-26T17:51:00Z,,master,feat/github_issues_commit_message_helper,5,114,5,3,2,3,"gerhardol, gerhardol, pmiossec, pmiossec, gerhardol, pmiossec, gerhardol, RussKie, gerhardol, pmiossec, pmiossec, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11746
11745,fix(diff): Script separator only if items,"## Proposed changes

Only show the script separator if there are items

## Screenshots <!-- Remove this section if PR does not change UI -->

diff tab context menu
### Before

![image](https://github.com/gitextensions/gitextensions/assets/6248932/b373705b-3d43-4cf3-8299-f7109cda7880)

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/d203e96d-3cb3-4516-8f12-df4d1044daf0)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-20T21:40:03Z,2024-05-25T18:57:26Z,2024-05-25T18:57:26Z,,master,feature/diff-script-separator,2,8,2,1,0,1,"RussKie, mstv, mstv, pmiossec","APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11745
11744,Restructure repository,"* Rename Setup/ to setup/
* Rename Bin/ into assets/ and move under setup/
* Rename Externals/ to externals/
* Move app projects into src/
* Move test projects into tests/
* Move scripts/ to eng/
* Move TranslationApp/ into setup/
",closed,2024-05-19T11:21:21Z,2024-05-24T01:24:16Z,2024-05-24T01:24:16Z,,master,restructure,30,145,316,1,14,3,"gerhardol, RussKie, gerhardol, RussKie, pmiossec, mstv, mstv, gerhardol, pmiossec","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11744
11743,Open GitHub release page for portable apps instead of downloading msi,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->


Fixes #11742

## Proposed changes

- Open GitHub release page for portable apps instead of downloading msi
- Convert FormUpdates to use GitExtensionsDialog

## Screenshots <!-- Remove this section if PR does not change UI -->



### After

* Installed
![image](https://github.com/gitextensions/gitextensions/assets/4403806/63f690f9-ecdc-476b-af51-6fdffa87d577)
![image](https://github.com/gitextensions/gitextensions/assets/4403806/2389e8a7-29f2-40e7-857b-d662b239ed5e)
![image](https://github.com/gitextensions/gitextensions/assets/4403806/b847b5d8-22bc-4537-8776-0b3ae3e11b4d)


* Portable
![image](https://github.com/gitextensions/gitextensions/assets/4403806/17967835-295c-4ed4-91ee-9e07aeee989d)
![image](https://github.com/gitextensions/gitextensions/assets/4403806/de03208b-4bd7-4542-9710-9cb95c538efc)


<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-19T09:41:05Z,2024-05-21T02:36:58Z,2024-05-21T02:36:58Z,,master,fix_11742,4,287,254,3,0,1,"gerhardol, RussKie","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11743
11739,fix(difftastic): default for --strip-cr changed in 0.58,"## Proposed changes

Always set the option to handle compatibility.
https://github.com/Wilfred/difftastic/releases/tag/0.58.0

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-16T20:07:24Z,2024-05-26T20:12:56Z,2024-05-26T20:12:56Z,,master,feature/difftastic-0.58,1,5,6,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11739
11738,fix(diff): Don't fail if user customized git `diff.*Prefix` settings,"i.e. `diff.srcPrefix` and `diff.dstPrefix` settings introduced with git v2.45 https://git-scm.com/docs/git-diff/2.45.0#Documentation/git-diff.txt---default-prefix

Only (remaining) constraint is that the prefix end with '/' and doesn't contain a space.

Allowing something like (for terminals supporting hyperlinking to paths):
 git config --global diff.srcPrefix ""before:./""
 git config --global diff.dstPrefix ""after:./""

https://github.blog/2024-04-29-highlights-from-git-2-45/

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/da66bac6-bfce-4d9b-87b2-c3c13c861528)

### After

No error diff displayed:

![image](https://github.com/gitextensions/gitextensions/assets/460196/37a05d12-7501-4746-a9fc-ef0386520931)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 9dd1ea113a519b0c40036d35f66c4d2f01b26423
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-15T14:24:42Z,2024-05-21T12:24:55Z,2024-05-21T12:24:55Z,,master,diff_prefix_support,6,365,3,1,1,1,"gerhardol, gerhardol, RussKie, gerhardol, RussKie","COMMENTED, APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11738
11735,Convert FormCommitTemplateSettings to GitExtensionsDialog; fix Dpi issues,"Fixes #11343

## Proposed changes

- Convert `FormCommitTemplateSettings` to `GitExtensionsDialog`
- Fix `TabIndex` for controls in the second tab
- Adjust grammar

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

**At 100% scale**

![image](https://github.com/gitextensions/gitextensions/assets/483659/ef1c6dda-f544-4890-8338-57cebc27117a)

![image](https://github.com/gitextensions/gitextensions/assets/483659/dfa54629-25b7-472f-ad93-b509b9838a98)

**At 200% scale**

![image](https://github.com/gitextensions/gitextensions/assets/483659/bb17a549-40ab-41de-b7ff-83002250f7b6)

![image](https://github.com/gitextensions/gitextensions/assets/483659/1cad63b3-b9e3-4249-9ca2-ae7baef8caa0)


### After

**At 100% scale**

![image](https://github.com/gitextensions/gitextensions/assets/483659/ef534d3b-fb42-4e13-b951-ac7947b7d59d)

![image](https://github.com/gitextensions/gitextensions/assets/483659/45101491-cd7c-46f1-9e3d-641cc58a04df)

**At 200% scale**

![image](https://github.com/gitextensions/gitextensions/assets/483659/7f6ca361-c96f-46f9-bc4a-aafb3f834fe8)

![image](https://github.com/gitextensions/gitextensions/assets/483659/f16ed275-2270-48b0-adf7-5ecb5e609750)

## Test methodology <!-- How did you ensure quality? -->

- Manually

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100% and 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-11T19:00:03Z,2024-05-12T09:35:29Z,2024-05-12T09:35:29Z,,master,fix-FormCommitTemplateSettings-dpi,5,184,185,3,2,2,"mstv, gerhardol, RussKie","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11735
11734,Expose ScriptOptionsProvider to toolbar event scripts,"<details>
  <summary>Previous PR description before it got ""rebranded""</summary>

## Proposed changes

Once I've noticed this PR https://github.com/gitextensions/gitextensions/pull/11239 I wanted to use `{SelectedFiles}` in my script but it didn't work, I got literal value of `{SelectedFiles}` as a result.
Question: Is it a bug to leave `{SelectedFiles}` unreplaced into say an empty string?

- Since Toolbar Event Scripts go through `FormBrowse` when looking for a `IScriptOptionsProvider`, `FormBrowse` conveniently has two potential sources for it
- Override `GetScriptOptionsProvider()` in `FormBrowse` to forward this request to `RevisionDiffControl` or `RevisionFileTreeControl` depending on which one is visible

----

</details>

## Proposed changes

Currently scripts using `toolbar` event type do not have access to `IScriptOptionsProvider` thus are unable to make use of all variables provided by the scripting mechanism.

- Since Toolbar Event Scripts go through `FormBrowse` when looking for a `IScriptOptionsProvider`, `FormBrowse` conveniently has two potential sources for it
- Override `GetScriptOptionsProvider()` in `FormBrowse` to retrieve `IScriptOptionsProvider` from `RevisionDiffControl` or `RevisionFileTreeControl` depending on which one is visible/active

## Test methodology <!-- How did you ensure quality? -->

- Manually. I've been using this feature for ~2 weeks almost daily

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-10T09:44:01Z,2024-06-26T17:54:49Z,2024-06-26T17:54:49Z,,master,selectedfiles-in-toolbar-event-scripts,3,19,0,2,24,1,"mstv, mdonatas, mdonatas, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11734
11733,fix(RevisionReader): do not quote GetRevision() hash,"Fixes #11732

## Proposed changes

Reviewed the code paths calling this and reverting the quoting added in #11570

Also make sure artificial commits are not cached

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-09T17:05:14Z,2024-05-10T20:44:28Z,2024-05-10T20:44:28Z,,master,feature/i11732-sequence-commithash,1,5,2,2,1,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11733
11731,fix(revgrid): SuperprojectModule has no workingdir,"Fixes #11730

## Proposed changes

The superproject workingdir is occasionally null at least for WSL when restoring minimized windows and the command to add branches for the super project in the submodule cannot run.

## Screenshots <!-- Remove this section if PR does not change UI -->

No GUI change, just example of the superproject info
![image](https://github.com/gitextensions/gitextensions/assets/6248932/24252432-44a0-42fd-afbf-be39cd437699)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-09T13:05:49Z,2024-05-10T20:28:28Z,2024-05-10T20:28:28Z,,master,feature/i11730-wsl-submodule,1,1,1,1,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11731
11727,Improve recovery of files UX,"## Proposed changes

- Display tag as patch (to benefit diff syntax highlighting)
- improve recovery file format detection and saving
    * improve heuristic to determine file type
    * better default name for recovered files (by using the file type found)
    * allow user to more easily save as another (similar) file type

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

* tag:

![image](https://github.com/gitextensions/gitextensions/assets/460196/78d91afb-c369-4ad0-96af-e3834d55f449)

* File recovery:

![image](https://github.com/gitextensions/gitextensions/assets/460196/dfc5df6e-13eb-4e7b-80e3-ec6e4c8d658c)

![image](https://github.com/gitextensions/gitextensions/assets/460196/7ba9d8e9-74e8-443e-a550-3fc4c48c36ca)

### After

* tag:

![image](https://github.com/gitextensions/gitextensions/assets/460196/7cbd9009-841e-4db7-b117-ff5197f61fbe)

* better detection of file type and better saving UX:

![image](https://github.com/gitextensions/gitextensions/assets/460196/28fa7a7c-b3d3-4317-abb7-1aa964f07aff)

![image](https://github.com/gitextensions/gitextensions/assets/460196/eb0e19f6-e2bb-43c9-a664-e8b67e4c6eab)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-08T09:21:45Z,2024-05-10T10:22:42Z,2024-05-10T10:22:42Z,release-notes-worthy,master,improve_recovery_ux,1,68,32,1,0,2,"RussKie, mstv, gerhardol","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11727
11725,Checkout *remote* branch: more helpful labels,"## Proposed changes

Update labels to be clear that:
- a remote **can't** be checked out and that the commit will be checked out in fact (and user will be end up in 'detached head' state).
- local branch will be given the *same* branch name

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/98bad465-d01e-4899-9b9c-2dcd6a5f6de1)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/fee6d576-83c5-4b3b-8238-7cc8ae8ad0c4)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 453280d62575f353cd5d6b2d30a5e9cc08a21f2e
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-07T10:48:47Z,2024-05-08T08:19:48Z,2024-05-08T08:19:48Z,,master,checkout_branch_helpful_labels,3,4,4,2,0,0,"RussKie, mstv, gerhardol","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11725
11724,"fix: label ""No changes"" no more hiding first file of the list","when opening ""FormLog""
even if it was set as not visible.

Fixes #11679

Reproduce step: double click on a revision in the revision grid

Regression introduced by f8c035302bba1351d88b5159e5ec93bfbbc5933d

/!\ Technical reason of the bug:
Previous code was:

            FilterComboBox.Visible = filesPresent || (SearchComboBox.Visible && !string.IsNullOrEmpty(SearchComboBox.Text));
            NoFiles.Visible = !FilterComboBox.Visible;

But as `FilterComboBox.Visible` is not just a property storing the value directly to a backed field
(it has a complex WinFoms internal logic),
 the value retrieved by the getter ( to after set `NoFiles.Visible`) is sometimes wrong and not the one set to the property :(
The value is not ""well"" set due to complex internal logic and so a wrong value is used after.

Using a temporary variable fix the issue because the set of the 2 properties has no more impact on each others!
## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/ccd4b5c1-31bf-4495-854b-ae5c43ffcb7a)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/07b479f0-df00-4fb0-8365-ca2322809d83)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 10b42c51f9bf9285b4a064e2a3d2547ea215f87a
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-07T10:28:02Z,2024-05-16T20:59:38Z,2024-05-16T20:59:38Z,,master,fix_no_changes_hidding_label,1,6,3,1,3,2,"mstv, gerhardol, pmiossec, RussKie, mstv, pmiossec, mstv, gerhardol, pmiossec, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11724
11722,fix(RevisionDataGridView): Update RowCount while loading,"## Proposed changes

- `RevisionDataGridView`: (Asynchronously) update `RowCount` also if `DisplayedRowCount` returns 0 yet
- `BackgroundUpdater`: Always cool down after performing the `_operation`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

revision grid may stay empty until ""Loading"" is hidden

### After

`RowCount` is updated every 300 milliseconds

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-05T15:20:58Z,2024-05-11T21:08:03Z,2024-05-11T21:08:02Z,,master,fix/graph_loading,2,16,9,2,3,1,"gerhardol, gerhardol, RussKie","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11722
11721,Diff moved lines: Use dimmed-zebra algorithm,"Tweak to #11674

## Proposed changes

git-diff detects moved blocks (with at least 20 chars) and colors adjacent blocks with alternate colors.
The alternative color profile will use dimmed colors for lines that are moved without changes so changed lines stand out better.
Border lines close to changes are marked (not always done by Git though...)

A better description: https://stackoverflow.com/questions/57817642/whats-the-purpose-of-dimmed-zebra

This PR changes to use dimmed-zebra instead (zebra is git default).
A bonus is that the GE colors are hard to see in the terminal. (such theme colors are hard to tune)
After feedback, colors are changed to be dimmed colors for moved and normal colors (but not reverse video) for border lines.

Need to be updated in the GE doc PR too.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

block1 and block2 should have alternate colors

![image](https://github.com/gitextensions/gitextensions/assets/6248932/4014b719-9815-4bf0-94f5-a6b1f2742af1)

### After

Not sure why block2 added do not have alternate colors

![image](https://github.com/gitextensions/gitextensions/assets/6248932/561a82f5-a8b8-4b17-bc4e-17899b0f306a)

Slight update with some alternate blocks where border is seen

![image](https://github.com/gitextensions/gitextensions/assets/6248932/fb2767fc-5944-41e9-a1bb-bb9543504b9b)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-03T20:57:52Z,2024-05-07T21:33:10Z,2024-05-07T21:33:10Z,,master,feature/dimmed-zebra,2,38,17,2,3,1,"RussKie, mstv, mstv","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11721
11719,Render revision graph in the background,"Fixes #11700

## Proposed changes

Have clear chains of revision grid updates (one for graph loading affecting RowCount, one for visible row range).
Get rid of several workarounds and of the mix-up of revision loading and graph-only operations.
Avoid unnecessary blocking the UI thread.

- Do not render the graph in the UI thread but in a background task with double buffering
  in order to avoid calling the potentially expensive `RevisionGraphRow.BuildSegmentLanes` from the UI thread
- Remove `RevisionDataGridView.UpdateGraphAsync`, just call `RevisionGraph.CacheTo` once with cancellation
  because `CacheTo` is needed for graph rendering only
- Remove `UpdateVisibleRowRange` call on unhandled `OnCellPainting`
  because there no need to for this additional trigger of graph update
- `RevisionDataGridView`: Remove special `OnScroll` handler which called `Update` from time to time
  because the revision graph rendering does not block the UI any longer

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual
- adapted tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

## Please do not squash merge!

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-01T19:29:28Z,2024-05-12T19:57:55Z,2024-05-12T19:57:55Z,,master,fix/graph_perf,6,229,296,5,2,2,"gerhardol, RussKie","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11719
11718,Refresh less on author highlighting,"## Proposed changes

- Just invalidate `_gridView` on author highlight instead of refreshing the entire `RevisionGridControl`
- Always explicitly refresh the `RevisionGridControl` in `OnRevisionReadCompleted` in order to apply settings and column widths
- Trigger graph update from `RevisionDataGridView.SetRowCount`
  which fixes the regression from the improved author highlighting

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual
- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-01T18:41:46Z,2024-05-09T19:32:11Z,2024-05-09T19:32:11Z,,master,fix/author_highlight,2,15,16,2,0,1,"gerhardol, gerhardol, mstv, mstv, pmiossec, pmiossec, RussKie, RussKie, gerhardol, gerhardol, mstv, gerhardol, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, APPROVED, APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11718
11714,fix(RevisionDataGridView): Cancel outdated update,"Might fix #11700

## Proposed changes

- `RevisionDataGridView.Clear`: Cancel outdated update by `RevisionDataGridView.UpdateVisibleRowRangeInternalAsync`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-28T21:08:54Z,2024-05-01T15:29:21Z,2024-05-01T15:29:21Z,,master,fix/graph_redraw,1,1,0,1,2,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11714
11713,conemu-inside: No trace output in release build,"## Proposed changes

`GetInfoRoot.QueryAsync`: No trace output in release build (`Debug.WriteLine` instead of `Trace.`)
in order to suppress output like:

```
[ROOT]: <Root
	State=""NotStarted""
	Name=""git.exe""
/>

[ROOT]: <Root
	State=""Running""
	Name=""git.exe""
	PID=""19884""
	ExitCode=""259""
	UpTime=""0""
/>

[ROOT]: <Root
	State=""Exited""
	Name=""git.exe""
	PID=""19884""
	ExitCode=""0""
	UpTime=""1832""
/>
```

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-28T20:36:15Z,2024-05-01T19:49:58Z,2024-05-01T19:49:58Z,,master,reduced_trace,1,1,1,1,7,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11713
11712,perf(graph): Keep more lines in cache when scrolling forward,"## Proposed changes

- `RevisionGraphColumnProvider.PaintGraphCell`: Keep more lines in cache when scrolling forward
  A different limit is needed for forward than for backward in order to not unnecessary throw away rendered lines.

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- extended unit tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-28T16:22:07Z,2024-05-01T15:29:49Z,2024-05-01T15:29:49Z,,master,fix/graph_cache,2,45,16,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11712
11709,Allow selecting custom icons for user defined scripts,"## Proposed changes

- In `Scripts` in addition to `Icon` property, add `IconPathName` in the property grid
  - First, this will allow to pick any icon the user wishes for
  - Second, this will allow picking high quality icons (built in ones are blurry)
- Change icon related property handling such that their values are reflected in the scripts list immediately on-value-change
- Fix DPI issues with script icons (see ""before 200% scaling"" screenshot)
- Default position of `PropertyGrid` is ridonculous. StackOverflow listed the only option of using reflection to read into internal control and adjusting its splitter position.. not pretty but no downsides even if underling API changes **and** it looks much better.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

100% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/50d4bd57-da37-4075-8f33-b4819b6ce3a0)

200% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/b2253036-9800-4c16-8900-a7b4dcf3d0fa)


### After

100% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/258ececc-2c8c-4df1-8c25-ff10ab3c3a5b)

200% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/40ee82d0-7e55-47c8-80b3-8af5af15d01b)

## Test methodology <!-- How did you ensure quality? -->

- Manually by adding empty paths, incorrect paths, setting both `Icon` and `IconPathName`, etc.

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-26T15:09:38Z,2024-05-01T16:39:02Z,2024-05-01T16:39:02Z,,master,custom-script-icons,5,129,25,8,3,3,"mstv, mdonatas, mdonatas, mdonatas, mstv, mstv, mdonatas, mdonatas, mstv, mdonatas, mstv, mstv, RussKie, mdonatas, mdonatas, mdonatas, RussKie, RussKie, RussKie, RussKie, mdonatas, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11709
11707,[WIP] Read repositories with sha256 object format,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #5483

## Proposed changes

- Work with repositories which use sha256 as object format

## Test methodology <!-- How did you ensure quality? -->

- T.B.D. / manual for now

## Test environment(s) <!-- Remove any that don't apply -->

- GIT version 2.43.0.windows.1
- Windows 11 23H2

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy
I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2024-04-24T23:10:31Z,,,,master,allow-sha256,5,191,35,1,2,1,"RussKie, pmiossec, gerhardol, drewnoakes, drewnoakes, drewnoakes, drewnoakes, Chri-s, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",True,https://api.github.com/repos/gitextensions/gitextensions/issues/11707
11705,Links for InfoClicked in Settings,"## Proposed changes

Open documentation settings in the browser when info icons are clicked.
DiffViewer handled in https://github.com/gitextensions/gitextensions/pull/11677

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-23T22:20:57Z,2024-04-25T21:10:56Z,2024-04-25T21:10:56Z,,master,feature/settings-click-link,9,64,13,7,3,1,"RussKie, gerhardol, mstv, mstv, gerhardol, RussKie, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11705
11704,feat(SettingsCheckBox): Use hand cursor for icon,"Fixes https://github.com/gitextensions/gitextensions/pull/10307#discussion_r1576296882

## Proposed changes

- Use hand cursor for icon of `SettingsCheckBox`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/36601201/b68da660-a9d1-4d60-8143-a3fd1da949ef)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/1fce387f-3ad9-444f-9ae9-93727d6a0979)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-23T19:20:40Z,2024-04-23T19:50:04Z,2024-04-23T19:50:04Z,,master,feature/settings_checkbox_hand,2,28,28,1,0,0,pmiossec,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11704
11703,FormChooseCommit & Rebase onto: Display only potential commits,"so that choice is not overwhelming
and user has less data to process to find commit he wants

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

All the git history is displayed and user has to search for the commit to select:
![image](https://github.com/gitextensions/gitextensions/assets/460196/454e5f91-a157-4bcd-9920-12d379241ddc)

### After

Only the commit that could be rebased are displayed and it's easier for user to find the good low bound one of commits to rebase:
![image](https://github.com/gitextensions/gitextensions/assets/460196/43c29097-89b8-46ec-a9da-2258794bf173)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 754b034fbe97b7e7973e5b43bfed7fc87cff1a3e
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-23T12:22:44Z,2024-05-04T04:58:07Z,2024-05-04T04:58:07Z,,master,form_rebase_commits_range_reduced,4,47,3,1,2,1,"mstv, RussKie, RussKie, RussKie, pmiossec, RussKie","COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11703
11698,fix(TranslationUtil): Suppress Trace output,"## Proposed changes

- Suppress `Trace` output from `TranslationUtil` in release build

Though these traces might be a hint that something does not work properly. I think the number of such traces is not the same on every startup.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![hints from translation](https://github.com/gitextensions/gitextensions/assets/460196/b6eaa41b-1a14-4315-b083-3f648c715f02)

### After

no output

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-22T22:11:32Z,2024-04-23T19:24:06Z,2024-04-23T19:24:06Z,,master,fix/silence_translation,1,1,1,1,0,0,pmiossec,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11698
11697,refactor: Factor out ExecutionResult.ThrowIfErrorExit,"## Proposed changes

- Factor out `ExecutionResult.ThrowIfErrorExit`
  from `GitModuleGetGitSetting` in preparation of #11680

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-22T18:53:34Z,2024-04-23T19:27:09Z,2024-04-23T19:27:09Z,,master,refactor/throw_if_error_exit,6,43,7,4,2,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11697
11696,Fix FormRemotes DPI scaling,"## Proposed changes

- Fix `FormRemotes` DPI scaling
- Adjust alignment/anchoring for more even layout

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

100% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/d8851e42-6b4c-4eaf-9c24-7f18f181ef97)

200% scaling (notice huge buttons)
![image](https://github.com/gitextensions/gitextensions/assets/483659/86543bfc-defb-4ef1-a958-116598e50227)

### After

100% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/bad115db-bd4e-4118-b8b5-5a89d614a186)

200% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/02cf0398-0cb9-4688-ad8e-42c1bddcb55f)

## Test methodology <!-- How did you ensure quality? -->

- Manually at 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-21T13:19:01Z,2024-04-22T05:21:29Z,2024-04-22T05:21:29Z,,master,fix-form-remotes-scaling,2,289,268,2,0,1,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11696
11695,Fix FormInit DPI issues; align with FormClone,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Fix FormInit DPI issues by wrapping the radio buttons in a `GroupBox` and placing it into a `TableLayoutPanel`
- Align anchoring for buttons and labels between two forms
- Align button sizes between two forms
- Remove unused Button controls from `FormClone`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before (FormInit)

100% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/8a34ab84-54dd-437f-be1c-749cd7120500)

200% scaling (notice the radio buttons)
![image](https://github.com/gitextensions/gitextensions/assets/483659/a1610b9c-9933-4ba8-a79e-a206f9273152)

### After (FormInit)

100% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/fc0c1c16-42b3-4881-84bb-49e7ed3e1f7e)

200% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/e17e8045-ac81-420e-8d7d-4684466167e5)

----

### Before (FormClone)

200% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/31a65da5-661a-418b-99ce-b5b9146f7f9a)

### After (FormClone)

200% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/5e264f07-e127-459c-bf33-594f64115760)

- Manually at 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-21T12:03:06Z,2024-04-22T05:19:37Z,2024-04-22T05:19:37Z,,master,align-forminit-formclone,4,89,62,2,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11695
11694,GE internal revision links: Match PR starting with number,"# Proposed changes

- Provide revision link for the PR if the branch name starts with the PR number
  e.g. created by `git fetch upstream pull/{UserInput}/head:{UserInput}`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

no link

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/408498dd-db32-457c-bfa1-14e54bcee1e7)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-20T21:14:47Z,2024-04-21T17:33:49Z,2024-04-21T17:33:49Z,,master,feature/ge_pr_link,1,1,1,1,0,1,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11694
11693,Adjust FormDeleteRemoteBranch sizing and fix DPI issues,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Reduce empty space in the form
- Fix the form getting overly long with higher scaling

I've spent A LOT of time trying this and that until this change has fixed the form getting overly long and becoming non-resizable

![image](https://github.com/gitextensions/gitextensions/assets/483659/1f8ef9b6-dd90-44a7-acaa-1f664220c424)


## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

100% with local branch
![image](https://github.com/gitextensions/gitextensions/assets/483659/680d95d8-9ab5-40ef-9700-57de09fe2918)

100% no local branch (large white space looks weird)
![image](https://github.com/gitextensions/gitextensions/assets/483659/c9f4ba64-5398-4511-9dc2-c5218f57e638)

200% with local branch
![image](https://github.com/gitextensions/gitextensions/assets/483659/b3f37a3c-1b33-4642-98be-bb6fb374adbe)

200% :( no local branch. The form is **not** resizable!
![image](https://github.com/gitextensions/gitextensions/assets/483659/dcd636f0-9593-4459-9d11-5b450e88a91f)

### After

100% with local branch
![image](https://github.com/gitextensions/gitextensions/assets/483659/24256d0d-1ee7-4720-a637-7850f3408069)

100% no local branch
![image](https://github.com/gitextensions/gitextensions/assets/483659/8500e515-5b45-4555-a03b-8992dad093db)

200% with local branch
![image](https://github.com/gitextensions/gitextensions/assets/483659/b4ac083a-e7a5-419f-89ac-2f73e080afd9)

200% no local branch ❤️
![image](https://github.com/gitextensions/gitextensions/assets/483659/6f36cafb-93ab-4617-99b0-e3cf625b6bcc)

## Test methodology <!-- How did you ensure quality? -->

- Manually at 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-20T20:31:20Z,2024-04-20T21:10:59Z,2024-04-20T21:10:59Z,,master,fix-form-delete-remote-branch-scaling,1,7,8,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11693
11692,Fix author highlighting background color,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11691

## Proposed changes

- Fix bool logic

## Screenshots <!-- Remove this section if PR does not change UI -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/483659/c6a1ab7e-128a-4821-8a05-ff504aa74e1d)

## Test methodology <!-- How did you ensure quality? -->

- Manually

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-20T17:48:51Z,2024-04-20T20:58:34Z,2024-04-20T20:58:34Z,,master,fix-author-highlight,1,1,1,1,1,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11692
11690,Update ignore patterns of FormGitIgnore; Fix DPI issues,"## Proposed changes

_This is a bit of fruit-salad of commits, let me know if I should split this up, although they are somewhat related. It's far easier to review these commits one at a time._

- Fix DPI scaling problems with `FormGitIgnore` buttons
- There were ignore patterns for `.vs` and `_ReSharper` but not for `.idea` which is added by Rider so I've added that
	- Example text was not reflecting the default patterns used, at least to me it seems these should match
	- The change I am not too sure of is I've gone through all the translation files and updates these patterns by hand meticulously checking to not break anything 😅
- I've increased the default height of the form
- Enabled the vertical scrollbar for the `Examples` section as it doesn't fit by default
- I've noticed at random a comment by @mstv asking for a mnemonic so added that too :) https://github.com/gitextensions/gitextensions/pull/11661#pullrequestreview-2012080628

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

100%
![image](https://github.com/gitextensions/gitextensions/assets/483659/85cc81ae-0b9c-4430-84da-5c98de4ebc77)

200% 😢
![image](https://github.com/gitextensions/gitextensions/assets/483659/6d6431a5-d12e-45ec-893d-a3d762c9f55e)

### After

200%
![image](https://github.com/gitextensions/gitextensions/assets/483659/59a3f003-1719-4228-9089-975282978ea2)


## Test methodology <!-- How did you ensure quality? -->

- Manually at 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100% and 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-20T15:55:28Z,2024-04-22T05:30:58Z,2024-04-22T05:30:58Z,,master,form-gitignore-changes,8,82,58,10,4,2,"mstv, mstv, RussKie","COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11690
11688,Fix HEAD ref arrow scaling,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Scale HEAD ref's Arrow ""padding""

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/483659/809a6d3d-1f68-4f47-ae16-d58913e2aaac)

### After

![image](https://github.com/gitextensions/gitextensions/assets/483659/00599aa7-d8a3-422b-aef8-75b5f622fde6)

## Test methodology <!-- How did you ensure quality? -->

- Manually at 100%, 150% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100%, 150% and 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-18T16:04:45Z,2024-04-19T03:49:16Z,2024-04-19T03:49:16Z,,master,head-ref-arrow-scaling-fix,1,2,2,1,1,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11688
11687,perf(FileStatusList): Initialize ImageList data only once,"## Proposed changes / Background

While looking into `FormCommit` slow load times I've come across this inefficiency. Not only is it calculated twice per form open but it's done on every form open!

- Initialize `ImageList` with relevant data once and store the result in a static field

## Test methodology <!-- How did you ensure quality? -->

- Manually. In debug mode I think it shaved off `~40ms` for the first open and `~80ms` for subsequent opens

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-18T15:24:13Z,2024-04-19T18:25:20Z,2024-04-19T18:25:20Z,,master,init-imagelist-once,1,83,79,2,3,2,"mstv, RussKie, RussKie, mstv","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11687
11686,Scale PictureBox background images,"## Proposed changes

- At the moment only the foreground image of the `PictureBox` is scaled but in some cases the image is set as background image and that has not been scaled up until now

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

(notice the tiny ℹ️ icon below the file list)
![image](https://github.com/gitextensions/gitextensions/assets/483659/84aa2159-b557-4d54-bd23-8d5c02b1cff6)

### After

<!-- TODO -->
![image](https://github.com/gitextensions/gitextensions/assets/483659/14099a67-b9fd-4f2f-be47-1dd67794ae18)


## Test methodology <!-- How did you ensure quality? -->

- Manually at 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100% and 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-18T15:04:27Z,2024-04-19T04:11:35Z,2024-04-19T04:11:35Z,,master,dpi-scale-picturebox-background,1,5,0,1,1,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11686
11685,"Fix ""Modify the commit message"" button Dpi scaling","<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Fix button scaling

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/483659/7280ea60-26fa-4e06-ab28-077516e15624)

### After

![image](https://github.com/gitextensions/gitextensions/assets/483659/4c95e8d6-a64e-4e42-918a-d3699202e7dd)

## Test methodology <!-- How did you ensure quality? -->

- Manually with 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100% and 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-18T14:50:58Z,2024-04-19T04:12:33Z,2024-04-19T04:12:33Z,,master,fix-modify-commit-msg-btn-scaling,1,2,0,1,1,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11685
11684,Fix FormClone DPI issues,"## Proposed changes

- Set relevant `AutoSize` / `AutoScale` properties for form/controls to fix Dpi issues
- Adjust `groupBox1` size related props to make it look good in all DPIs

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Notice how radio buttons are shifted down before resizing the form. Also... does anyone know why the heck the text is selected in the combo-boxes upon resize?

https://github.com/gitextensions/gitextensions/assets/483659/be7297fa-cf3d-43ac-bb7c-6dc0ebc242a3

### After

![image](https://github.com/gitextensions/gitextensions/assets/483659/c7e81c70-678b-43fe-8281-4dc8ed6482c1)

## Test methodology <!-- How did you ensure quality? -->

- Manually at 100% 150% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100% 150% 200% Scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-18T14:45:15Z,2024-04-19T04:13:38Z,2024-04-19T04:13:38Z,,master,formclone-dpi-fixes,1,7,1,1,1,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11684
11680,fix finding merge base when unrelated history,"i.e there is no common ancestors.
""merge-base"" command exit code is 1
which is not an error but more a ""nothing found"".

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/d6963665-e97d-4776-bdd1-831ff7520a01)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/fc2759ea-7d41-4152-9254-31c1422e7ea7)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build e8497aecf376488273c1ffc6293f9ac3b6318814
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-11T09:20:49Z,2024-04-24T08:01:34Z,2024-04-24T08:01:34Z,,master,fix_merge_base,1,14,2,1,1,1,"gerhardol, pmiossec, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11680
11677,Difftastic as diff viewer,"Implements #11618 

## Proposed changes

Support Difftastic as an alternative difftool output in addition to the standard ""patch"" and recently added ""git-word-diff"" views.

The Difftastic output is mostly presented as-is without changes (except that there is an attempt to apply Git theme colors).
The info is parsed to show file line info and allow navigation.

The current ""Git word diff"" toggle is changed to a dropdown.

The hotkeys toggle on/off, back to patch if set. There could be a key just cycling instead.
In the way I use it, I normally want a way to get back to the normal ""patch"" view.

Icons are from Fugue and Diffstatic favicon. (viewed in 175%)

--
To learn more about Difftastic, see: https://github.com/Wilfred/difftastic/tree/master
Some documentation will need to be written for this.

To use this functionality, you need to install difftastic, just drop the binary somewhere.
Define a difftool named ""difftastic"", e.g. adding to ~/.gitconfig

Windows example:
```
[difftool ""difftastic""]                                           
        cmd = /c/cygwin/home/user/bin/difft.exe ""$LOCAL"" ""$REMOTE""
```

WSL
```
[difftool ""difftastic""]
        cmd = /c/cygwin/home/user/bin/difft.exe ""$LOCAL"" ""$REMOTE""
```

Note: Other external difftools could potentially be tried out in a similar way, if they are called *difftastic*, they will be displayed. The printout may not be parsed correctly, line numbers may not be displayed.

--
Then is it useful?

See the doc of what the structural diff gives. It is an alternative view to toggle when viewing patches, just like git-word-diff.
I have set single key hotkeys to quickly toggle when reviewing.

--
Limitations

The intention was first just to displaythe raw output, but it grow to integrate Difftastic as well as possible. It is not intended as a native view.

* Difftastic is not intended to be parsed, some situations are guesses. Worst case is though that the line numbers are not shown or displayed twice. It would be better if the output was parsable, could be changed in difftastic. The divider for side-by-side is occasionally green: ![image](https://github.com/gitextensions/gitextensions/assets/6248932/ae2264bf-ad74-48db-95d2-8e30126c155f)
* Header is the same as in the CLI: The Git temp file name
* Column size for side-by-side is guessed, cannot be adjusted
* When copying information, you copy the text as you see, also for side-by-side. I guess it
* GE theme colors (reverse video highlighting) is guessed from use of red, bold-red, green, bold-green which is not always correct. There is a PR for better display, see https://github.com/Wilfred/difftastic/pull/690#issuecomment-2030799275. Theming in Difftastic is maybe a later step.
* difftastic is considerably slower than git-diff and the output is not cached. Caching would require adding the environment variables configuring difftastic to be included (as column size is set when calling the command
* It would be nice to have staging of lines in the viewer. This requires access to a real patch so it is not trivial.
* Some file formats like CMake are not handled well, I prefer to force viewing them as text...
* Ignore whitespace would be a nice addition to difftastic, even if spaces are not adding to structural differences

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/6248932/b73e9e87-7bbe-47ba-b3b6-86208d2675af)

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/a81e2ed5-814c-4590-b1bc-a8640a8d7e8d)

Example output with alternative ""patch"" line and side-by-side. Imperfect coloring. (Still my preference.)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/8cc7a0ee-39a6-40d1-8ec1-b7679ec7d4aa)

Example with GE theme but no syntax
![image](https://github.com/gitextensions/gitextensions/assets/6248932/7e07be6c-e435-4878-b3e8-fe6d3f612331)

Example without GE theme
![image](https://github.com/gitextensions/gitextensions/assets/6248932/ba0b9215-6ee2-4149-90f7-4eb11f6fac08)

## Test methodology <!-- How did you ensure quality? -->

Test that involves parsing diffstatic output and setting line information.

## Test environment(s) <!-- Remove any that don't apply -->

diffstatic 0.57

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-10T19:10:13Z,2024-04-28T18:56:55Z,2024-04-28T18:56:55Z,release-notes-worthy,master,feature/i11618-difftastic,28,1132,161,2,16,5,"mstv, pmiossec, gerhardol, mstv, pmiossec, pmiossec, mstv, gerhardol, gerhardol, mstv, mstv, mstv, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11677
11675,feat(RevisionGrid): Column width adjustments,"## Proposed changes

- Enforce HashColumn max width to hash length
- Adjust DateColumn width to exact content when date is displayed in ""absolute date"" (because the length is constant)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Date column auto width

* Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/24791c26-c69d-4a15-8d17-7f06ccc0a535)

* After (no more lost space)
![image](https://github.com/gitextensions/gitextensions/assets/460196/74e61da0-d2cd-469f-996f-3a501d526a30)

### Hash column max width enforced to hash length

* Before (column could take a lot too much width):
![hash_column_width_not_enforced](https://github.com/gitextensions/gitextensions/assets/460196/9c782b6d-7e4c-4587-9cef-063045bac798)

* After (column took only required width to display whole hash):
![hash_column_width_enforced](https://github.com/gitextensions/gitextensions/assets/460196/ac0e5e6c-c9a0-4aba-b3b6-8e0e5127716b)



## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build d0b8ca8a5c59d1086b7e19a38ca0b94ac25c0cd5
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-10T08:37:35Z,2024-04-11T06:50:05Z,2024-04-11T06:50:05Z,,master,column_width_adjustments,2,14,2,2,2,1,"gerhardol, mstv, mstv","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11675
11674,Always use Git coloring for word-diff,"## Proposed changes

as well as range-diff and git-grep.

Use of Git coloring of command output was added in #11590. The patch view (default) is configurable, setting to keep the current GE coloring.
git word-diff requires Git coloring and is not enabled if not Git coloring is enabled.

This removes the GE coloring for some commands ans the GE coloring is very limited and is adding complexity.
* git-word-diff (#11590)
* git-grep (#11359)
* git-range-diff (very limited GE coloring).

It is possible that a user want to keep the GE color engine for patches but use it for these commands.

Related to #11673 (and is a merge conflict), ther is a rebased commit in tmp/git-coloring but I want this reviewed in parallel.

## Screenshots <!-- Remove this section if PR does not change UI -->

No changes in the default configuration,  the first image is for without GE coloring.

git word-diff, only when git coloring is activated

![image](https://github.com/gitextensions/gitextensions/assets/6248932/76e2d382-358a-4380-920f-c7e51f42dfcb)

git-grep with regex (guess for length is incorrect)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/b2db1255-7cfd-42d4-a5b3-c33eae78c921)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/300bc177-974a-4608-b4c4-3586d572a47a)

range-diff

![image](https://github.com/gitextensions/gitextensions/assets/6248932/51cae703-b81e-4697-ad71-c7fce210ac25)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/489d89a5-8a35-4d8f-b117-c5abcfadc29c)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-07T12:56:51Z,2024-04-10T17:41:00Z,2024-04-10T17:41:00Z,,master,tmp/always-git-coloring,6,84,167,1,0,1,"mstv, gerhardol, gerhardol, gerhardol, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11674
11673,"Display ""mixed"" diff as red/green","Modification of #11628, approved but not yet merged.
First command is squash and rebase of the commit, not really to be reviewed

If this is approved, I plan to squash together wit the changes in #11628 as one commit.

## Proposed changes

Modification of the presentation in #11628 of GitWordDiff

- Show line number for removed, even if the info is unreliable
- Instead of the blueish line marker show removed line number (if changes detected) in red and new with green. Similar for when changes are only seen on one side, the other is then not colored. 

## Screenshots <!-- Remove this section if PR does not change UI -->

See #11628 also for the change in this PR

## Test methodology <!-- How did you ensure quality? -->

Tests are updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-06T21:50:47Z,2024-04-10T16:30:29Z,2024-04-10T16:30:29Z,,master,feature/word-diff-navigation-2,16,288,206,2,1,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11673
11672,fix(FormResetAnotherBranch): Do not open ComboBox drop down on Enter,"Fixes #11671
which is a regression in #11656

## Proposed changes

- Also ignore `Enter` in `Branches_KeyUp`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-06T10:48:57Z,2024-04-07T12:02:29Z,2024-04-07T12:02:29Z,,master,fix/i11671,1,1,1,1,3,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11672
11665,feat(FormCommit): Add Conventional Commit message support,"accessible easily with `Ctrl+T` shortcut
Then first letter of keyword (like 'r' for 'refactor') allows quick selection
then followed by pressing ENTER key.

See https://www.conventionalcommits.org/

and some others useful git commit footers...

Contribute to #11662
Fixes #5903 (See https://github.com/gitextensions/gitextensions/issues/5903#issuecomment-1837623364 )

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/f3f06747-7e2e-4a0e-ac3f-1ad6ed8eb832)

<!-- [](![image](https://github.com/gitextensions/gitextensions/assets/460196/eb0b37d5-e8b8-4a62-beb5-e40fa6d63425)) -->

![conventional_commits](https://github.com/gitextensions/gitextensions/assets/460196/81064678-9976-4c01-b754-26c0a1dbfcaa)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 9c00de36289e762d91125edea26c9fcc95b866e6 (Dirty)
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-02T08:24:39Z,2024-04-06T13:48:48Z,2024-04-06T13:48:48Z,,master,conventional_commits,4,255,4,1,2,2,"drewnoakes, pmiossec, pmiossec, mstv, pmiossec, drewnoakes, drewnoakes, pmiossec, pmiossec, drewnoakes, pmiossec, pmiossec, mstv, pmiossec, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11665
11661,DeleteRemote: Add an option to delete a local tracking branch," at the same time than a remote

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Part of #11640 ( Following discussion)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/5d5c4db6-4972-46e2-8549-ae651df94b5a)

<!-- ![image](https://github.com/gitextensions/gitextensions/assets/460196/ab8f5a86-06a8-4435-b8ee-0f88ea5cb9de) -->

When remote deleted successfully, local branch delete form opened automatically with good branch(es) selected:
![delete_local_with_remote](https://github.com/gitextensions/gitextensions/assets/460196/15e9c959-2b68-4284-b1e5-a81afe657707)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build fe059f5db67923fbb93efe2115223b97129e161d (Dirty)
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-28T12:54:14Z,2024-04-19T04:15:48Z,2024-04-19T04:15:48Z,,master,delete_local_branch_when_delete_remote,5,130,34,1,4,4,"RussKie, gerhardol, RussKie, RussKie, RussKie, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11661
11660,Small refactoring or adjustments,"## Proposed changes

(better reviewed commit by commit)

- FormResolveConflicts: don't reinit merge tools after each file conflict resolved
- FormClone: Add Browse icons
- Menus: Add missing '...' to menu entries that will open a popup
- perf(LeftPanel): cache forecolor used for invisible refs
- refactor(GitPluginSettingsContainer): simplify logic
    - by putting the logic of backward compatibility when the container is created instead of every times a value is read
- perf(GitHub3Plugin): do less things
    - instantiate GitHubRemoteParser only once (instead for each remote parsed)
    - return an IEnumerable so that we could use a `.Any()` to stop earlier
- Hash column: remove ellipses

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

Browse icons added:

![image](https://github.com/gitextensions/gitextensions/assets/460196/ae2db307-7ac0-4333-8be3-5921ad93fee3)

Example of ""..."" added:

![image](https://github.com/gitextensions/gitextensions/assets/460196/310576a8-0e7e-41c2-9d66-97396784de25)

Hash columns: Remove ""...""  and reduce size (as user need room to display subject or diff, could still have it in tooltip and is not really interested by this information) :
![image](https://github.com/gitextensions/gitextensions/assets/460196/d2062268-192e-4ae2-b5e1-d2fbd0c77423)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 08ed269e452d6b05e406a6182c5cd496c0bdf363
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-28T11:34:02Z,2024-03-29T09:38:16Z,2024-03-29T09:38:16Z,,master,small_stuffs,11,71,98,7,0,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11660
11659,FormResolveConflicts: Avoid fragmented translation strings,"fixes #11651

Introduced by 3a7e5d8bc16c2ba2f65eac3867e64ad89b9002e8 (#11619)


## Screenshots <!-- Remove this section if PR does not change UI -->

No changes for english version.

## Test methodology <!-- How did you ensure quality? -->

- Build and run

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 9c707d516b0fc5e42046550bba87cb0b2e49a1dd
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-28T09:06:10Z,2024-03-28T10:03:31Z,2024-03-28T10:03:31Z,,master,fix_resolve_conflicts_translations,2,32,17,1,1,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11659
11656,Fixup FormResetAnotherBranch ComboBox handling,"Fixes #11644

## Proposed changes

- Do not open dropdown on special keys (`Alt` = `Menu` and `Escape`) 
- Preserve text and selection
- Open dropdown in `KeyUp` instead of `KeyDown`
- Fixup `TabIndex` and `TabStop` in order to make mnemonics work

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-03-24T20:58:27Z,2024-03-28T16:35:52Z,2024-03-28T16:35:52Z,,master,fix/i11644_reset_other,3,45,37,2,8,0,"berrs, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11656
11655,Fix theme migration bug,"Fixes #11629

There is a problem in SettingsSource.GetColor. If the settings do not contain a value for the requested color, GetColor will return Color.Empty rather than the provided default color (because of how ColorTranslator.FromHtml handles empty input).

This causes the theme migration to think the colors have been updated from the default to a very goth all-black.

## Proposed changes

Fix SettingsSource.GetColor to return the default color instead of Color.Empty

## Test methodology

- Added unit test for SettingsSource.GetColor

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 805cf4832e6e2ad5719c04bdc07607a87be4c7f5 (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.3
- DPI 144dpi (150% scaling)
- Portable: False

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-24T13:59:24Z,2024-03-25T05:59:27Z,2024-03-25T05:59:27Z,:pen: status: cla signed,master,fix-11629,3,30,6,4,1,2,"mstv, berrs, mstv, RussKie","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11655
11654,Improve hotkey display and handling,"Follow-up to #11620

## Proposed changes

- Display shortcuts in tooltips of FileViewer toolbar
- Fixup xmldoc of `ShortcutHelper`
- Change default hotkey for `ShowGitWordColoring` to `Ctrl+D`
  - less modifiers
  - works from FileStatusList
  - similar to ""Show entire file (Ctrl+E)""
- Remove pointless call to `DiffFiles.ProcessHotkey` because FileStatusList does not support hotkeys at all
- Add `GitExtensionsControl.GetShortcutKeyDisplayString`
- Replace `KeysExtensions.UpdateTooltipWithShortcut` with direct call of `DisplayWithSuffixUpdater.UpdateSuffix`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/36601201/182caf1f-dced-44db-b8a3-14226669b9fc)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/b7ec5de0-91f4-449a-8079-0eb02a76a0a7)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Please do not squash!

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-03-23T18:42:21Z,2024-03-24T13:43:07Z,2024-03-24T13:43:07Z,,master,feature/hotkey_in_diff_tooltip,13,56,82,5,0,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11654
11653,Set ForceDesignerDpiUnaware prop for the GitUI project,"## Proposed changes

- Enable `ForceDesignerDpiUnaware` for the `GitUI` project to prevents sizes getting recalculated based on how many pixels controls take when viewed with non-100% Dpi

The link from the informational ""gold bar"" in VS leads to: https://aka.ms/winforms/designer/unaware-mode which is a redirect to https://github.com/dotnet/winforms/blob/main/docs/designer/designer-high-dpi-mode.md

Prevents this upon save:
![image](https://github.com/gitextensions/gitextensions/assets/483659/e1f9893a-7e50-40d5-b0d5-7d16718c1040)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/483659/ec15023c-b5aa-4958-9ea3-191411aa5661)

### After

![image](https://github.com/gitextensions/gitextensions/assets/483659/382af4b0-7ee4-4fe9-a200-8276fd6d1be0)

## Test methodology <!-- How did you ensure quality? -->

- Manually

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 200% Dpi
- Visual Studio 2022

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-23T12:50:39Z,2024-03-24T03:53:23Z,2024-03-24T03:53:23Z,,master,designer-dpi-unaware,1,2,0,1,2,2,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11653
11652,Improve stability of show stashes test,"Fixes https://ci.appveyor.com/project/gitextensions/gitextensions/builds/49461079#L339

## Proposed changes

- There is no need to invalidate RevisionGridControl
- Just be more patient until stashes are loaded

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-03-22T15:22:20Z,2024-03-25T19:14:04Z,2024-03-25T19:14:03Z,,master,fix/show_stashes_test,1,5,13,1,0,1,"gerhardol, mstv, RussKie, RussKie, mstv","APPROVED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11652
11650,Fixup dir-diff,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11627

## Proposed changes

- Call OpenWithDifftool with properly named arguments
  in order to avoid passing `firstRevision` as `oldName` 

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-03-21T21:37:21Z,2024-03-22T10:43:43Z,2024-03-22T10:43:43Z,,master,fix/i11627_dir_diff,1,1,1,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11650
11649,Recent repos adjustments,"## Proposed changes

- Sort shortening strategy in a logical way (from longer to shorter)
- Better display of ""replace middle part with dots"" paths when repos are in user folder
- Some refactorings

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/aa67b3e0-fc28-48d9-a488-ca9dec5e4694)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/b0da4cdd-cd60-470c-84d7-244d4fe98b44)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-21T15:38:32Z,2024-03-28T10:12:03Z,2024-03-28T10:12:03Z,,master,recent_repos_adjutments,9,318,179,8,11,2,"mstv, RussKie, RussKie, RussKie, RussKie, RussKie, pmiossec, RussKie, RussKie, RussKie, pmiossec, RussKie, pmiossec","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11649
11647,Turn on DoubleBuffered mode for the NativeTreeView control to prevent flickering,"## Proposed changes

- Turn on `DoubleBuffered` in the `NativeTreeView` constructor to mitigate tree flicker during update

_I've also fixed some nullability and warnings/style issues around the code that I've explored while fixing this_

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
Video is slowed down 3x, notice how the repo objects tree is flickering when different commits are selected

https://github.com/gitextensions/gitextensions/assets/483659/166d33d2-d219-43b5-b7bb-76b2c38d155c

### After

https://github.com/gitextensions/gitextensions/assets/483659/44f56a43-5731-4e7e-9863-5b9c23633394

## Test methodology <!-- How did you ensure quality? -->

- Manually over several months of GE usage

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 200% Dpi

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-19T21:21:36Z,2024-03-23T12:43:10Z,2024-03-23T12:43:10Z,,master,fix-branches-tree-flicker,3,27,14,4,5,2,"mstv, mdonatas, mdonatas, mdonatas, mstv, mstv, RussKie, RussKie, mdonatas, mdonatas, RussKie, mdonatas, mstv, gerhardol, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11647
11646,Restore splitter positions early in the layout process for FormCommit,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Splitters in `FormCommit` are restored after layout is already done causing quite some visible re-drawing
- Since all controls are ready early in the layout cycle, restore splitters before performing initial form layout
- Remove the **splitter-drift** hack as it became unnecessary and the tests caught that! (haven't looked at who wrote these tests, but my hat is off to you! 🙇)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
Notice the unstaged/staged controls getting resized during the loading of the form (video is slowed down 3x)

https://github.com/gitextensions/gitextensions/assets/483659/245e63e7-7eb3-479e-8f81-0579fc87ae4b

### After

https://github.com/gitextensions/gitextensions/assets/483659/b069b8d5-da8c-4d4c-991d-a93b5c869745

## Test methodology <!-- How did you ensure quality? -->

- Manually for several days

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- DPI 200%

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-19T20:39:42Z,2024-03-24T03:47:12Z,2024-03-24T03:47:12Z,,master,improve-splitter-onload-formcommit,3,26,8,4,4,5,"mstv, mstv, mstv, pmiossec, mdonatas, mdonatas, pmiossec, pmiossec, pmiossec, RussKie, RussKie","DISMISSED, COMMENTED, APPROVED, CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11646
11641,Parse patch header with escape sequences,"Fixes #11630

## Proposed changes

Add tests for escape sequences.

Add check for additional escape sequences in Debug builds, to monitor changes in Git.

Removed unused property IsCombinedDiff

## Test methodology <!-- How did you ensure quality? -->

Added tests

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-16T19:43:26Z,2024-03-27T21:03:52Z,2024-03-27T21:03:52Z,,master,feature/i11630-parse-color-patch-header,7,444,104,4,1,1,"RussKie, mstv, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, mstv, mstv, gerhardol, mstv, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11641
11638,Ignore OperationCanceledException from ProcessCmdKey,"Fixes #11636

## Proposed changes

- Ignore `OperationCanceledException` and `TaskCanceledException` in the `BugReportInvoker`
- Just trace them in debug builds

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

BugReporter

### After

nothing

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-03-13T21:04:48Z,2024-03-15T22:38:55Z,2024-03-15T22:38:55Z,,master,fix/11636_operationcanceled,1,7,0,2,0,0,"gerhardol, RussKie, mstv, gerhardol, RussKie","APPROVED, APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11638
11637,Support F# files,"

Add support F# files to the statistics plugin


## Screenshots 

### Before

![image](https://github.com/gitextensions/gitextensions/assets/2669927/7c766ba3-7d5f-4f75-a974-1a53c01d4aaf)


### After

![image](https://github.com/gitextensions/gitextensions/assets/2669927/703d1395-23f8-4fd4-aee1-e5b5ecd28947)


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-13T20:43:10Z,2024-03-14T05:59:57Z,2024-03-14T05:59:57Z,"area: plugins, :pen: status: cla signed",master,feature/support_fs_files,2,2,2,1,2,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11637
11628,git-word-diff navigation and line index marking,"https://github.com/gitextensions/gitextensions/pull/11590#pullrequestreview-1912934718
Depends on #11350 - could be refactored to be merged first if that PR is delayed

## Proposed changes

Assume added, removed and other (mixed) lines for
git-word-diff from the detected coloring.
This is a heuristic that covers at least the basic usage.

Refactor next/previous section to use the ""line analyzis"".
This simplifies the implementation, special handlig for grep and
range-diff can be removed.

The left/right line numbering was changed to right only.
This gives slightly better behavior when switching back/forward to normal patch view
and is less confusing (but still just an indication, need to be documented).

The behavior for git-range-diff is aligned with other diff presentations
as next/previous goes to next header block instead of next header as
before.
range-diff also show line numbers.

--
Missing:
- #11350 
- Test for the git-word-diff line analyzer
- Documentation of the limitations (also for #11590, #11350)
- ""Mixed"" does not have a theme color, only hardcoded.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

No added/mixed in the line number control
![image](https://github.com/gitextensions/gitextensions/assets/6248932/8f63ebab-e740-49f8-aab4-e7bdd7752ac0)


### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/93b58b68-cf56-4e1d-97b1-9a9f197a44b0)

### After in #11673

![image](https://github.com/gitextensions/gitextensions/assets/6248932/98267cf7-217c-4f1c-9908-47eca2be4d98)

## Test methodology <!-- How did you ensure quality? -->

Tests were updated
Search next/previous is not tested currently, this mostly eliminates the need.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-10T22:48:13Z,2024-04-10T16:48:21Z,,,master,feature/word-diff-navigation,16,275,209,4,6,1,"mstv, gerhardol, gerhardol, gerhardol, mstv, RussKie, RussKie, gerhardol, mstv, gerhardol, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11628
11626,Combined diff error presentation,"## Proposed changes

When combined diff or range-diff Git command fails, display the Git error message in the viewer, as for most other diff commands since #11535.

For combined diffs, ""Uninteresting diff hunks are omitted."" were no longer displayed.

Follow up to #11535, not fully handled.
""Uninteresting diff hunks"" is a minor regression.

This is slightly refactored in #11590 , merge conflict and viewer has ""combined"" knowledge.
See tmp/git-coloring a53943ebed2e0263dd70a05d8eee0b7715a7a1b2

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Empty viewer

### After

Few merge commits in GE repo (good thing), an example from mstv's test branch that also have diffs with changes in 9da998f1439426a73034bc4ffed96dd691f0336b

![image](https://github.com/gitextensions/gitextensions/assets/6248932/a6918b84-7494-468a-afe0-ad811b184233)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-10T09:58:35Z,2024-03-10T20:46:01Z,2024-03-10T20:46:01Z,,master,feature/p11535-combined-diff-no-info,2,19,6,1,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11626
11625,Add TargetPlatform property,"Add new `TargetPlatform` property, to control the specific platform for the GE installer (.msi) package.

Currently the GE installer package is hard-coded to be built for the `x86` platform, with `C:\Program Files (x86)` as the default installation folder.  This makes sense to install it on the `x86` (i.e. 32-bit) Windows platform, but a bit weird on `x64` (i.e. 64-bit) Windows platform (as discussed in #11554), and really feels weird when building an `Arm64-specific` installer package for Windows on Arm64 platform.

This commit defines a new `TargetPlatform` property which can take the following values: `x64` (default), `x86`, or `arm64` (must be lower-case values, as required by Wix). This property is passed on to the `Platform` parameter for WiX to create relevant installer package specific to that platform. Like any other property, this `TargetPlatform` property can be specified on the command line to build a platform-specific installer, rather than using the default `x64` platform value.

To build GE, the current build command series still work as before:
```
dotnet build -c Release
dotnet build -c Release scripts\native.proj
dotnet publish -c Release
```
and the following build artifacts are produced in the `artifacts\Release\publish` folder for the `x64` platform; for example:
```
GitExtensions-x64-33.33.33.0-0e12afbf1.msi
GitExtensions-Portable-x64-33.33.33.0-0e12afbf1.zip
```
The above `x64` installer (.msi) package will default to `C:\Program Files` as the installation folder, and will refuse to install on `x86` (i.e. 32-bit) Windows platform. It can be installed on Windows on Arm64 platform, as this platform contains translation layer for running `x64` program.

If the `TargetPlatform=x86` property value is specified in the `publish` command, like:
```
dotnet publish -c Release /p:TargetPlatform=x86
```
then the following files are produced:
```
GitExtensions-x86-33.33.33.0-0e12afbf1.msi
GitExtensions-Portable-x86-33.33.33.0-0e12afbf1.zip
```
The above `x86` installer (.msi) package will default to `C:\Program Files (x86)` as the installation folder, and can install on `x86` (i.e. 32-bit) Windows, `x64` Windows and Windows on Arm64 platforms.

Similarly, to produce an `Arm64-specific` installer package, the following build commands should be executed on a Windows on Arm64 box:
```
dotnet build -c Release
dotnet build -c Release scripts\native.proj /p:TargetPlatform=arm64
dotnet publish -c Release /p:TargetPlatform=arm64
```
and the following files will be produced for Arm64:
```
GitExtensions-arm64-33.33.33.0-0e12afbf1.msi
GitExtensions-Portable-arm64-33.33.33.0-0e12afbf1.zip
```
The above `arm64` installer (.msi) package will default to `C:\Program Files` as the installation folder, and will refuse to install on any Windows platform except the Windows on Arm64 platform.

Fixes #9990
Fixes #11554


## Test methodology

- default build GE installer for `x64` platform, and check that it installs to the default `C:\Program Files` folder and works properly on x64 and/or Arm64 Windows platforms. It should refuse to install on an x86 (i.e. 32-bit) Windows platform (but none are available to test.)
- build of `x86` platform GE installer, by specifying the `TargetPlatform=x86` property on the `publish` command, and check that it installs to the default `C:\Program Files (x86)` folder and works properly on x64 and/or Arm64 Windows platforms. It should work on an x86 (i.e. 32-bit) Windows platform too, but none are available to test.
- build GE installer for `Arm64` platform, by specifying the `TargetPlatform=arm64` property on the `publish` command, and check that it installs to the default `C:\Program Files` folder and works properly on Arm64 Windows platform. Check that it should refuse to install on `x64` Windows platform. It should refuse to install on an x86 (i.e. 32-bit) Windows platform too, but none are available to test.

## Test environment(s)

- Windows 10 & 11 on x64 platform
- Windows 11 on Arm64 platform

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-09T23:48:14Z,2024-06-23T10:18:03Z,2024-06-23T10:18:03Z,release-notes-worthy,master,add_target_platform_property,4,22,15,1,2,1,"RussKie, chirontt, chirontt, chirontt, RussKie, RussKie, RussKie, chirontt, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11625
11624,Fixup migration of color settings,"## Proposed changes

Fixup `MigrateColorSettings` by creating the user-themes directory in `ThemeRepository.Save`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

exception on every start

### After

`MigrateColorSettings` successfully executed once and not called any longer

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-03-08T23:49:45Z,2024-03-10T19:49:01Z,2024-03-10T19:49:01Z,,master,fix/migratesolorsettings,1,4,1,1,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11624
11623,Add remote a little more smarter completion,"Improve over https://github.com/gitextensions/gitextensions/pull/11559#discussion_r1474581069 and https://github.com/gitextensions/gitextensions/pull/11559#discussion_r1475190622

## Proposed changes

* A little more clever remote url completion (instead of relying on history of url remote that we know will **never** contains the desired url ): Use existing remotes to propose urls that has a lot higher probability to be suited.
* Do the opposite: extract remote name from URL if Url entered first.

Also:
* convert git hosting regex to compiled regex
* add a new more generic git hosting regex that cover more providers (but not Azure DevOps one 😞 because the format is different and I don't know how to parse it)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

When entering the url field, nothing happens and opening the dropdown just give an history of remotes:

![new_remote](https://github.com/gitextensions/gitextensions/assets/460196/b3a4f9cc-203d-4ede-aa94-95bb9103b400)

### After

Generate potential urls and put it at the top of a dropdown list (and auto select the 1st one):
![new_remote_smart](https://github.com/gitextensions/gitextensions/assets/460196/15eb913f-1990-41ac-b0dc-9209c8c7c97b)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 884d07e3558ea9b33e6a96f06fd60598b475f07b
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase**  merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-07T12:57:07Z,2024-03-15T07:58:10Z,2024-03-15T07:58:10Z,,master,add_remote_clever_completion,9,232,47,4,1,3,"gerhardol, RussKie, RussKie, RussKie, pmiossec, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11623
11622,refactor: clean usage of delimiters,"## Proposed changes

- No behavior change, just refactoring.

## Test methodology <!-- How did you ensure quality? -->

- Unit tests & manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-07T11:28:26Z,2024-03-12T07:44:10Z,2024-03-12T07:44:10Z,,master,refactor_clean_delimiters,18,55,49,1,0,2,"gerhardol, RussKie, mstv, pmiossec, mstv","APPROVED, APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11622
11621,Improve performance of revision grid,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Improvement over #11441

## Proposed changes

- RevisionGridControl: load revisions by batch (e.g. 1s gain over 2.5s when loading Git repo)
- RevisionReader: cache parent commit hash parsed (less memory usage: between 5 and 10MB on GE repo)
- RevisionGrid: Avoid looking at stash for each revision when possible (no stashes or all already displayed)
- RevisionDataGridView: cache resources and don't calculate same thing twice
- RevisionDataGridView: cache graphic resources between all the cells of the same row
- RevisionGrid): halve the number of short hash calculated on each display

## Screenshots <!-- Remove this section if PR does not change UI -->

no changes

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-07T11:18:45Z,2024-04-10T07:43:56Z,2024-04-10T07:43:56Z,,master,perf_revision_grid,7,299,145,10,3,3,"gerhardol, mstv, mstv, mstv, mstv, mstv, pmiossec, pmiossec, pmiossec, pmiossec, mstv, mstv, pmiossec, pmiossec, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11621
11620,Improve shortcuts display,"## Proposed changes

- Display keyboard shortcuts where missing
- Display keyboard shortcuts in tooltips for better discoverability

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

(no shortcuts)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/93499310-426e-49d5-ad11-7f915e65410f)

![image](https://github.com/gitextensions/gitextensions/assets/460196/f3b52446-9ef8-4d90-bb2f-19c3f1711f1a)

![image](https://github.com/gitextensions/gitextensions/assets/460196/84f62749-1761-4bb3-8b7a-8de55998befa)

Shortcut in tooltip for toolbar buttons (not exhaustive):

![image](https://github.com/gitextensions/gitextensions/assets/460196/253a2df8-bb17-45de-9018-2f43d8b3c47c)
![image](https://github.com/gitextensions/gitextensions/assets/460196/0294882b-5921-4161-9520-49214156fc13)
![image](https://github.com/gitextensions/gitextensions/assets/460196/64cfa4f1-f4a7-476f-83ca-adb6de9a5806)
![image](https://github.com/gitextensions/gitextensions/assets/460196/90e85599-d4ff-42f9-abc3-0fe409ed6355)
![image](https://github.com/gitextensions/gitextensions/assets/460196/281c9c15-9455-40d2-a21c-619f6db4ce63)


even user defined scripts:

![image](https://github.com/gitextensions/gitextensions/assets/460196/ac8f2c69-c53f-40b9-9926-864ed103ab4e)

Little side effect (but I think it is not so annoying ), shortcut is displayed in toolbar icon selection menu:

![image](https://github.com/gitextensions/gitextensions/assets/460196/58aeeddc-817d-4397-9506-e01b897ae678)
 

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash or rebase merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-07T10:43:07Z,2024-03-14T08:33:26Z,2024-03-14T08:33:26Z,,master,improve_shortcuts_display,25,182,111,4,1,3,"gerhardol, mstv, pmiossec, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11620
11619,FormResolveConflicts: Improve help when merging/rebasing,"## Proposed changes

When conflicts during merge/rebase, it is not always easy to what is ""local"" or ""remote"" ( See [here](https://jvns.ca/blog/2023/11/01/confusing-git-terminology/#ours-and-theirs-while-merging-or-rebasing) and [here](https://nitaym.github.io/ourstheirs/) )


- Add also terms ""current""/""incoming"" (that I found a little more explicit) and that user could be used to see if merging with ""vscode""
- Add more explicit help as tooltips

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

* Merge:

![image](https://github.com/gitextensions/gitextensions/assets/460196/8b8b1b32-8e7e-404b-9636-c187b49bc1c5)

* Rebase:

![image](https://github.com/gitextensions/gitextensions/assets/460196/6d91dc51-d179-44a2-b9bd-d216e50ef58f)


### After

* Merge:

![image](https://github.com/gitextensions/gitextensions/assets/460196/caee38bf-32d5-4b09-82a2-d15f76e1e012)

* Rebase:

![image](https://github.com/gitextensions/gitextensions/assets/460196/edaa6ff2-739e-4917-afb2-5210daec1538)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 199b9935fa10cea107ffcff6d2d14c54d85cc2f4
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-07T09:07:37Z,2024-03-21T08:48:26Z,2024-03-21T08:48:26Z,,master,conflicts_little_help,8,181,109,4,5,1,"RussKie, mstv, pmiossec, mstv, mstv, pmiossec, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11619
11615,"Fix FormCommit ""splitRight"" moving down on each FormCommit open","<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Take Dpi scaling into account when adjusting `FormCommit` horizontal splitter position

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
https://github.com/gitextensions/gitextensions/assets/483659/19173dfc-9d30-40af-93f8-4b5022f0b627

### After

Sorry, didn't record after, but the splitter doesn't move down with this fix.

## Test methodology <!-- How did you ensure quality? -->

- Manually with 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-03T15:06:36Z,2024-03-04T18:40:16Z,2024-03-04T18:40:16Z,,master,fix-commit-splitter-drift,1,1,1,1,2,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11615
11612,Fix FormRebase DPI issues,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11606

## Proposed changes

- Use `Font` scaling. Tests with .net framework 4.7.2, .net6 and .net8 have shown that `Dpi` scaling mode doesn't work properly for controls which are placed in container controls. This [SO question](https://stackoverflow.com/questions/22735174/how-to-write-winforms-code-that-auto-scales-to-system-font-and-dpi-settings) has helped a lot.
- Adjust `Commit hash` column to fit the header text without wrapping
- Fix Help image scaling.. And as for `FormMerge` it was sad to find out that even the text above the image turns out has always been clipped

## Screenshots

### Before

100% scaling
![FormRebase-100p-master](https://github.com/gitextensions/gitextensions/assets/483659/e6e0f75d-0813-4ce2-854e-21fafe21681d)

200% scaling
![FormRebase-200p-master](https://github.com/gitextensions/gitextensions/assets/483659/60877ff0-2bcd-44aa-8bc9-a1c30042f124)


### After
100% scaling
![FormRebase-100p-fixed](https://github.com/gitextensions/gitextensions/assets/483659/a8f33fe1-0a1d-4952-9bca-14bb76282c34)

200% scaling
![FormRebase-200p-fixed](https://github.com/gitextensions/gitextensions/assets/483659/470ffb13-6c3e-486b-a472-1453aca08b46)



## Test methodology <!-- How did you ensure quality? -->

- Checked `FormRebase` and `FormMerge` manually at 100% 150% and 200% scaling

#### FormMerge

### Before
200% scaling
![FormMerge-200p-master](https://github.com/gitextensions/gitextensions/assets/483659/ed662c7d-3558-4286-a441-42b0b2be42a7)

### After
200% scaling
![FormMerge-200p-fixed](https://github.com/gitextensions/gitextensions/assets/483659/5fc006be-d676-440a-928f-9c013e000492)


## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100% 150% and 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-29T08:35:26Z,2024-03-02T23:35:40Z,2024-03-02T23:35:40Z,,master,form-rebase-dpi,4,50,33,9,10,3,"mstv, mstv, RussKie","COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11612
11611,Improve flaky LeftPanelTests.Submodules,"Should avoid `OperationCanceledException` as https://ci.appveyor.com/project/gitextensions/gitextensions/builds/49289921#L341

## Proposed changes

- Just wait for finished submodule update triggered by left panel
- Correctly dispose the per-test provider instance

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- run the test (on AppVeyor)

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-02-28T23:38:12Z,2024-02-29T22:15:20Z,2024-02-29T22:15:20Z,,master,fix/left_panel_tests,1,8,8,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11611
11610,fix(CommitPickerSmallControl): fix commit count crash,"when nothing is checked out

Fixes #11609

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/d571bee4-5e39-480f-a580-f5fcbf3d3e72)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/2bb0521f-ec46-4989-8318-74ff6daec7a7)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build a6bfcb6dcff5447d313dab39dcab628fcb86b6a5
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-28T09:28:36Z,2024-02-28T10:34:10Z,2024-02-28T10:34:10Z,,master,fix_commit_count_crash,1,6,2,1,1,1,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11610
11608,SubmoduleInfo: Do not quote empty ref,"## Proposed changes

Commit could be empty for directories not yet added or removed submodule directories.

Regression in #11570 b82e637d37a3a467f083c0b320b05a7b74171e94
(to handle refs with characters that the shell may change).

I reviewed the other changes, did not see any more potential issues.

## Test methodology <!-- How did you ensure quality? -->

Manual 

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-27T23:19:05Z,2024-02-28T20:39:48Z,2024-02-28T20:39:48Z,,master,feature/quote-refs,1,1,1,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11608
11605,RevDiff Find file clarification,"## Proposed changes

Find file (in list) was just displayed as ""Find"" with the preview icon, mostly related to searching.
(Find file is a variation to the filter.)
(To search the files in the commit Find in the FileViewer must be used, by default Ctrl-F will work too).
Similar change in Compare form.

Added the preview (magnifier) icon to FileViewer find.

## Screenshots <!-- Remove this section if PR does not change UI -->

RevDiff
![image](https://github.com/gitextensions/gitextensions/assets/6248932/34760c9e-87b7-4001-8c2c-13442fd77a4b) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/c1029097-ac43-42e9-a35c-5e6b5f1c67de)

Compare
![image](https://github.com/gitextensions/gitextensions/assets/6248932/03edad3a-f84e-4bd2-9fc8-1628a64db93b) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/87db2509-8ea5-4c90-a6ed-60b31c560fee)

FileViewer
(left is master, there has been other cleanups recently.)
![image](https://github.com/gitextensions/gitextensions/assets/6248932/3b599b57-84cb-47ff-9576-0bca3dd31644)  ![image](https://github.com/gitextensions/gitextensions/assets/6248932/d30db686-d88d-44b9-bb4a-80dd83712f8b)

FileTree
![image](https://github.com/gitextensions/gitextensions/assets/6248932/d7b4ef97-87d4-45dc-8cba-8e66ff773d65) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/e8bf0b08-21da-4ee7-962b-2fef3df65f4d)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/f6249d88-73a1-420c-b101-8e312ee18054)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-24T15:21:21Z,2024-02-28T20:43:44Z,2024-02-28T20:43:44Z,,master,feature/diff-find-file,5,54,56,2,4,2,"mstv, gerhardol, gerhardol, mstv, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11605
11601,OnRevisionRead: Handle OperationCanceledException,"Fixes https://ci.appveyor.com/project/gitextensions/gitextensions/builds/49243493#L234

## Proposed changes

- Explicitely handle `OperationCanceledException` in `OnRevisionRead` because `System.Reactive.Subjects.Subject.Subscribe` does not forward it to `onError` for whatever reason

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-22T20:34:01Z,2024-02-24T12:03:48Z,2024-02-24T12:03:48Z,,master,fix/observable_cancellation,1,10,3,1,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11601
11596,Fix avatars not loading behind a corporate proxy,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes https://github.com/gitextensions/gitextensions/issues/11595

## Proposed changes

- Use Default credentials for proxy access when loading avatars

## Test methodology
- Testing before : no avatar displayed when behind corporate proxy
- Testing after : avatar displayed

## Test environment(s)

- GitExtensions version: 4.2.1
- GIT version: 2.43.2
- OS version: Windows 10 22H2
- .NET version: .NET 6.0.27

## Merge strategy

- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).

I agree that the maintainer squash merge this PR (if the commit message is clear).

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-20T23:55:21Z,2024-02-22T16:59:50Z,2024-02-22T16:59:50Z,,master,master,2,4,1,2,0,2,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11596
11594,Shorten RevisionGraphTests file names,"Fixes https://github.com/gitextensions/gitextensions/pull/10637#issuecomment-1951481287

## Proposed changes

- Append `.UseFileName` to the `Verify` function in order to shorten the `.verified.txt` file names
  There is no such parameter in the `TestCase` attribute.
  The `Verify` parameter `sourceFile` is not of any help.

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-02-19T22:03:54Z,2024-02-22T16:55:45Z,2024-02-22T16:55:45Z,,master,shorter_test_filenames,16,33,33,2,2,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11594
11591,fix(FormPush): fix tracking detection broken,"The question to track the new branch to push
was no more asked to the user
because `_NO_TRANSLATE_Branch.SelectedItem` is null when user have not interacted with the ""Branch"" dropdown due to lazy loading

In all likelihood introduced by #11489

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build aca9886154c925df44b6cb86c3afbeae8287d6fb (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-16T16:04:35Z,2024-02-18T20:40:00Z,2024-02-18T20:40:00Z,,master,fix/push_tracking_ref,1,1,1,1,1,2,"gerhardol, RussKie, mstv","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11591
11590,Git diff coloring,"Fixes #11464
Fixes #11517

## Proposed changes

TBD, opened to get feedback.
Description will be improved too, as well as screenshots.

--
FileViewer: Restructure HighlightService

Move handling of ""normal"" patches from the shared
DiffHighlightService to PatchHighlightService.

Various code cleanups.

This commit is a preparation for Git coloring and git-grep.

--
Git diff coloring

Use the coloring by git-diff instead of GE internal algorithm,
by using Git ANSI terminal escape sequences.
This enables for instance view moved code.

Configuration: Git coloring is set by default, the existing engine is still available.
The GE theme colors for added/removed code (reverse green/red) is applied by default (default Git to just set foreground text is can be configured).
Git by default warns about white space, this is disabled by default (diff.colorMovedWS).
A user can override the Git colors for each ""slot"" (see below), but this is not available in GE UI.

--
Git word diff coloring

Enable Git word diff coloring view.
This is an alternative view for diff, not in patch format.
The differences are coded on the same line.

Configuration: ""GE word highlighting"" is the default, ""Git diff highlighting"" can be enabled.
By default Git highlights changed words. If the user has not set diff.wordRegex, change by character is used ('.').

--

What is not in this PR:
- Documentation for the changes, how colors etc can be changed by Git config
- Tests are added for the ""decoding escape sequence handling"". The status for other parts is the same as before (there are no major benefits for adding tests)
- Tuned colors fully matching theming
- A more generic way to display diff in other ways, like using diff-so-fancy or delta. That is probably a different view, similar to Blame in diff (but using the same FileViewer).

## Screenshots <!-- Remove this section if PR does not change UI -->

TBD, see #11464 for now

### moved

The third is ""Git default"", no GE theme override, whitespace errors
![image](https://github.com/gitextensions/gitextensions/assets/6248932/7f714ef3-9978-43c7-a2c8-899ca18509f3) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/93e0afac-5543-43dd-9a15-056eb6624a1f) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/1df174ee-c9c6-47e5-898c-805c076503ea)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/d5a19320-d69b-44a3-b244-c2047233a81d) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/3f06316f-41d7-428e-b4d6-0d7b4ff4af6b) 

![image](https://github.com/gitextensions/gitextensions/assets/6248932/0bd536ca-40c0-4cb0-adb8-cdd1326e9759) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/56571c0c-e47b-4840-87d5-396b8bdbf020)

### range diff - the GE coloring is very limited

![image](https://github.com/gitextensions/gitextensions/assets/6248932/5a8dae94-99b4-4c2b-beba-a7ced1ef053c) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/6866e09a-ff40-459e-8006-ac34d4416880)

A missed merge (color should have been yellow, I have modified it). Dual color makes these diffs easier to read.
![image](https://github.com/gitextensions/gitextensions/assets/6248932/81d6b8ac-3d67-439d-bcc5-7d502cffb5e6)  ![image](https://github.com/gitextensions/gitextensions/assets/6248932/6f938777-fe50-4d76-9765-2f7d7415fa6e)


### Git word diff

![image](https://github.com/gitextensions/gitextensions/assets/6248932/7f714ef3-9978-43c7-a2c8-899ca18509f3) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/79c67130-2351-49d5-9ba0-85648afcb969)

The word diff is best used to toggle the view back and forward to see details, only worddiff is confusing

![image](https://github.com/gitextensions/gitextensions/assets/6248932/94d09ba5-c2e9-436d-abfa-0ca4c1f8295a) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/79863312-bc05-4d53-a605-51c28473dea4)

### ANSI Color theme

Git uses ""slots"" like old, new, oldMoved etc to set situations.
https://git-scm.com/docs/git-config#Documentation/git-config.txt-colordiffltslotgt
The slots are translated to named colors (8) that can be normal/bright/dim (and more, not really used in Git) as well as background/foreground. A terminal uses a ""theme"" to translate these colors.
The ""theme"" for these colors in this PR is displayed below as well as the GE theme colors overriding the default. (Note that the GE colors DiffAddedExtra and DiffRemovedExtra has no direct fit in the ANSI colors, maybe bright is the closest).
  
![image](https://github.com/gitextensions/gitextensions/assets/6248932/25f4824c-40c8-4aba-ab69-d57ca8d886fb)

## Test methodology <!-- How did you ensure quality? -->

Manual, tests to be added, maybe in a followup PR

## Merge strategy

- Rebase merge (PR submitter must change the commit message for the last commit).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-15T23:12:04Z,2024-03-10T22:01:20Z,2024-03-10T22:01:20Z,release-notes-worthy,master,feature/git-coloring,30,1544,732,3,10,2,"mstv, RussKie, RussKie, RussKie, RussKie, gerhardol, gerhardol, gerhardol, RussKie, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11590
11586,Avoid test hangs due to grid background task,"## Proposed changes

- Await cancellation of RevisionGridControl tasks on close of FormBrowse
- Handle exceptions in UpdateGraphAsync
- Cancel SwitchToMainThreadAsync on AfterTest
- Move JoinPendingOperations to AsyncTestHelper and add timeout
- Tests: Avoid direct use of ThreadHelper.JoinPendingOperationsAsync
- TaskManager.JoinPendingOperations with timeout of 1 minute
- Catch exceptions in TaskManager.JoinPendingOperations[Async]

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-02-15T00:58:35Z,2024-02-17T20:16:24Z,2024-02-17T20:16:24Z,":eyeglasses: status: needs review, status: ready",master,fix/test_hangs,12,103,42,6,5,2,"RussKie, gerhardol","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11586
11585,"Add a default shortcut for ""CreateSquashCommit""","## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

(no shortcut)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/c2da8ae5-898a-40c3-9164-a6a57a7ed042)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build ebc7f90a509b388f0939e8f6ecac6524fd036adb
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-14T22:50:46Z,2024-02-15T18:21:32Z,2024-02-15T18:21:32Z,,master,squash_default_shortcut,1,1,1,1,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11585
11584,Form commit: Improve commit templates menu,"## Proposed changes

- fix(FormCommit): better manage commit template separators (to prevent adding one where not needed and see duplicate separators with nothing in between)
-JiraCommitHintPlugin: display an error message if configuration is incomplete

## Screenshots <!-- Remove this section if PR does not change UI -->

* Menu separators:

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/1c9524d1-f667-4641-bfde-10e62c1815a7)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/549b3784-5424-4762-af26-363907fb637a)

* Jira commit hint message:

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/2d0f5a32-e87e-45d7-96b9-5f9f51263283)


### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/bc19e2d4-6241-4d0e-8163-5c3773634675)




## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build ebc7f90a509b388f0939e8f6ecac6524fd036adb
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer *rebase* merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-14T22:29:38Z,2024-02-16T10:39:18Z,2024-02-16T10:39:18Z,,master,form_commit_messages,3,22,10,2,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11584
11582,Refactor `ColumnProvider.Refresh`,"## Proposed changes

- Split `ColumnProvider.Refresh` into `ApplySettings` and `Clear`
  because the former conglomerate resulted in redundancies with `RevisionGraphColumnProvider.OnVisibleRowsChanged`
- Extract `RevisionDataGridView.ApplySettings` from `Refresh`
  because there is no need to re-apply all `ColumnProvider` settings on every graph loading update. (This saves lots of accesses to `AppSettings` and `GetEffectiveSettings`.)

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-02-12T22:17:55Z,2024-02-18T10:41:36Z,2024-02-18T10:41:36Z,,master,refactor/grid_settings,9,56,49,1,0,0,"RussKie, mstv, RussKie, RussKie","COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11582
11581,Fix FormCherryPick sizing,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

FormCherryPick has at least two problems with high DPI screens. First, its default size hides one of the checkboxes and for merge-commits hides parent commit info. Second, parent commit info header width is not scaled.

- Fix form's height calculation to work with both 100% and other scaling factors.
- Scale column header width manually

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
https://github.com/gitextensions/gitextensions/assets/483659/fa51dbe7-d5e0-4130-962b-1c7d796c7805


### After
https://github.com/gitextensions/gitextensions/assets/483659/7e681e59-92dd-4b08-bffe-c363104ad67b


## Test methodology <!-- How did you ensure quality? -->

- Manually with 100% 125% 150% 200% scaling factors

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- Scaling: 100% 125% 150% 200%

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-12T22:06:54Z,2024-02-14T17:49:57Z,2024-02-14T17:49:57Z,,master,fix-FormCherryPick-sizing,3,43,13,2,0,2,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11581
11578,"GitCommandLog: Hide '-c option=""value with space""'","## Proposed changes

- GitCommandLog: Detect git configuration options like '-c option=""value with space""' and hide them in the list (as other configuration options, too)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/36601201/7840ab12-9e85-4d17-9e00-2a395eaf51ff)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/9db4aa96-9fab-40c7-b464-14cd9ae20c19)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-02-11T19:31:40Z,2024-02-22T16:56:12Z,2024-02-22T16:56:11Z,,master,fix/git_command_log,2,27,3,2,0,0,"gerhardol, mstv, RussKie, gerhardol, gerhardol, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11578
11576,WIX 3.14.0,"Fixes #11574
In addition to #11575 that suppresses the warning so builds succeeds.

## Proposed changes

CVE-2024-24810

## Test methodology <!-- How did you ensure quality? -->

Build - not tested the installer myself

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-10T21:06:09Z,2024-02-11T05:20:40Z,2024-02-11T05:20:40Z,,master,feature/wix-3.14.0,1,1,1,1,1,0,"pmiossec, mstv, RussKie","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11576
11575,Update Directory.Build.props,"Fixes #11574

## Proposed changes

As suggested by @RussKie 
Just opening this so new and existing PRs will build

## Test methodology <!-- How did you ensure quality? -->

Build passes

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-10T15:43:33Z,2024-02-10T20:54:36Z,2024-02-10T20:54:36Z,,master,feature/i11574-nowarn-nu1903,1,1,1,1,0,0,"pmiossec, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11575
11570,Quote Git reference names,"Fixes #11567

## Proposed changes

Quote reference names for several commands handling Git references that has quite open rules for references, including quotes and parenthesis.
https://git-scm.com/docs/git-check-ref-format#_description

I scanned for some commands I could think of in addition to ls-tree, but there could be more. Most occurrences should be handled already.
ObjectId does not need quoting.

## Test methodology <!-- How did you ensure quality? -->

Minimal manual tests.
Note that tests did not have to be updated.
## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-06T21:21:31Z,2024-02-10T16:39:22Z,2024-02-10T16:39:22Z,,master,feature/i11567-quote-ls-tree,9,21,21,3,0,1,"RussKie, mstv, gerhardol","APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11570
11569,GetSubmoduleCommitHash: Avoid git error on names containing parens,"Fixes #11567

## Proposed changes

- `GetSubmoduleCommitHash`: Quote `refName`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- by reporter

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-02-06T21:17:25Z,2024-02-07T17:37:06Z,,,master,fix/i11567_ls-tree,1,1,1,1,1,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11569
11564,CommitCount: Use HEAD for artificial,"Fixes #11562

## Proposed changes

Ahead/Behind are shown in branch picker for instance for Compare,, just for information. If an artificial command is compared, git-rev-list must use HEAD instead.

## Screenshots <!-- Remove this section if PR does not change UI -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/d186676b-ece9-4182-8d5a-03a75fd65945)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-03T21:47:02Z,2024-02-05T20:39:46Z,2024-02-05T20:39:46Z,,master,feature/i11562-artificial-before-after,5,7,5,1,0,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11564
11561,Improve avatar handling perfs,"## Proposed changes

- Improve quick scrolling avatar display (that could block UI when the avatar was not in cache due to some potential exceptions raised)
- Don't draw temporary placeholder avatar (less things to do and no visual blink)
- Fix ""Clear image cache feature"" (and remove double call to clear)
- Cache avatars in %LocalAppData% instead of %AppData% (no roaming for cache data)
- Bypass filesystem cache for initial avatar provider that is quicker that reading cache from filesystem (and so no need to write a file)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 5b7092d88f31ec36a53c000796a8cf2ddb813ab7
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-01T16:30:12Z,2024-03-07T07:44:16Z,2024-03-07T07:44:16Z,,master,improve_avatar_handling_perfs,23,235,123,14,2,5,"gerhardol, mstv, RussKie, pmiossec, pmiossec, mstv, RussKie, pmiossec, pmiossec, mstv, pmiossec, pmiossec, mstv, RussKie, pmiossec, pmiossec, mstv, mstv, RussKie, RussKie, mstv, mstv, pmiossec, pmiossec, pmiossec, mstv, pmiossec, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, DISMISSED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11561
11559,Improve Form remotes UX,"## Proposed changes

- increase size of opened dropdowns to be readable
- history should not be dependent of local repo history setting (which is absolutely not related). Hard code a value is enough.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/4f549f84-c171-46f4-9570-b1bb52844cb5)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/64b22dfa-138a-4f3d-b088-04f54c7733d7)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 2c067ca81a355d7358514cf6cde9933dd1778996
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer rebase merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-01T14:16:27Z,2024-02-06T09:19:51Z,2024-02-06T09:19:51Z,,master,form_remotes,5,13,11,2,0,1,"RussKie, RussKie, pmiossec, RussKie, pmiossec, gerhardol, pmiossec, pmiossec, gerhardol, pmiossec, gerhardol, gerhardol, RussKie","COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11559
11558,Scripts: Last column size fit content,"## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/6fd12256-2aca-4889-bbcd-b7c8507ec40c)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/36dc9954-0667-46d2-81c3-f5f7c773acc1)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 2c067ca81a355d7358514cf6cde9933dd1778996
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-01T14:01:15Z,2024-02-05T11:18:35Z,2024-02-05T11:18:35Z,,master,improve_scipts_display,1,6,0,1,0,1,"RussKie, mstv, gerhardol","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11558
11557,Improve editors detection,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11556

## Proposed changes

- Try to find current user install of a text editor
- Remove ""Atom"" editor that is no more maintained ( https://github.blog/2022-06-08-sunsetting-atom/ )
- better support for text editor in the PATH

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/b1fdfeb3-0138-499d-952d-cf7419999a80)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/9b002475-5710-4f27-a6d5-98226732722d)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 6d2996f15652e8c4cc65f75661e275b3832368c0 (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-01T09:50:12Z,2024-02-06T08:18:13Z,2024-02-06T08:18:13Z,,master,improve_editors_detection,2,37,53,5,0,2,"RussKie, mstv, gerhardol, mstv, gerhardol, pmiossec, pmiossec, mstv","APPROVED, APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11557
11552,Ignore ListViewGroup accessibility exception,"Fixes #11385
(workaround)

## Proposed changes

- Ignore exception from `ListViewGroup.get_AccessibilityObject` which occasionally occurs on `GetFocus` after `OnApplicationActivated` with .NET 8.0.1 yet

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-29T19:15:52Z,2024-01-30T18:35:17Z,2024-01-30T18:35:17Z,,master,i11385_listview_accessibility_workaround,1,7,0,1,1,1,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11552
11551,FormCheckoutBranch: Handle no current checkout,"#11500 for vNext

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-27T22:53:52Z,2024-01-28T12:28:50Z,2024-01-28T12:28:50Z,,master,fix/i11500,1,8,5,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11551
11550,Create .git/info/ before creating exclude file,"#11442 for vNext

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-27T22:52:41Z,2024-01-28T12:28:27Z,2024-01-28T12:28:27Z,,master,fix/i11442,2,4,2,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11550
11549,Diff for filtered file between selected commits,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11548

## Proposed changes

- Add button in revision grid context menu to compare the filtered file between two selected commits

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<img width=""942"" alt=""Screenshot 2024-01-26 212646"" src=""https://github.com/gitextensions/gitextensions/assets/4991936/8abcb8f2-5afd-45be-8398-d6de92b110cd"">

### After

<img width=""942"" alt=""Screenshot 2024-01-26 212808"" src=""https://github.com/gitextensions/gitextensions/assets/4991936/b66a60cb-c832-49f8-b7a7-496b418c4f7d"">


## Test methodology <!-- How did you ensure quality? -->

- Manually tested
- Tested with no filtering -> nothing happens
- Tested with only one selected commit -> diff to parent

## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.43.0.windows.1
- Windows 11 23H2

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-26T20:39:09Z,2024-01-29T16:35:22Z,,,master,feature/diff-commits-with-filter-path,6,62,1,4,1,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11549
11538,Improve and fix plugins loading,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Improve on ""However, since the startup time of GitExtensions is so long, this feature is ruined for me."" of https://github.com/gitextensions/gitextensions/issues/11518#issue-2081522202 (especially the first cold start)

## Proposed changes

- FormBrowse & Dashboard: Plugins start to be loaded a little later so that revision grid loading is not blocked anymore and is displayed more quickly (revision grid displayed around 4s earlier on a cold start)
- Dashboard: 
    - Load only the git hosters plugin (and later the others) making that ""Clone GitHub repository"" feature appears much more quickly (for that plugins need to export also ""IRepositoryHostPlugin"" interface)
    - fix state of GitHub menu items
- Form Commit **stand alone** (i.e. launched directly from file explorer): 
    - fix registering of plugins (that never worked)
    - improve performance by loading only ""form commit"" plugins (plugins need to export also new ""IGitPluginForCommit"" interface)

## Screenshots <!-- Remove this section if PR does not change UI -->

## Revision grid is not blocked by plugin loading

#### Before

Blank screen in the revision grid during 4 or 5s

![plugins_startup_before_slow](https://github.com/gitextensions/gitextensions/assets/460196/ea0597a2-417b-4119-b382-7f6051c16fd5)

#### After

Revision grid content appears immediately and the plugins are loaded after

Note: Here, to explain the principle, I was ""lucky"" because in this specific case the cold start was exceptionally long (around 15s to load the plugins) whereas normally it took around 5s. With current plugin loading, I would have waited more than 15s before seeing the revision grid loaded.
![plugins_startup_quick_best](https://github.com/gitextensions/gitextensions/assets/460196/d3ba98d4-3485-42e2-9bfa-d5b3cbdc7c12)

Same but with a usual time:

![plugins_startup_quick_normal](https://github.com/gitextensions/gitextensions/assets/460196/e9f57679-03c8-45db-aace-3a11b4565d62)

## Dashboard: Git provider loading

#### Before

![plugins_dashboard_slow](https://github.com/gitextensions/gitextensions/assets/460196/2016fda2-aea1-4bb6-8300-219c7c6bd894)

Note: I just discovered during the gif that it even slow down retrieving the checked out branches of all the repositories

#### After

![plugins_dashboard_quick](https://github.com/gitextensions/gitextensions/assets/460196/b9c84a5f-86c6-4cf9-bad7-051e44b1d656)


## Dashboard: fix state of GitHub menu items

#### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/337f388f-d4fd-4edc-9359-78d63dfaa0bc)

#### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/9151f4c4-410f-4ac9-a576-9ee7855b4e5b)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 00049fdc9fc67ad0749232d84c886cbf9fb982fe
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.21 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.25 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.14 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.0 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-22T14:06:55Z,2024-02-28T10:09:38Z,2024-02-28T10:09:38Z,release-notes-worthy,master,improve_and_fix_plugins_loading,10,221,97,5,6,5,"mstv, mstv, pmiossec, mstv, pmiossec, pmiossec, pmiossec, pmiossec, pmiossec, pmiossec, pmiossec, mstv, mstv, pmiossec, pmiossec, gerhardol, pmiossec, mstv, mstv, gerhardol, pmiossec, gerhardol, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11538
11537,Small convenient repo stuff (no code change),"## Proposed changes

- sln: nuget packages file has been renamed
- .gitignore: Add CodeRush hidden folder
- chore: add ""Commit dialog"" debug target

## Test methodology <!-- How did you ensure quality? -->

- Nothing to test

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer rebase merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-22T12:36:27Z,2024-01-22T15:45:40Z,2024-01-22T15:45:40Z,,master,small_repo_stuff,3,7,2,3,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11537
11535,cancellationToken for Git patch commands,"Abort Git commands in Diff tab file viewer.

## Proposed changes

Git commands related to the Diff tab did not use cancellation tokens so there could be lingering commands running.

Related to #11494 but diff commands run much quicker so no major impact.

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-21T20:41:05Z,2024-01-24T21:15:13Z,2024-01-24T21:15:13Z,,master,feature/cancel-diff,4,61,30,2,0,1,"mstv, gerhardol, mstv","COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11535
11534,Splitters: Fix crash when restoring size,"(Should) Fixes #11085

## Test methodology <!-- How did you ensure quality? -->

- None (because I don't have a crash). Looking at stacktrace.

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-20T09:13:52Z,2024-01-23T11:19:24Z,2024-01-23T11:19:24Z,,master,fix_splitter_position,1,8,1,1,1,2,"mstv, gerhardol, gerhardol, pmiossec, RussKie, mstv","COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11534
11533,Skip LoadHotkeys if the control has not been loaded yet,"Fixes #11367

## Proposed changes

- Skip `LoadHotkeys` if the control has not been loaded yet, e.g. because it is invisible,
  in order to avoid exception about missing UI Command Source
  The hotkeys will be fetched later in `OnRuntimeLoad`.
- Turn `GitExtensionsControl.TryGetUICommands` into property `ServiceProvider`
  because `TryGet` was misleading: It threw an `InvalidOperationException` anyway.
- Factor out base class `TranslatedControl` from `GitExtensionsControl` and
- Use it as base class for `SettingsPageBase` instead - in order to not need to declare its property `ServiceProvider` as `new`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-19T22:05:20Z,2024-02-18T10:39:47Z,2024-02-18T10:39:47Z,,master,fix/i11367_reload_hotkeys_exc,5,104,94,7,2,6,"RussKie, gerhardol, RussKie, mstv, RussKie, RussKie, gerhardol, mstv, mstv, mstv, gerhardol, RussKie, mstv, RussKie, mstv, RussKie","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11533
11530,FileViewer: ShowSyntaxHighlighting hotkey and context menu,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->
## Proposed changes

Hotkey for ShowSyntaxHighlighting  to quickly deactivate highlighting in reviews, conflicting with other colors. 
Especially useful with #11464 that adds more colors.

Menu item is for completeness and to display current hotkey.

Sorting context menu as toolbar buttons

Mnemonics  in context menu

Default hotkey for ShowSyntaxHighlighting   and ShowEntireFile

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/6248932/d5ab4cd0-aacf-48e7-b9ef-d82fa5becdd6)

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/4fa4e8e8-a341-49cf-b0f1-d39a29123057)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-17T21:45:52Z,2024-01-19T22:42:32Z,2024-01-19T22:42:32Z,,master,feature/fileviewer-syntax-highlighting,4,59,35,3,3,2,"mstv, gerhardol, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11530
11529,Do not update graph cache if row unavailable,"Fixes regression from #11463
Fixes #9223 (at least, it worked well a few times)

## Proposed changes

- Do not update graph cache if the row is unavailable yet
- Trigger refresh when loaded
- Set `DataGridViewCellPaintingEventArgs.Handled = true` if the cell has zero size (in order to avoid endless refreshes)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

missing graph or some rows drawn from outdated cache

### After

correct graph

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-17T19:43:24Z,2024-01-18T21:32:31Z,2024-01-18T21:32:31Z,,master,fix/missing_graph,2,14,2,1,1,2,"gerhardol, RussKie","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11529
11528,Do not straighten graph if it is too wide,"Contributes to #11292
#11451 for vNext with AppSetting 

## Proposed changes

- Do not straighten graph if it is too wide with configurable limit

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-17T18:14:10Z,2024-02-17T20:19:31Z,2024-02-17T20:19:31Z,":eyeglasses: status: needs review, status: ready",master,fix/i11292_graph_perf_1_of_x_vnext,4,27,3,2,0,2,"gerhardol, mstv, mstv, gerhardol, mstv, RussKie, gerhardol, gerhardol, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11528
11524,FileViewer: Shortcuts missing in context menu,"## Proposed changes

Add shortcuts to fileviewer context menu where several items missed shortcuts.
Most do not have any by default,

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/6248932/f1791ae5-9326-4680-be11-0f35d263eaf0)

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/2c819b0e-c1c5-4fb5-90d9-307443484820)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-16T22:51:18Z,2024-01-17T21:34:40Z,2024-01-17T21:34:40Z,,master,feature/fileviewer-menu-shortcuts,1,8,2,1,0,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11524
11521,Clarify revision loading,"## Proposed changes

- Remove redundant call of `_revisionGraph.Clear`
- Separate `TriggerRowCountUpdate` from `UpdateVisibleRowRange`,
  which will be really split in a follow up
- use C#'s unconditional logical operator `|=`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-15T21:43:50Z,2024-02-11T16:03:06Z,2024-02-11T16:03:06Z,,master,refactor/graph_loading,3,16,10,2,0,0,"RussKie, mstv, RussKie","COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11521
11516,Simplify RevisionDataGridView.LoadingCompleted,"## Proposed changes

Simplify `RevisionDataGridView.LoadingCompleted`:
- remove pointless `srollTo`
- avoid repeated evaluation of `RowCount `

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-14T21:41:04Z,2024-01-15T19:46:57Z,2024-01-15T19:46:57Z,":eyeglasses: status: needs review, status: ready",master,refactor/loadingcompleted,1,34,38,2,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11516
11515,Fixup limits by RevisionGraph.Count,"## Proposed changes

- Fixup violations of ""A row index must be less than `RevisionGraph.Count`.""

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-14T17:51:11Z,2024-01-15T19:45:12Z,2024-01-15T19:45:12Z,,master,fix/nodes_cache_limit,2,13,12,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11515
11507,Workaround ImageList transparent image regression introduced in .NET 8,"Fixes #11506

A root cause was found to be an incorrect setting of the image background during `ImageList` handle creation https://github.com/dotnet/winforms/issues/10462#issuecomment-1880068488

This also suggests a clear fix:

## Proposed changes

- Set ImageList background to a value used before this regression got introduced
- Add comment instructing to remove this workaround once the fix is implemented in .NET 9 (most likely) 

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

FormBrowse > Commit Info
![image](https://github.com/gitextensions/gitextensions/assets/483659/0e1dbe69-d3e8-49b7-b123-dfd8496dfc98)

FormFileHistory
![image](https://github.com/gitextensions/gitextensions/assets/483659/a4b851e8-1b94-44bc-9bdf-ef9aa64aacde)

### After

![image](https://github.com/gitextensions/gitextensions/assets/483659/9696add8-8232-4d4a-8280-9318dc1e70e9)
![image](https://github.com/gitextensions/gitextensions/assets/483659/342c2cc7-ad12-4b49-a408-d4e9cd440cad)


## Test methodology <!-- How did you ensure quality? -->

- Manually

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

- Squash merge (there is just a single commit but this maintains PR number in a commit message)

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-07T15:40:56Z,2024-01-08T11:08:04Z,2024-01-08T11:08:04Z,,master,workaround-imagelist-regression,4,31,2,2,1,0,"RussKie, gerhardol, mstv, mdonatas, RussKie, RussKie","APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11507
11505,Regex explicit capture,"
## Proposed changes

Name all generated regex captures, to improve readability and enable the possibility to use explicit capture.

Enable the option for explicit capture for all generated regex. This improves performance slightly.

Use verbatim strings for regex.

A few VS suggested changes.

This in itself will likely not make any noticable improvements, but will simplify investigations and set a usage pattern.

## Test methodology <!-- How did you ensure quality? -->

Code review, tests

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-06T20:27:56Z,2024-01-10T21:25:12Z,2024-01-10T21:25:12Z,,master,feature/regex-explicit-capture,30,97,98,2,2,0,"RussKie, mstv, gerhardol, gerhardol, pmiossec, gerhardol, mstv, mstv, gerhardol, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11505
11501,perfs: better perf for ObjectId.ToShortString(),"by allocating and less processing when needed
and (later) using `.ToHexStringLower()` that will be provided by .net9 https://github.com/dotnet/runtime/pull/92483

## Test methodology <!-- How did you ensure quality? -->

- unit tests
- manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-06T01:59:18Z,2024-01-22T15:53:07Z,2024-01-22T15:53:07Z,,master,perf/objectid_toshortString,2,19,8,1,1,1,"gerhardol, pmiossec, pmiossec, gerhardol, gerhardol, gerhardol, gerhardol, pmiossec, pmiossec, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11501
11500,FormCheckoutBranch: Handle no current checkout,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11498

## Proposed changes

- FormCheckoutBranch: Handle no current checkout

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-05T23:45:28Z,2024-01-06T17:44:25Z,2024-01-06T17:44:25Z,,release/4.0,fix/i11498_checkout_branch,1,8,5,2,0,0,"pmiossec, gerhardol, mstv, gerhardol","APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11500
11495,Better delete branch checks,"## Proposed changes

- Better way to find if a branch could be securely deleted: check if branch deletion will make tip commit dangling (i.e. branch really merged in any **local** branch).
- Check that the tip of the deleted branch is in the reflog:
    * Add immediate feedback to the user (is or is not in reflog)
    * Better hint when not recoverable by reflog
    * Override user confirmation setting **if commit is not in the reflog** to prevent user to **really** loose commits

Summary of cases:
* **If the tip of the branch to delete is merged in any local branch, it won't create a dangling commit (i.e. the DAG won't change) and so no confirmation is asked anymore to the user** => more cases (that changes nothing) doesn't require confirmation...
* A confirmation is requested or not depending on user setting when branch is unmerged and tip is in reflog => when commit is easily recoverable, let the user decide if he wants a confirmation or not.
* A confirmation is **always** requested when branch is unmerged and tip is in **not** reflog (even if user doesn't want a confirmation) => when commit won't be recoverable easily (only through ""Recover lost objects""), force the user to confirm (more secured because he is now aware of the case!!)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

(I don't have a local version behaving like that anymore so can't really provide screenshots)
There are downsides:
* If the branch to delete is not merged into the currently checked out branch, you will have a (boring!) message telling you that the branch is not merged and the user don't really know if he will lose commits or not without carefully checking (or checking out another branch --which make the delete process painful--)
* if exceptionally you are in detached head, the check could accept to delete even if you will loose the commits: user is not really aware of the risk.
* there is a tip on using reflog to recover even if it could happen that the tip is not in the reflog and so won't be recoverable like that

### After

* Branch is in the reflog:

![image](https://github.com/gitextensions/gitextensions/assets/460196/8b859331-e0bc-4b35-a604-954b91f8d08f)

* Branch is not in the reflog:
 
![image](https://github.com/gitextensions/gitextensions/assets/460196/1ccf6154-f157-437b-bb00-53db6193151e)

* Branch not merged and tip not in the reflog (UI is not the more beautiful but should happen very rarely and should be ""surprising""):

![image](https://github.com/gitextensions/gitextensions/assets/460196/bc7ab881-5251-42c2-b4f6-82caf8f4cafa)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 7585fee4bd8edeef329f44377ea6dd1a0ba75198
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer rebase merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-03T21:14:31Z,2024-01-08T15:00:31Z,,,master,better_delete_checks,11,267,25,7,3,1,"RussKie, pmiossec, pmiossec, pmiossec, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",True,https://api.github.com/repos/gitextensions/gitextensions/issues/11495
11494,Cancellation token for Git commands in CommitInfo,"Discussed in https://github.com/gitextensions/gitextensions/pull/11472#discussion_r1439656333

## Proposed changes

Cancel longer Git operations when selecting a new commit in CommitInfo and left panel.
The commands were running to completion, using CPU (probably not blocking UI thread as discussed in #11472).

This PR adds the cancellationToken to the most common and long running commands in CommitInfo.
(git-describe and git-cat-file is normally quick but included as no refactoring was needed.)
There are a few other Git commands in CommitInfo that are not interrupted.
These are either fast or not executed often, some more refactoring would be required to handle the cancellation in invokes etc.

## Screenshots <!-- Remove this section if PR does not change UI -->

No diff for the user, just showing the command log when stepping in the linux repo.

### Before

One cancellation for the diff in RevDiff

![image](https://github.com/gitextensions/gitextensions/assets/6248932/10fdfe49-1877-486e-b8be-bbe148f191fb)

### After

The git-tag command that requires close to 10 s is started after git-branch and would have been cancelled if I had timed the cancellation.

![image](https://github.com/gitextensions/gitextensions/assets/6248932/eef4fc7d-6fe9-4f61-b977-b13b29852f51)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-03T10:56:03Z,2024-01-05T09:04:12Z,2024-01-05T09:04:12Z,,master,feature/commitinfo-cancel-token,5,26,22,1,0,1,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11494
11492,FormBrowse: Avoid toolbar resize while refreshing,"## Proposed changes

Annoying resizing of the toolbar when git status updates
Not solved, but improved.
((The remaining flicker is after first update is done and before git-status reports changes.)

## Screenshots <!-- Remove this section if PR does not change UI -->

Explicit refresh

### Before

![old-refresh](https://github.com/gitextensions/gitextensions/assets/6248932/68fd8e61-e5c1-4aa5-830e-da0e193db590)

### After

![new-refresh](https://github.com/gitextensions/gitextensions/assets/6248932/9a3fc702-5630-4f82-ac5a-785298c30519)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-02T15:02:38Z,2024-01-05T10:17:24Z,2024-01-05T10:17:24Z,,master,feature/menu-refresh,2,30,22,3,0,1,"mstv, gerhardol, gerhardol, mstv, gerhardol, RussKie, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11492
11491,ProxySwitcher Do not fail if http.proxy is not set,"fixes #11490

## Proposed changes

Do not raise errors if Git config setting http.proxy is not set.

* GetGitSetting() for scoped git-config
Make it possible to get get git-config with a scope, like ""--global""

* GetEffectiveGitSetting() should not cache by default

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-02T11:55:54Z,2024-01-05T09:24:11Z,2024-01-05T09:24:11Z,,master,feature/i11490-proxy-switcher,4,20,17,2,0,0,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11491
11489,Improve performance of push form (when a lot of local branches),"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Helps when there are lot of branches (like in #11441)

## Proposed changes

Most of the times, user open push form to push the current branch (and so don't change the dropdown values). So prevent to load all the branches when opening the form making the form opening immediately (instead of having to wait 16s for example when having 20k branches) by deferring loading:

- Load only the current branch in ""Branch to push"" combobox and load and fill  **all** local branches only when the user open it (opening time of 4s when 20k branches and less than 1s when 4k. Imperceptible otherwise)
- Don't add **all** local branches in the ""to"" combo box but prefer adding local branch in remote combobox on the fly when pushing a new branch.
- use `AddRange()` to add a big number of branches in remotes

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build a57c649dbe97e235729b9867be66a8cac084449f
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-02T00:03:54Z,2024-01-15T15:13:06Z,2024-01-15T15:13:06Z,,master,perf/form_push,2,45,35,3,0,3,"gerhardol, gerhardol, pmiossec, pmiossec, pmiossec, pmiossec, pmiossec, pmiossec, gerhardol, mstv, pmiossec, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11489
11488,Scripts: Focus property grids when creating a new one,"to be able to type the script name right away

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![script_new_broken](https://github.com/gitextensions/gitextensions/assets/460196/628eb96e-98ad-4d3a-92f9-7ea179e16982)


### After

![script_new](https://github.com/gitextensions/gitextensions/assets/460196/f3575109-66b8-4a16-a7f5-87e69886cbac)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->
- Git Extensions 33.33.33
- Build 05af8bf761f7ab5a578266b439e225cd29fd8b6b
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-01T23:03:21Z,2024-01-03T08:37:36Z,2024-01-03T08:37:36Z,,master,script_add_focus,1,2,0,1,0,1,"gerhardol, mstv, RussKie","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11488
11487,CI: allow click on status cell to open build report,"
## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Nothing

### After

![ci_open_report](https://github.com/gitextensions/gitextensions/assets/460196/8daad16f-c021-403c-888b-8150544a62ea)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 3c3c8460a9d95508a188d5e3f415350c98eee676 (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-01T22:44:23Z,2024-01-03T08:38:22Z,2024-01-03T08:38:22Z,,master,feat/ci_click,1,25,1,1,0,0,"gerhardol, mstv, RussKie","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11487
11486,Include default system code page in default encodings,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

Include default system code page in default encodings list.

### Before

On Windows 10 PL, the default encoding set in GitExtensions contain the following: UTF-8, US-ASCII, Unicode, Central European (DOS).

""Central European DOS"", cp852, is the one returned by GetEncoding(CultureInfo.CurrentCulture.TextInfo.OEMCodePage).

Under Windows however, the default 8-bit encoding of files in PL locale is ""Central European (Windows)"" (ansi / windows-1250). This encoding is returned by GetEncoding(0). So, in order to use it (in diff viewer, for example), one must find and change the git encoding setting.

### After

Result of GetEncoding(0) is also added to populate the default encoding list.

## Test methodology <!-- How did you ensure quality? -->

- Manual test run without configuration file
- Code is under try/catch so possible errors will be silently ignored.
- If GetEncoding for OEMCodePage and 0 return the same encoding, they will be deduplicated by map.

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 10 PL

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-01T18:25:55Z,2024-03-03T03:18:05Z,2024-03-03T03:18:05Z,,master,default-encoding,1,9,0,3,3,2,"pmiossec, RussKie, vbjay, gerhardol, qgppl, mstv","APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11486
11485,Agreed to CONTRIBUTING.md and signed contributors.txt,":black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-01T17:53:48Z,2024-01-02T18:59:56Z,2024-01-02T18:59:56Z,,master,sign-contributors,1,2,1,1,0,0,"gerhardol, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11485
11484,FileViewer Replace,"## Proposed changes

Enable the existing Replace popup for files that are writable.
For multiple files (including context menu in  file status list), Ctrl-H is ignored

This functionality was already implemented in FindAndReplaceForm.cs

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Find is unchanged for readonly (no replace) or when starting Find

![image](https://github.com/gitextensions/gitextensions/assets/6248932/b7f0c7f1-afb2-4d28-b3a4-ba57bc477eb6)

### After

Explicitly starting replace

![image](https://github.com/gitextensions/gitextensions/assets/6248932/f6a500fa-aff5-461e-8515-1d28f2a5e1af)

Added to file context menu.

![image](https://github.com/gitextensions/gitextensions/assets/6248932/37c29171-b48f-4969-a49c-5124a79e6c62)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-01T13:38:46Z,2024-01-05T09:17:53Z,2024-01-05T09:17:53Z,release-notes-worthy,master,feature/find-replace-editor,6,34,6,1,0,0,"RussKie, pmiossec, mstv, gerhardol, mstv, mstv","APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11484
PR ID,Title,Description,State,Created At,Closed At,Merged At,Labels,Base Branch,Head Branch,Files Changed,Lines Added,Lines Deleted,Commits,Comments,Review Comments,Reviewers,Review States,Draft Status,Linked Issues
12201,Git config,"Draft because based on #12185

Fixes #4389

## Proposed changes

- Remove `IConfigFileSettings` including its implementation so that GE does not rewrite git config files any longer
- Instead, use ""git config"" commands (with caching) for reading and writing git config settings
  using `IGitModule`:
  - `GetEffectiveSetting`
  - `GetEffectiveSetting<T>`
  - `GetSettings(string setting)` (for multi-value settings, kept existing sub-optimal name)
  - `SetSetting`
  - `UnsetSetting`
- Provide new API in `IGitModule`:
  - `GetAllLocalSettings`
  - `InvalidateGitSettings`
  - `RemoveConfigSection`
- Remove API:
  - from `IGitModule`:
    - `GetSetting` (kept, but declared ""deprecated"", redirected to `GetEffectiveSetting`)
    - `GetSetting<T>` (unused)
    - `GetGitSetting`
    - `GetEffectiveGitSetting`
    - `EffectiveConfigFile`
    - `LocalConfigFile`
  - from`IGitRef`
    - `GetTrackingRemote` & `GetMergeWith` (redundant to existing properties)

(Review commit by commit is recommended.)

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests (with adaptations)
- TODO: tests with WSL

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2025-02-17T21:02:50Z,,,,master,git_config,30,1012,594,30,0,0,,,True,https://api.github.com/repos/gitextensions/gitextensions/issues/12201
12200,feat: Display autostash in RevisionGrid,"## Proposed changes

- Create a `GitRevision` from information about autostash in `.git/rebase-merge` folder  

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/3597b92f-1eb3-44db-ab21-8a2c31ec66da)

### After

![image](https://github.com/user-attachments/assets/219137dc-d5d9-4616-9289-5d500aa4bf06)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2025-02-17T20:44:15Z,,,,master,feature/autostash,1,35,0,2,1,1,"gerhardol, RussKie, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12200
12198,Handle exceptions,"Fixes ""unhandled exception"" popup (repeatedly seen on `OperationCanceledException` in test execution)

## Proposed changes

- Wrap handler code with `TaskManager.HandleExceptions(..., Application.OnThreadException)`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- run the tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-02-15T23:11:10Z,2025-02-16T12:21:54Z,2025-02-16T12:21:54Z,,master,fix/handle_exceptions,6,54,45,2,0,1,"copilot-pull-request-reviewer[bot], RussKie, gerhardol","COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12198
12197,refactor: convert to .net6 argument null check syntax,"
## Test methodology <!-- How did you ensure quality? -->

- Manual (normally nothing changed)

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-02-15T14:48:17Z,2025-02-15T16:55:39Z,2025-02-15T16:55:39Z,,master,refactor/null_check,30,44,177,1,0,0,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12197
12196,"fix(diff): fix switch back to ""Patch"" diff appearence","Fixes #12193

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-02-15T14:36:21Z,2025-02-16T12:22:36Z,2025-02-16T12:22:36Z,,master,fix/diff_switch_to_patch,1,1,1,1,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12196
12194,fix: prevent double call to SetGitModule on repo change,"`SetGitModule` is already call in `StartToolStripMenuItem.repositoryHistoryUIService_GitModuleChanged()` registered with `FormBrowse.cs@770`:
`fileToolStripMenuItem.GitModuleChanged += new System.EventHandler<GitModuleEventArgs>(SetGitModule);`


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-02-14T13:07:17Z,2025-02-17T10:18:38Z,2025-02-17T10:18:38Z,,master,fix/prevent_double_setgitmodule_call,1,0,7,1,1,2,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12194
12192,feat(BackgroundFetchPlugin): Add option to fetch on repo opening,"Fixes #6457

Note: the fetching is not ""immediate"" because the background fetch is waiting that no git process is running but should be triggered quickly enough so that user hardly noticed.

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

![image](https://github.com/user-attachments/assets/64d47e01-f995-4a65-907f-14355a16f480)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build c16f47d4fbe4a8c415888267a013405c6b99465c (Dirty)
- Git 2.47.0.windows.1
- Microsoft Windows NT 10.0.26100.0
- .NET 8.0.12
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 8.0.12 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 9.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2025-02-13T17:38:41Z,,,,master,feat/backgroundfetch_fetchOnRepoOpening,2,99,82,3,1,2,"PhilipMilestone, PhilipMilestone, RussKie, pmiossec, pmiossec, mstv, pmiossec, gerhardol, PhilipMilestone, pmiossec","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12192
12189, feat: bold-bold ansi terminal colors,"## Proposed changes

- fix: MakeBackgroundDarkerBy for colors instead of known names
To simplify a few changes

- feat: bold-bold ansi terminal colors

Some terminals allow bold-bold colors.
For instance Difftastic emits this in dark mode.

Handle dark mode for ansi default text color.

Add a way to generate AnsiTerminalColors.diff,
to display the terminal colors.
(Requires commenting out code.)

Note: I ended up proposing another solution for dark mode other than bold-bold.

## Screenshots <!-- Remove this section if PR does not change UI -->

There are no diff for normal output, but the bold-bold is displayed and the ""test file"" is updated.
The bold-bold were not visible before

### Before

![image](https://github.com/user-attachments/assets/bb3d64c4-f9f3-4dd0-8f87-8bc937cdb1d8)

![image](https://github.com/user-attachments/assets/ecb4ca31-6229-4a63-b0fe-e6b662654fc6)

### After

![image](https://github.com/user-attachments/assets/a194cad3-37cb-4c95-9621-7117d8f2a438)

## Test methodology <!-- How did you ensure quality? -->

Added tests, also for existing

## Merge strategy

- Rebase merge (PR submitter must change the commit message for the last commit).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2025-02-09T22:11:16Z,,,,master,feature/ansi-bold-bold,7,277,55,2,2,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12189
12185,fix(git config settings pages): Add system-wide settings,"Fixes #10914
Fixes #11764

## Proposed changes

- Get git settings using `git config list` in order to correctly display effective settings
- Display effective settings read-only (in order to make users explicitly decide in which scope to configure git)
- Display system-wide settings (read-only)
- Add advanced git config ""merge.autostash""
- Several refactorings:
  - Extract `IPersistentConfigValueStore` from `IConfigFileSettings`
  - Remove `SettingsSourceExtension.ByPath`
  - Rename to `GitConfigSettingsSet` and to `GitConfigBaseSettingsPage`
  - Add `GitConfig/DistributedSettingsSet.Save`
  - Extract `GitEncodingSettings` from `ConfigFileSettings`

Review commit by commit is recommended.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/fd130bb1-d168-4d43-8d2e-910ffbac6cb1)

### After

![image](https://github.com/user-attachments/assets/342b9208-d3db-46c1-baef-6e293d263715)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2025-02-08T22:51:35Z,,,,master,fix/i10914_system_config,30,775,334,23,5,1,"pmiossec, pmiossec, mstv, RussKie, mstv, mstv, mstv, mstv, RussKie, pmiossec","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12185
12184,fix(reset):Fix reset unstaged changes of a new file already partly staged,"
Fixes #11391

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

<!-- TODO -->

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 9e9082cc28af498ef4d3ce5ce314a7a53b0d626e (Dirty)
- Git 2.47.0.windows.1
- Microsoft Windows NT 10.0.26100.0
- .NET 8.0.12
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 8.0.12 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 9.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2025-02-07T17:57:48Z,,,,master,fix_reset_staged_new_file,1,1,1,1,4,1,RussKie,COMMENTED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12184
12180,feat: Add SelectInLeftPanel,"## Proposed changes

`RevisionGridControl`:
- Add context menu item ""Select in left panel"" for branches and tags

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before | After

![image](https://github.com/user-attachments/assets/08e34091-049e-4f85-b3ad-e4f3a58526f5)   ![image](https://github.com/user-attachments/assets/2682aa08-d13c-4ef3-b5e8-8c1267640ea8)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-02-03T22:11:30Z,2025-02-10T20:50:52Z,2025-02-10T20:50:52Z,,master,feature/select_in_rot,5,67,2,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12180
12179,fix(Output History Panel): Hide with Left Panel,"Fixes regression from adding a second SplitControl

## Proposed changes

`OutputHistoryPanelController`:
- Hide Output History Panel with Left Panel (- 
- Show Left Panel on show of Output History Panel

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/b33ff6bc-eb06-4d2d-8c64-6d6c060fc16b)

### After

![image](https://github.com/user-attachments/assets/f712b423-f7da-465d-bda7-ae8e8ad27162)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-02-03T22:00:25Z,2025-02-10T20:50:04Z,2025-02-10T20:50:04Z,,master,fix/output_panel,2,12,0,1,1,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12179
12175,feat: Clickable links in console output,"## Proposed changes

Whe conbemu is not used for longrunning commands like git-fetch
Links were previously detected but not clickable.

Similar handling in the output pane recently added and in CommitInfo (where also Git links are handled and translated to internal links).

## Screenshots <!-- Remove this section if PR does not change UI -->

### After
The  ""hand"" appears as before, but something now happens when the link is clicked.

With dark mode and the background set to the theme EditorPanel, by default it is Control.
![image](https://github.com/user-attachments/assets/cbfbd1dc-17d5-4c03-94cf-fe71410a87d6)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-29T21:29:07Z,2025-01-30T20:41:59Z,2025-01-30T20:41:59Z,,master,feature/consoleoutput-links,1,13,0,2,0,0,"RussKie, pmiossec, mstv, mstv","APPROVED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12175
12174,fix(FormCommit): Improve selection handling,"## Proposed changes

FormCommit:
- Handle clicks in empty area of Unstaged & Staged lists
- Clear displayed diff if focused Unstaged / Staged list is empty

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/f4978662-ceb0-4690-adc4-2e5c6d5c58d9)

### After

![image](https://github.com/user-attachments/assets/e85f9548-9538-418f-8874-0862d71a5f1a)

### Unchanged

![image](https://github.com/user-attachments/assets/7b84a20e-6761-4f7a-af9a-2dacd4c2d6a9)

## Test methodology <!-- How did you ensure quality? -->

- manual
- existing tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-29T17:55:43Z,2025-01-30T19:52:14Z,2025-01-30T19:52:14Z,,master,fix/form_commit_selection,1,17,32,2,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12174
12171,fix(ShowProcessDialogPasswordInput): Default to false,"Fixes #12170

## Proposed changes

- `AppSettings.ShowProcessDialogPasswordInput`: Default to `false` (since the input box is automatically shown if an output line is not terminated with LF within a timeout)

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- added to testcase

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-28T18:58:00Z,2025-01-29T18:50:32Z,2025-01-29T18:50:32Z,,release/5.0,fix/input_box,2,2,1,1,1,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12171
12169,feat(graph): Ensure new lane color is different,"## Proposed changes

- `LaneInfo`: Ensure new lane color is different from adjacent lanes
- `RevisionGraph`: provide `segmentToTheLeft` and `segmentToTheRight`
- `RevisionGraphLaneColor`: ensure that there are configured at least 4 graph colors
- declare graph helper classes as `sealed`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before | After

![image](https://github.com/user-attachments/assets/dea01706-d296-4a4f-90aa-ec2e3919f06c)   ![image](https://github.com/user-attachments/assets/a4df435e-c850-4ba9-ba48-0c800b358685)

![image](https://github.com/user-attachments/assets/0ae2e8aa-655c-4917-8c60-2c3e7422b4e7)   ![image](https://github.com/user-attachments/assets/35813394-6d4b-4b7b-b9f4-04887d14b421)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-27T22:27:08Z,2025-02-13T22:38:37Z,2025-02-13T22:38:37Z,,master,feat/lane_color,6,60,30,1,0,1,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12169
12167,feat: add Light+ theme,"## Proposed changes

The default appearance is unchanged, only seen in the added theme.
The primary reason for this PR is though to allow adjustments for dark mode.
Review commit by commit is preferred, some of the changes are related.

- cleanup unused theme color Graph
Note: bright theme could probably be removed, changes are not noticeable

- themeable editor and linenumber
Updated ICSharp interface to allow themeing from Git Extensions

- style: Themeable panel backgrounds

Themeable background panels (including grid view) in the main interface.
The GitExtensionsDialog are updated too but not the old style
GitExtensionsForm.
The default visual appearance is unchanged.

- add Light+ theme

Slightly darker panel backgrounds and a visible linenumber panel
This is inspired by the VS Code theme Light+
The panels in the main interface and some (newer style) forms
are set to be slightly darker, to minimize the extremely white GE interface.
The editor background is unchanged as in VS Code.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

default, unchanged
![image](https://github.com/user-attachments/assets/b02a77d8-dcd8-4832-92fb-5410168d91b7)

### After

![image](https://github.com/user-attachments/assets/5178ee03-e3fa-46a7-b6ac-211bd09750a2)

~~console output~~
~~An alternative is to use SystemColors.Control, also OK in dark mode~~
~~![image](https://github.com/user-attachments/assets/ce95c769-c042-481f-af51-377e73f62acd)~~

## Test methodology <!-- How did you ensure quality? -->

Visual

## Merge strategy

- Rebase merge (PR submitter must change the commit message for the last commit).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2025-01-26T11:06:21Z,,,,master,feature/light-plus-theme,24,86,66,7,1,2,"mstv, gerhardol, gerhardol, mstv, gerhardol, mstv, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12167
12166,fix: bold+italic for current left panel node,"## Proposed changes

Current submodule and branch can be hard to see, especially for upcoming dark mode.
This PR adds italics in addition to bold to the current node.
(selected is still underlined and backcolor for infocus unchanged)

Colors could be used too, but that need to be themable too.
I would prefer to not change italics in dark mode, that is unexpected type of change.

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/user-attachments/assets/e7630003-527c-4593-ab12-82eff034d79b)

![image](https://github.com/user-attachments/assets/dc35529f-ec04-4df9-b05e-8634ceb23b38)

For dark mode

![image](https://github.com/user-attachments/assets/840e0094-106d-4ca2-a66f-9b3aa9670643)

![image](https://github.com/user-attachments/assets/f332c6bd-5ac5-4508-a255-04c9bb2b0d3c)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2025-01-26T10:11:22Z,,,,master,feature/leftpanel-selected-italics,2,2,2,1,1,1,mstv,APPROVED,True,https://api.github.com/repos/gitextensions/gitextensions/issues/12166
12165,"fix(bare repo): Skip ""git status"" and ""git stash list""","## Proposed changes

- `GitStatusMonitor`: Deactivate if bare repo
- `RevisionGridControl`: Skip `GetStashes` if bare repo

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/c4f01806-fe5c-4b58-9f6e-848f2acb0adf)

![image](https://github.com/user-attachments/assets/e957b05f-a395-4c00-9b7d-036e4e96babf)

### After

![image](https://github.com/user-attachments/assets/d205efad-7a1c-4262-b562-5e9155834c66)

no error messages in Output tab

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-25T22:19:30Z,2025-01-26T16:29:47Z,2025-01-26T16:29:47Z,,master,fix/bare_repo,2,2,2,1,0,0,"RussKie, gerhardol, pmiossec","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12165
12160,refactor(BlameControl): Use clearer interface,"## Proposed changes

- chore: Fixup typo in namespace `GitUI.CommandsDialogs`
- refactor(`RevisionDiffControl`): Use simpler types
- refactor(`BlameControl`): Clearly request `PathToBlame` by adding a dedicated interface `IRevisionGridFileUpdate` in favor of `IRevisionGridUpdate`

(Review commit by commit recommended.)

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests
- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-23T18:29:16Z,2025-01-30T19:38:20Z,2025-01-30T19:38:19Z,,master,fix/refactor_blame,18,130,110,4,0,2,"gerhardol, gerhardol, mstv, gerhardol","COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12160
12158,fix: Improve blame loading and other minor,"Fixes
- very occasionally not loaded blame
- disappearing context menu item ""Show differences for all parents in browse dialog""

## Proposed changes

- `BlameControl`: Do not cancel loading if nothing changed; combine cancellation tokens; use safe init values for `_lastTooltipX/Y`
- `AsyncLoader`: Make clearer & enable `nullable`
- `RevisionDiffControl`: Convert `IEnumerable` to array in order to avoid possible multiple evaluation
- `FileStatusList`: Avoid one-way menu item ""Show differences for all parents in browse dialog""

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

menu item disappeared when unchecked

### After

![image](https://github.com/user-attachments/assets/76cf5e49-0a66-4a1b-baac-a8248b818211)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-22T20:00:34Z,2025-01-23T18:19:05Z,2025-01-23T18:19:05Z,,master,fix/blame_loading,6,39,46,4,0,1,"gerhardol, RussKie","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12158
12156,feat(Repo Title): Append root repo to description of submodule,"Implements
https://github.com/gitextensions/gitextensions/pull/12144#discussion_r1922842814

## Proposed changes

`RepositoryDescriptionProvider.Get`:
- no change for normal repos
- for submodule: append description / name of its root superproject
- affects GE title bar and recent `.gitext` files for Window Jump List

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/ad8a8119-54f1-4bc2-8c3d-bbd9a54cb388)

![image](https://github.com/user-attachments/assets/de05620d-9ac5-4943-ae88-f8ed16c4caa5)

### After

![image](https://github.com/user-attachments/assets/cf94faf6-4b1f-4013-9c55-4c60f99ed83b)

![image](https://github.com/user-attachments/assets/20d5c6c7-7531-4008-aefc-2cb152328e98)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2025-01-21T20:57:01Z,,,,master,feature/superproject,2,143,20,8,7,2,"RussKie, RussKie, gerhardol, mstv, gerhardol, RussKie, mstv, pmiossec, gerhardol, mstv, gerhardol, mstv, gerhardol, mstv, gerhardol, mstv, gerhardol, copilot-pull-request-reviewer[bot], gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12156
12154,fix(RepoStateMixed.png): Align with other repo state icons,"## Proposed changes

`RepoStateMixed.png`:
All other icons are aligned to the top. So, do for this icon, too. 

## Screenshots

### Before | After

![image](https://github.com/user-attachments/assets/a789cf1a-c034-4ff3-9118-188b764c5a25)

### After

![image](https://github.com/user-attachments/assets/08de373c-271c-4f26-bfd4-f705b0460d36)

## Test methodology <!-- How did you ensure quality? -->

- review

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-20T21:45:45Z,2025-01-20T22:04:40Z,2025-01-20T22:04:40Z,,master,fix/icon,1,0,0,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12154
12152,style: Darker panel background,"## Proposed changes

Change to make the GE default theme changes the panel backgrounds not so extremely bright, more like Visual Studio Code ""Modern Light"" theme.
The GitExtensionsDialog are updated too but not the old style GitExtensionsForm.
The grid view and editors are unchanged.

The line number panel is made darker to contrast to the text and panels.

The dark mode look very dull without changing the panel colors, this is a preparation to align looks.

PR is needed for ICSharp too

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/aa6fe5c7-ace2-4e91-84e6-44b5f492b73a)

<!-- TODO -->

### After

![image](https://github.com/user-attachments/assets/c88bf5e1-b1ca-492e-a5f7-412fc5db94ab)

VS Code inspiration

![image](https://github.com/user-attachments/assets/2bfbbde2-f98b-41b1-bf3b-1ac1f6a4bca5)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Test environment(s) <!-- Remove any that don't apply -->

Win 11 24H2

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-19T22:39:49Z,2025-01-26T15:05:04Z,,,master,feature/darker-panels,9,22,7,1,2,1,RussKie,COMMENTED,True,https://api.github.com/repos/gitextensions/gitextensions/issues/12152
12151,build: Debug for ICSharp,"## Proposed changes

If the main app is built with Debug, also build ICSharp in Debug. No change for Release.

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-19T22:07:25Z,2025-01-20T22:31:57Z,2025-01-20T22:31:57Z,,master,feature/icsharp-debug,1,2,2,1,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12151
12150,"fix: Remove TreeView ""explorer"" style","## Proposed changes

Remove the native Win override to use ""explorer"" theme, part of #4491.
This seem to affect the TreeView selected item.
(ListView already changed).

Note: If this is not merged, the winow theme must be set to ""DarkMode_Explorer"" in dark mode.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/03f52a0a-fca7-46a4-b1b1-bf8c9c2a2985)

Unchanged
Not in focus
![image](https://github.com/user-attachments/assets/44dfa663-0c62-4dfe-a350-1a02a62746f3)

![image](https://github.com/user-attachments/assets/2fab855f-584c-42e9-8c3f-52e9927eea35)

with #12116 
![image](https://github.com/user-attachments/assets/f771c593-e155-4f46-8723-d84afde6edc3)
![image](https://github.com/user-attachments/assets/f170a99a-9a40-4e6d-9fb1-7281d50a4366)

### After

![image](https://github.com/user-attachments/assets/9c230bb3-5515-457e-94e3-4ce63b297357)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2025-01-19T12:52:00Z,,,,master,feature/treeview-selection,2,0,16,1,1,1,mstv,COMMENTED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12150
12149,FileStatusList: Add toolbar and actions on folders,"## Proposed changes

`RevisionDiffControl` if folder selected:
- Display names of contained items (with relative paths)
- Enable actions on contained items

`FileStatusList`:
- Add toolbar
- Align git-grep and filter boxes

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/1a0be075-2c31-44dd-91bc-8cd76acbfc33)

![image](https://github.com/user-attachments/assets/326c75ca-04f8-43ab-bc8a-b30e18160e4d)

### After

![image](https://github.com/user-attachments/assets/be029b54-8a7a-49d2-8105-87bd9f9fcfcf)

![image](https://github.com/user-attachments/assets/3fe67693-0bbc-40fe-95c0-ebc7e91d90a3)

![image](https://github.com/user-attachments/assets/94596cfa-7812-40fb-8fe8-4b61688c4058)

## Test methodology <!-- How did you ensure quality? -->

- manual
- extended tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2025-01-18T11:44:12Z,,,status: ready,master,feature/filestatuslist_toolbar,30,1782,1119,12,8,2,"gerhardol, mstv, gerhardol, gerhardol, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12149
12145,fix: Align a file status icon with other icons,"## Proposed changes

- Align file status icon ""FileStatusModifiedUnequal.png"" with others

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before | After

![image](https://github.com/user-attachments/assets/032c43d9-1690-4b6a-ba31-3368135e7bc0)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-16T20:42:02Z,2025-01-16T23:01:59Z,2025-01-16T23:01:59Z,,master,fix/diff_icon,1,0,0,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12145
12144,fix(Jump List): Use unique name for recent repos,"Fixes #10845

## Proposed changes

- `WindowsJumpListManager` / `RepositoryDescriptionProvider`: Use unique name for recent repos
  descriptive name with full path appended

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/6258ee77-e229-469f-ae19-208d2bd16c3e)

with

`repo.gitext` containing
`D:\Downloads\super\submodule2\repo\`
or
`D:\Downloads\super\submodule1\repo\`

### After

![image](https://github.com/user-attachments/assets/5fc04c81-1368-4600-8081-b8629fca24ef)   ![image](https://github.com/user-attachments/assets/7470db52-ace5-4efc-9506-fa4e996050fd)

## Test methodology <!-- How did you ensure quality? -->

- manual 

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2025-01-16T20:22:33Z,,,,master,fix/recent_repos,2,33,1,2,0,1,"gerhardol, gerhardol, mstv, gerhardol, pmiossec","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12144
12143,fix(AheadBehindDataProvider): Restrict debug output,"Fixes #12005

## Proposed changes

- `AheadBehindDataProvider`: Restrict debug output to debug build and never to Output tab
(The case is properly handled. So, there is no need to bother users with this output.)

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-15T21:55:09Z,2025-01-16T19:53:01Z,2025-01-16T19:53:01Z,,master,fix/trace_output,1,1,1,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12143
12142,feat: Bring to front on drag drop of patch file(s),"## Proposed changes

Patch files can be dropped onto the RevisionGrid. But the app stays in the background.
Force the window to the front using a factored out extension method.

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-15T21:52:09Z,2025-01-16T19:52:30Z,2025-01-16T19:52:30Z,,master,feature/force_activate,3,25,14,1,0,1,"gerhardol, RussKie, RussKie","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12142
12141,test(ExecutableTests): Relax timeout for slow AppVeyor,"## Proposed changes

Several CI builds failed because the testcase execution on AppVeyor took more than 3 seconds.
Relax the regarding timer.

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-15T21:48:47Z,2025-01-16T19:48:29Z,2025-01-16T19:48:29Z,,master,fix/tests,1,1,1,1,0,0,"gerhardol, RussKie, mstv","APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12141
12140,fix: remove override highlight linenumber control,"## Proposed changes

for files without explicit highlighting

Note: I may want to have a separate color for the linenumber display, but it should be adapted for theming.
This override (including the ICSharpCode change) is required for consistent handling, so that is a separate PR.
This looks very weird in dark mode.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
![image](https://github.com/user-attachments/assets/2849b002-1383-47e6-bee5-2fc8c2e1c49d)

but explicit strategies are OK
![image](https://github.com/user-attachments/assets/048dbe3a-6628-4986-8d99-b8ac3d5d6eb9)

### After

![image](https://github.com/user-attachments/assets/30a1cacb-a872-41e0-9f0a-b74b49b1da34)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-14T21:58:59Z,2025-01-20T22:51:12Z,2025-01-20T22:51:12Z,,master,feature/line-number,2,1,5,1,0,0,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12140
12138,"feat: Avoid just ""app"" / ""repo"" / ""repository"" in app title","## Proposed changes

Some repos include submodules with additional subfolders
- ""super/submodule1/repo""
- ""super/submodule2/repo""
Currently, these submodules cannot be distinguished in GE's title bar.
Add a regex for skipping uninformative repo names ""repo"" and ""repository"".

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/6d4690df-4bcc-4ac2-b2b6-f7cfbba20b5f)

### After

![image](https://github.com/user-attachments/assets/6878f63e-ea24-403b-a92b-f72ee208ba18)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-13T22:53:10Z,2025-01-16T19:47:36Z,2025-01-16T19:47:35Z,type: discussion,master,feature/repo_title,3,12,0,2,0,0,"RussKie, RussKie","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12138
12135,TreeView: Revert horizontal scroll,"## Proposed changes

- chore(`TreeViewExtensions`): Remove namespace block
- chore(`TreeViewExtensions`): Alpha-sort methods
- refactor(`TreeView`): Extract `EnsureVerticallyVisible` and `ScrollLeftMost` from `LeftPanel.Tree.ExpandPathToSelectedNode`
- replace all occurrences of `TreeNode.EnsureVisible`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/347a6fb9-7035-45b7-ac10-5639f7132bc5)

### After

![image](https://github.com/user-attachments/assets/fb3e2728-a363-4275-a47a-f20a90f19001)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Please do not squash-merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-09T17:26:50Z,2025-01-10T23:04:19Z,2025-01-10T23:04:19Z,,master,fix/treeview_hscroll,5,91,83,3,0,1,"gerhardol, mstv, gerhardol, mstv, RussKie, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12135
12133,fix: InactiveSelectionHighlight in theme,"## Proposed changes

Change OtherColors.InactiveSelectionHighlightColor to a themeable color.
It requires tweaking for dark mode.
This PR has no change for the default theme.

## Test methodology <!-- How did you ensure quality? -->

Review/Visual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-06T22:22:44Z,2025-01-10T21:38:39Z,2025-01-10T21:38:39Z,,master,feature/inactiveselection-appcolor,7,34,26,3,1,1,"RussKie, mstv, mstv, mstv, mstv","APPROVED, APPROVED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12133
12131,fix(theme): Check for default theme,"https://github.com/gitextensions/gitextensions/pull/12125#discussion_r1903343778

## Proposed changes

The check for the default theme must use the theme name, as the theme is a separate instance.

Unneeded processing and potential issues like https://github.com/gitextensions/gitextensions/pull/12125#discussion_r1903343778

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-05T23:07:15Z,2025-01-10T20:42:48Z,2025-01-10T20:42:48Z,,master,feature/theme-compare-default,1,9,2,2,1,1,"mstv, RussKie, RussKie","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12131
12130,feat(git-grep): Show function name of matches,"## Proposed changes

- Pass argument `--show-function` to `git grep` 

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/2e239e93-b7f8-43ef-8dc4-adfd5214a4f9)

### After

first commit with
```
git config --global color.grep.matchSelected ""yellow reverse""
```
![image](https://github.com/user-attachments/assets/b378a039-370f-4841-9255-66ee652044d3)

second commit
![image](https://github.com/user-attachments/assets/373743f9-1fef-4ad1-8857-ccfec225af26)

second commit with additional git config
```
git config --global color.grep.function ""white reverse""
```
![image](https://github.com/user-attachments/assets/d9743690-4a12-421b-8487-4a800ebed45b)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-04T22:28:54Z,2025-01-07T22:34:54Z,2025-01-07T22:34:54Z,,master,feature/grep_show_function,4,31,10,4,5,2,"gerhardol, RussKie, gerhardol, mstv, gerhardol, gerhardol","COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12130
12129,fix(FileStatusList): Do not loop around with wheel,"Fixes #12128

## Proposed changes

- `SelectPreviousVisibleItem` / `SelectNextVisibleItem` shall not loop around to last / first item, e.g. when using (`Alt`+) mouse wheel

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-04T21:13:41Z,2025-01-07T22:29:56Z,2025-01-07T22:29:56Z,,master,fix/12128_loop_next_file,1,2,2,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12129
12127,fix(theme): Remove unused hook methods,"Remove the no longer working hooking preparing for #12111
This should have no effect on the invariant theme in v5.

## Proposed changes

Remove the EasyHook handling that was required for theming in GE v3.x with .NET framework v4. This solution has has not worked since GE v4, that use .NET core (.net6 and later). .net9 has experimental support for dark mode that can enable the use of dark mode.

The activation of hooking was disabled by the define SUPPORT_THEME_HOOKS. A number of unused methods was used too,
as well as the EasyHooks submodule.

The .net9 solution do not allow customization of system colors, so overrides were removed from the themes.
As the darksilver theme mostly changed system colors, it was removed.

The invariant theme system colors is required by theming to adjust colors and still requires the system colors.
The color for MenuHighlight was corrected in the invaiant theme. ButtonFace, ButtonHighlight, ButtonShadow was assumed to be duplicates of Control* colors, this was not corrrect and the handling was removed.

The workaround for dark header was removed too.

## Test methodology <!-- How did you ensure quality? -->

Visual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-04T12:09:05Z,2025-01-10T20:40:27Z,2025-01-10T20:40:27Z,,master,feature/remove-hooking,30,18,3188,1,1,1,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12127
12126,chore: Remove ImageTransparentColor,"Preparation for https://github.com/gitextensions/gitextensions/pull/12111
See #12123 for motivation.
This PR removes use of hardcoded colors so it is feasible to manually review that #12125 is handled, reducong hits to `Color`

## Proposed changes

The default Color.Transparent is used in the GE icons. When set, it was mostly Color.Magenta and that is not used by GE icons as well the few other colors.

## Test methodology <!-- How did you ensure quality? -->

Review

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-04T00:12:49Z,2025-01-10T21:00:56Z,2025-01-10T21:00:56Z,,master,feature/image-transparent-colors,11,0,46,3,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12126
12125,fix: Adapt hardcoded colors,"Preparation for https://github.com/gitextensions/gitextensions/pull/12111
Simplify review of the theme update.
This PR does not change behavior for the invariant theme.
There may be tweaks required to the theme handling in https://github.com/gitextensions/gitextensions/pull/12111 when that is actively reviewed, that review should be based on this (and similar) PRs.
Will likely be merged together with similar preparing PRs.

## Proposed changes

Prepare for theming by adopting hardcoded colors to theme colors.

Some colors set in Designer updated in the form code files. 
Requested in the theme PR, make it harder to review this PR.
https://github.com/gitextensions/gitextensions/pull/12111#discussion_r1898818038

## Test methodology <!-- How did you ensure quality? -->

Review

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-04T00:07:12Z,2025-01-10T23:00:58Z,2025-01-10T23:00:58Z,,master,feature/adapt-hardcoded-colors,30,94,61,1,5,2,"mstv, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, mstv, mstv, gerhardol, gerhardol, gerhardol, mstv, gerhardol, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12125
12124,fix: MakeBackgroundDarkerBy on current theme,"Preparation for https://github.com/gitextensions/gitextensions/pull/12111
Simplify review of the theme update.
This PR does not change behavior for the invariant theme.
There may be tweaks required to the theme handling in https://github.com/gitextensions/gitextensions/pull/12111 when that is actively reviewed, that review should be based on this (and similar) PRs.
Will likely be merged together with similar preparing PRs.

## Proposed changes

This is related to the change in #12123

## Test methodology <!-- How did you ensure quality? -->

Review

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-04T00:03:15Z,2025-01-10T21:37:03Z,2025-01-10T21:37:03Z,,master,feature/makedarkerby,2,66,67,1,0,0,"RussKie, mstv, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12124
12123,fix(theme): Do not adapt system colors,"Preparation for #12111 
Simplify review of the theme update.
This PR does not change behavior for the invariant theme.
There may be tweaks required to the theme handling in #12111 when that is actively reviewed, that review should be based on this (and similar) PRs.
Will likely be merged together with similar preparing PRs.

## Proposed changes

System colors are already adapted to the Windows theme and should not be transformed.
.net9 dark mode does not allow tweaking system colors even, but also the old solution should not have tweaked the system colors.

## Test methodology <!-- How did you ensure quality? -->

review

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-04T00:00:01Z,2025-01-10T20:44:34Z,2025-01-10T20:44:34Z,,master,feature/no-adapt-system-colors,4,5,5,1,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12123
12122,fix(FileStatusList): Avoid focus confusion on AppActivate,"Fixes regression caused by #12033

## Proposed changes

`FileStatusList`:
- Avoid setting `ActiveControl` on startup which makes `RevisionGrid` (sic!) get focused on `AppActivate`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

`FileStatusList` loses focus when switching to another app and back

### After

`FileStatusList` is still focused

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-03T19:22:13Z,2025-01-07T22:29:26Z,2025-01-07T22:29:26Z,,master,fix/activecontrol,1,5,1,2,0,0,"gerhardol, RussKie","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12122
12121,feat: Add syntax highlighting for some files,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Update of ICSharpCode.TextEditor submodule to https://github.com/gitextensions/ICSharpCode.TextEditor/pull/44

## Proposed changes

-  Add Gherkin *.feature syntax highlighting
-  Add .editorconfig as ini file
-  Add ""some"" syntax highlighting for yaml files

## Screenshots <!-- Remove this section if PR does not change UI -->

See Submodule PR

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-03T09:04:58Z,2025-01-03T09:23:26Z,2025-01-03T09:23:26Z,,master,editor_improve_syntax_highlighting,1,1,1,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12121
12120,fix(git-grep): Do not update on AddToSearchFilter,"Avoids double update of git-grep if search text matches a history entry

## Proposed changes

`FileStatusList`:
- Temporarily remove `cboFindInCommitFilesGitGrep_SelectedIndexChanged` in `AddToSearchFilter`
- Declare `sender` nullable for all event handlers

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-02T20:58:36Z,2025-01-03T18:39:12Z,2025-01-03T18:39:12Z,,master,fix/git_grep_update,1,56,48,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12120
12119,fix(WindowPositionManager): Add vertical heuristic,"Fixes #11589 for maximized FormCommit

## Proposed changes

`WindowPositionManager`:
- Add vertical heuristic analogue to existing horizontal heuristic
- Default to top left of first screen as fallback

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual
- adapt existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2025-01-02T12:13:02Z,2025-01-03T18:38:21Z,2025-01-03T18:38:21Z,status: ready,master,fix/11589_restore_window_position,4,38,14,2,2,1,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12119
12118,feat: SystemColors.Window in Dashboard theme,"## Proposed changes

Use SystemColors.Window for dashboard background theme, to be consistent with the normal app.
Some renaming to clarify color usage

Prepare the dark theme to be consistent with the app. The dark colors are not using the blue colors of the default light theme but greyish colors.
The theme does not look better, but is consistent with the .net9 dark mode (that cannot be tweaked much).


## Screenshots <!-- Remove this section if PR does not change UI -->

Recent repo background and searchbox background swapped.

![image](https://github.com/user-attachments/assets/f8dda253-5eee-488e-b6ca-91cda73c947f)
![image](https://github.com/user-attachments/assets/71af900e-fab9-4bc5-b313-bca145410532)

Alternative light theme with system colors as for the dark theme
![image](https://github.com/user-attachments/assets/bf9d9164-3ff2-4d83-b706-22acfaa4431b)

Note that the second header cannot be changed in the darktheme in .net9 (unless ListView is replaced)

![image](https://github.com/user-attachments/assets/48016695-9a4f-4558-a224-c6e95366fa50)
![image](https://github.com/user-attachments/assets/c80b554a-0b8f-40fb-addc-c76c3ad5059e)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 24H2

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2025-01-01T21:06:36Z,2025-01-03T22:52:25Z,2025-01-03T22:52:25Z,,master,feature/dashboard-theme,5,55,47,1,3,1,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12118
12117,feat: branch diff adjust icons for file status,"## Proposed changes

Modify the icons for the file status list when comparing branches with a common base, the info with feedback for where the files are changed: Unequal/B (second), A (first), Same (both changes the same).

Color is added to give some feedback of the change in addition to the (pixel) character: B (blue-violet), A (yellow) and same (green) (unequal was red already).
Some minor anti-aliasing too.

Also prepare the icons for dark mode.
Edit: also updated added/removed/copied/renamed (just modified first) (all submodule related are not changed, as before).

Related to #12111 
This could be handled in that PR too, but the intention is that that PR in itself should have a minimal of changes to the light mode.

PHYs attribute has been removed with TweakPng

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/1509182e-5f78-4a01-b9c7-5ae77fe96785)
![image](https://github.com/user-attachments/assets/da772105-f699-4de5-9918-ee7e5a6fbc14)
![image](https://github.com/user-attachments/assets/3655c2a9-da83-4dfd-8b5c-90220b5ff26e)
![image](https://github.com/user-attachments/assets/8a816bc2-3cad-4841-99ea-79c8232fd6b8)

Dark mode is not used, but the pixel char is hard to see with dark text
![image](https://github.com/user-attachments/assets/39b2c26d-3764-4725-94e6-1dd2def92d84)
![image](https://github.com/user-attachments/assets/c3e59a8d-a245-41fc-a1fe-8ffc7db2cde2)

### After

![image](https://github.com/user-attachments/assets/c8d8eb4a-989e-41d2-8435-b8782f79bb74)
![image](https://github.com/user-attachments/assets/38862652-ffe5-4169-9b30-417b3c15fdf8)
![image](https://github.com/user-attachments/assets/5f62316e-1571-4a19-8f55-33142b5869ef)
![image](https://github.com/user-attachments/assets/76242262-b672-4f3f-bd3a-85632c639f44)

![image](https://github.com/user-attachments/assets/9ec7b6d2-f725-4cc6-a18b-d6104c6bd250)
![image](https://github.com/user-attachments/assets/906604c6-e2e7-4d1e-8274-4abf09c8a580)
![image](https://github.com/user-attachments/assets/260654b5-dc70-4f6e-a0b5-dfb10f8ea9b3)

![image](https://github.com/user-attachments/assets/8c1fc795-0b18-4b7e-a5a2-94836d483a49)
![image](https://github.com/user-attachments/assets/2715e15e-dc1f-4f32-8bfa-7374af970981)
![image](https://github.com/user-attachments/assets/169bbc9f-669a-4056-960d-61d61eb78699)
![image](https://github.com/user-attachments/assets/939a5ea5-f894-471a-81c7-a878348122b0)

Slightly darker background than in the app
![image](https://github.com/user-attachments/assets/a7e17546-a470-4f3f-90dd-a109154476c1)
![image](https://github.com/user-attachments/assets/e3a7c7ae-4006-42e2-b664-d647adaa2d86)
![image](https://github.com/user-attachments/assets/4684efd5-d107-48d1-8845-aaafb5fc25fe)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Test environment(s) <!-- Remove any that don't apply -->

Win11

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-12-30T19:23:03Z,2025-01-03T22:54:22Z,2025-01-03T22:54:22Z,,master,feature/dark-mode-status-icons,20,0,0,2,3,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12117
12116,feat(`FileStatusList`): Use `TreeView`,"Fixes #1326

## Proposed changes

`FileStatusList`:
- Replace `ListView` with `TreeView`
- Implement sorting as ""group by""
- Remove `GitItemStatusFileExtensionComparer`, `GitItemStatusNameComparer`, `GitStatusListSorter`, `ImageIndexListSorter`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/21557cab-de33-4306-aaa0-35c521a3edd4)

### After

![image](https://github.com/user-attachments/assets/a5ce1706-8ff3-4710-9178-1e5fd0fcd0e4)   ![image](https://github.com/user-attachments/assets/438ddaf3-5588-4f37-ad98-50e2d119cccf)   ![image](https://github.com/user-attachments/assets/582c53eb-422a-45c9-9e57-cf9f2f4cac7e)

![image](https://github.com/user-attachments/assets/6d258fe3-6423-429c-977a-4829589e460d)   ![image](https://github.com/user-attachments/assets/cff68519-0363-4d7a-a274-50baa796dd48)   ![image](https://github.com/user-attachments/assets/c0afe131-e34b-48ed-8c27-7580ace04075)

Modes:

![image](https://github.com/user-attachments/assets/f2fc6242-5d1e-47a0-bdb9-d8c22240edf5)

### FormCommit - Before

![image](https://github.com/user-attachments/assets/185fc381-de00-4ae0-8e70-b063097487d9)

### After: flat list by name / by path / tree

![image](https://github.com/user-attachments/assets/e02042e2-5f13-4fcc-9e8b-8b58aff4e25a)   ![image](https://github.com/user-attachments/assets/f0bfde09-590e-4582-89a6-ff742b02a6b7)   ![image](https://github.com/user-attachments/assets/8b11997d-08ac-4863-a60d-9e4eb1232eb8)

Prepared for replacing ""File tree"" in a follow-up:

![image](https://github.com/user-attachments/assets/1f7937b5-84e5-4f95-ab3d-d686869534c6)

## Test methodology <!-- How did you ensure quality? -->

- existing and added tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-28T13:43:34Z,2025-02-03T21:34:53Z,2025-02-03T21:34:53Z,,master,feature/filestatuslist_tree,30,1438,989,4,25,1,"gerhardol, gerhardol, mstv, mstv, mstv, mstv, mstv, gerhardol, gerhardol, mstv, mstv, gerhardol, gerhardol, mstv, gerhardol, mstv, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, mstv, gerhardol, gerhardol, gerhardol, mstv, gerhardol, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12116
12115,refactor(`FileStatusList`): Remove `SelectedIndex` API,"## Proposed changes

Remove `SelectedIndex` API from `FileStatusList`
- Add `HasSelection`
- `SelectedGitItems` takes `IReadOnlyList`
- Replace `GetNextIndex` with `SelectNextItem`
- Use `SelectFirstVisibleItem`

## Screenshots <!-- Remove this section if PR does not change UI -->

unchanged

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-28T12:25:12Z,2025-01-03T18:41:53Z,2025-01-03T18:41:53Z,,master,refactor/filestatuslist,7,84,155,1,0,1,"gerhardol, gerhardol","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12115
12113,fix: expand last column to ListView size,"## Proposed changes

ListView table columns did not expand to the size of the table. This expands the most reasonable column like name to the size of the table.

To find the forms where this occurred, I looked for NativeListView that seem to have more than one column by searching for AddRange(). There may be more (and one form was ignored).

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/user-attachments/assets/efbdd69d-90e1-490b-ac14-673961a7ad25)  ![image](https://github.com/user-attachments/assets/a0fcb007-a6d8-4ce0-a484-d7192a0a1382)

![image](https://github.com/user-attachments/assets/e1947c1a-ee38-47b3-a9d2-484b9ef457e9) ![image](https://github.com/user-attachments/assets/f59dd1a4-9657-4088-8cff-6f9dd39992c3)

![image](https://github.com/user-attachments/assets/a71e1659-dfc7-4291-9cd0-15a1f6961d2f) ![image](https://github.com/user-attachments/assets/bfc43301-03da-430c-a988-635354b3ac5f)

![image](https://github.com/user-attachments/assets/5f4d3abd-b46f-4694-b28f-de379ffa3169) ![image](https://github.com/user-attachments/assets/7669aa4e-18cb-4e6f-bc5f-eebb60c496ba)

![image](https://github.com/user-attachments/assets/e278425f-c9a3-4b21-afad-b4ad719d7c86) ![image](https://github.com/user-attachments/assets/4112f2c7-5ba9-49a4-8978-ccfc9d763d68)

Note: There is a similar issue in GitHub Fork&Clone, not getting it to work now and ignore it

![image](https://github.com/user-attachments/assets/4dd09627-9ac2-441e-8349-6b5fd2a10efc)

![image](https://github.com/user-attachments/assets/000fcd6c-906b-4875-a5ca-784db702d04c)

## Test methodology <!-- How did you ensure quality? -->

Visual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-12-25T22:19:42Z,2025-01-03T22:56:36Z,2025-01-03T22:56:36Z,,master,feature/listview-columns,10,30,0,1,4,2,"mstv, mstv","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12113
12111,.net9 dark theme,"Depends on #12064 #12116 #12152 and more
Otherwise I consider this to be very usable, just waiting dor the dependencies

## Proposed changes

This is a WIP PR for theming with https://github.com/dotnet/winforms/pull/11857
This is not as good looking as what @NikolayXHD did for GE 3.x, but it follows the standard Windows dark mode.
There are many limitations and issues in https://github.com/dotnet/winforms/pull/11857 still, it
is a later call to use this now or not.
The standard theme is not modified by this PR.

This PR has a number of tweaks to the setup to make this mostly usable, there are a number of issues still.
This is a preliminary summary of the status, to be added close to screenshots later.

This adds both a ""dark"" theme with mostly system colors that is quite gray and a ""dark+"" that is slightly darker.

Still to do - many the same in ge 3 dark mode

* Some adapted colors like Reset is a little muted, add specific colors? Cleanup the adaption in general?
* Add some kind of disclaimer for dark mode - at least that it is experimental in .net9. Win10 (and Win11 23H2?) is not expected to fully work too
* Some issues seen below may be improved
* tooltips and various other like disabled text boxes are bright, no dramatic issue [(also reported)](https://github.com/dotnet/winforms/issues/11954)
* Forms extending from GitExtensionsForm are much darker than the ""modern"" forms based on GitExtensionsDialog. This applies to for instance Settings and FindInFile, total of 20 forms. There is a difference for the light theme too, but the difference is bigger for dark mode. Certainly not in this PR.
* Syntax highlighting in the editor looks bad. The colors are adapted from the hardcoded highlighting per file type, there is no way to set specific colors (or use system colors?).

For .NET10

* ListView group headers like for remotes and in the dashboard is unreadable. FileStatusList is changed in #12116. Tracked in https://github.com/dotnet/winforms/issues/11953  This will not be changed in this PR, await .NET10
The ListView unreadable text is very annoying but I believe the text is in such forms that this can be accepted.
There will need to more color tweaking.

Contrast is generally quite low though, most of this in the WinForms colors. The dark+ theme has slightly better contrast, more like ge3 dark.
Some overrides were already implemented, like for https://github.com/dotnet/winforms/issues/11953

Mostly run on Win11, a few visuals on Win10

The darksilver theme was removed, it would be the same as the dark theme as system colors cannot be changed.
Similar highcontrast_dark was removed, not needed.
Invariant theme system colors are hardcoded, required to adjust colors.

I will appreciate if someone that is better in design and override .NET painting (.NET and GUI is not my strength, this is a hobby!) joins.

Some of the commits in this PR may be separated to individual PRs.

## Screenshots <!-- Remove this section if PR does not change UI -->

Not updated with the latest changes

Should this show GE 3.x/5.1/DarkMode?

For now some visual style examples and issues

General look, with #12152 and #12116 etc
![image](https://github.com/user-attachments/assets/63f57634-757e-4e40-bd1e-fc7151c585b0)

Before #12152 and #12116 etc, see the unreadable FileStatusList group text
![image](https://github.com/user-attachments/assets/6bec1722-7c21-4955-9788-f2f4b4285c7c)

Ansi colors in dark, mostly readable
![image](https://github.com/user-attachments/assets/b0e5df8d-8a43-4249-95eb-32383550d70d)
dark+
![image](https://github.com/user-attachments/assets/db7daf53-ede3-459d-a23d-34390fe2274d)


Example of Flat style (as in the PR) vs Standard.
![image](https://github.com/user-attachments/assets/5e965c06-56bb-458b-a546-369c1c028a57) 
![image](https://github.com/user-attachments/assets/9394deee-f47a-4f1b-ae79-03741f1dbaf5)

Example of light tooltip
![image](https://github.com/user-attachments/assets/fa63f3ba-6891-474d-b02e-503fcc4c3c55)

A few usages of ListView that is not FileStatusList use ListView header
Keep as this until .net10
![image](https://github.com/user-attachments/assets/23f7bbb5-f785-4fb9-9c7f-f906afe59360)

Disabled button text is hard to read
![image](https://github.com/user-attachments/assets/7923bb44-43e5-44e3-90a6-cf96a6048325)

Panels in dark+ are darker, but tab foreground is still SystemColors.Windows (and inactive tabs is not so far from the background). Not so off though.
![image](https://github.com/user-attachments/assets/e28cbdfd-4e31-41a4-bdc5-749505ee5eaa)

## Test methodology <!-- How did you ensure quality? -->

Used as primary interface

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Git 2.47.1.windows.1
- Microsoft Windows NT 10.0.26100.0
- .NET 9.0.0
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 9.0.0 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

Rebase merge (PR submitter must change the commit message for the last commit).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2024-12-22T23:49:58Z,,,,master,feature/net9-theming,30,163,188,30,3,1,"RussKie, gerhardol, RussKie, gerhardol, gerhardol, gerhardol, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",True,https://api.github.com/repos/gitextensions/gitextensions/issues/12111
12109,chore(FileStatusList): Enable `nullable` decoration,"## Proposed changes

- `FileStatusList`: Enable `nullable` except for comparers (which will be removed in a follow-up anyway)

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-20T22:39:18Z,2024-12-21T09:26:36Z,2024-12-21T09:26:36Z,,master,fix/filestatuslist_nullable,1,36,24,1,0,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12109
12108,fix(File History): Handle artificial commits,"Fixes #12107

## Proposed changes

- `FormFileHistory`: Do not call `GetFileBlobHash` for artificial revisions, use `File.Exists` insteads

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-20T16:39:04Z,2024-12-21T09:26:04Z,2024-12-21T09:26:04Z,,master,fix/12107_getfileblobhash_for_artificial,1,7,4,1,1,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12108
12105,Rename FormBrowseController -> GpgInfoProvider,"
## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-12-20T05:40:21Z,2024-12-20T14:26:36Z,2024-12-20T14:26:36Z,,master,IGpgInfoProvider,12,396,382,1,0,0,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12105
12104,Disable selected Tools menu items in dashboard,"...as those only apply to a git repo.

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-12-20T03:47:28Z,2024-12-21T12:25:03Z,,,master,dashboard_disable,1,2,0,1,0,3,"copilot-pull-request-reviewer[bot], mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12104
12101,fix(Editor): Adapt selection length on replace,"Fixes #12084

## Proposed changes

- `Editor/FindAndReplaceForm`: Adapt selection length on replace

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-13T20:29:33Z,2024-12-14T22:05:07Z,2024-12-14T22:05:07Z,status: ready,master,fix/replace_all,1,8,0,1,2,2,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12101
12100,fix(GPG): Remove max length of key id,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #12099

## Proposed changes

- Set `toolStripGpgKeyTextBox.MaxLength` to 40

## Test methodology <!-- How did you ensure quality? -->

- to be tested manually

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-12T20:55:14Z,2024-12-13T16:09:29Z,2024-12-13T16:09:29Z,,master,fix/gpg_key_length,1,0,1,2,3,2,"gerhardol, pmiossec, pmiossec","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12100
12097,fix(Jump List Buttons): Deactivate on modal dialog,"Fixes #3128

## Proposed changes

- Disable Windows Jump List buttons if GE shows a modal dialog or has no valid wdir
- Bring GE to front on click of Windows Jump List button

## Test methodology <!-- How did you ensure quality? -->

- manual

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 10

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-10T23:34:19Z,2024-12-16T18:53:09Z,2024-12-16T18:53:09Z,status: ready,master,fix/3128_jumplist,2,39,12,2,0,0,"gerhardol, mstv, mstv, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12097
12096,fix(Submodules): Allow spaces in folder name,"Fixes #11891

## Proposed changes

- Fixup `SubmoduleHelpers.DiffCommandRegex` to support spaces in folder names of super repo
- Add test for `CreatePatchFromString` which uses a similar regex (not changed because it has a more generic scope)

## Test methodology <!-- How did you ensure quality? -->

- extend tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-10T22:07:34Z,2024-12-11T21:04:43Z,2024-12-11T21:04:43Z,,master,fix/11891_submodule_spaces,4,28,4,1,0,0,"RussKie, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12096
12095,fix(GetTagMessage): Do not truncate last line,"Fixes #11241

## Proposed changes

- Use `Trim` instead of skipping the last line (as suggested by @toesus)
- Remove pointless support for Mac line end (git does not use it) 

## Test methodology <!-- How did you ensure quality? -->

- adapt exisiting tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-10T19:35:45Z,2024-12-11T21:01:12Z,2024-12-11T21:01:12Z,,master,fix/11241_tag_annotation,2,7,19,1,0,0,pmiossec,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12095
12093,fix(File History): Indicate not identifiable file,"Improves UX on #12088, which is basically a git issue

## Proposed changes

`FormFileHistory`:
- Hide tabs ""Diff"", ""View"" and ""Blame"" if Git cannot identify the file blob, e.g. because it was deleted, or was renamed in an not merged branch 
- Show an error message in the ""Commit"" tab title, i.e. in the place where the tabs disappear
- Remove unused `FormFileHistoryController` instance

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/aef7a2d7-ac2d-49ae-9212-49c4ebe5124c)

![image](https://github.com/user-attachments/assets/cc52b19d-a60c-46db-b8e7-7104a2802a62)

![image](https://github.com/user-attachments/assets/cac7c09a-ca78-465d-8943-1bdc3378d389)

### After

![image](https://github.com/user-attachments/assets/feb9e80d-ad59-48af-b2cb-f698bfdcda82)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-09T20:03:17Z,2024-12-10T19:08:46Z,2024-12-10T19:08:46Z,,master,fix/filehistory_error,2,15,3,1,0,1,"gerhardol, RussKie","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12093
12092,fix(File History): Correctly quote filename,"Fixes
part of #12088

## Proposed changes

- `FormFileHistory` and `RevisionGridControl`: Correctly quote filename
- Factor out `DiffMergeToolConfigurationManager.UnquoteString` to `StringExtensions.RemoveQuotes`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual: check Git Command Log
- add & adapt testcases

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-09T17:18:26Z,2024-12-09T23:05:01Z,2024-12-09T23:05:01Z,,master,fix/filehistory_quotes,6,80,36,3,0,1,"RussKie, RussKie, RussKie, gerhardol","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12092
12091,fix(PatchProcessor): Fixup encoding for diff text,"Fixes #12066

## Proposed changes

- `PatchProcessor.StartOfContentsRegex`: Move `'-'` to first position inside `""[ -+@]""` in order to avoid special meaning in regex.
  This made `CreatePatchFromString` choose the wrong encoding for removed line.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/bd128b9c-a56c-406f-b5d4-784a6824fe7c)

### After

![image](https://github.com/user-attachments/assets/10d17554-103c-467f-92ef-39dee678dc9a)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-06T22:23:15Z,2024-12-08T22:26:18Z,2024-12-08T22:26:18Z,,master,fix/12066_encoding,8,77,8,3,0,2,"RussKie, gerhardol, gerhardol, gerhardol","APPROVED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12091
12090,fix(blame previous): Remove restriction to availibility of the actual revision,"Fixes #10946

## Proposed changes

`BlameControl`
- Remove restriction to availibility of the actual revision
- Use visible previous revision instead

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

context menu item disabled

### After

context menu item enabled if there is shown a (virtual) parent

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-05T22:54:23Z,2024-12-11T20:59:38Z,2024-12-11T20:59:38Z,,master,fix/10946_blame_previous,3,46,23,3,1,1,"gerhardol, gerhardol, gerhardol","COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12090
12089,fix(FormBrowse): Keep file context on deactivation of filter,"Fixes UX issue
mentioned in https://github.com/gitextensions/gitextensions/issues/10946#issuecomment-2483313002

## Proposed changes

- `FormBrowse`: Set `FallbackFollowedFile` of ""Diff"" and ""File tree"" only if not empty
  in order to not loose the file context (""last clicked file"")

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-05T22:43:17Z,2024-12-08T22:26:59Z,2024-12-08T22:26:59Z,,master,fix/file_context,1,5,2,1,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12089
12085,"fix(ProcessWrapper): Provide git error message instead of ""External program returned non-zero exit code.""","## Proposed changes

- feat(Git Command Log): Log `StandardError`, too, unless not redirected (initial draft by @gerhardol)
- fix(`ProcessWrapper`): Provide git error message (if any) instead of ""External program returned non-zero exit code.""
- fix(`ExecutableExtensions.ExecuteAsync`): Remove check for `DubiousOwnershipSecurityConfigString` because that error message is provided by `ProcessWrapper` now 
- fix(`AsyncLoader`): Do not swallow unhandled exceptions
- fix(`BlameControl`): Show git error message and avoid outdated tooltips

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/160d1087-69bf-4318-af05-cb3aad228401)

![image](https://github.com/user-attachments/assets/e0f1e81c-817b-4c78-98b4-14a9e5ee3ffb)   ![image](https://github.com/user-attachments/assets/0b6488b1-99a3-4206-91c0-062f017b030c)

### After

![image](https://github.com/user-attachments/assets/5a910961-bc1f-491a-9b0b-3e408023fcdf)

![image](https://github.com/user-attachments/assets/c0a4a093-dfce-47c0-99ec-1677a76f3ca7)  ![image](https://github.com/user-attachments/assets/8c1d6be4-d926-4fda-8e64-fbb92970dc61)

## Test methodology <!-- How did you ensure quality? -->

- manual
- adapt existing tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-03T00:38:50Z,2024-12-08T22:19:15Z,2024-12-08T22:19:15Z,,master,fix/error_output,16,114,81,5,3,1,"RussKie, gerhardol","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12085
12081,"chore(dubious ownership): Remove ""Trust all repositories"" button","Closes #12053

## Proposed changes

- Remove ""Trust all repositories"" button from `BugReportInvoker.ReportDubiousOwnership`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/9026b47d-9b5d-4139-a150-99ba918b4dfd)

### After

![image](https://github.com/user-attachments/assets/e83963ec-3c86-4961-8f73-dfad95397bf9)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-12-01T21:13:19Z,2024-12-02T17:57:16Z,2024-12-02T17:57:16Z,,master,fix/12053_no_trust_all,3,0,58,1,0,0,"gerhardol, pmiossec","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12081
12080,fix(RevisionDataGridView): Always select a revision,"Fixes #11782

## Proposed changes

- If no selection can be restored, select the first shown real commit or the first row
- Set `CurrentCell` accordingly, which works wonders!

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

(after scrolling down and up again)

![image](https://github.com/user-attachments/assets/e160150f-9d70-404e-8ac6-b6ed99a99334)

### After

![image](https://github.com/user-attachments/assets/eac0c8f4-7ed9-4d8d-8cda-92d89ef62698)

## Test methodology <!-- How did you ensure quality? -->

- manual 

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-30T21:17:13Z,2024-12-02T22:15:38Z,2024-12-02T22:15:38Z,,master,fix/11782_no_selection,1,31,2,3,0,1,"RussKie, pmiossec, gerhardol, gerhardol","APPROVED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12080
12078,feat: Support saving LFS files,"Fixes #6146
Finishes #6189

## Proposed changes

- Detect LFS pointer files and apply the LFS smudge filter in this case - in order to always get the plain file contents 

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/e20a95e3-f6e2-45c6-a724-718f9249aaa8)

### After

![image](https://github.com/user-attachments/assets/9cc781e7-3aa5-40e8-b8b5-cd15511a6030)

## Test methodology <!-- How did you ensure quality? -->

- test repo: https://github.com/mstv/test_lfs
  with LFS-pointer-like files

![image](https://github.com/user-attachments/assets/49d3e7ec-a924-41cf-b62c-a36852f76109)

- created an invalid pointer file, which cannot be pushed to GH

![image](https://github.com/user-attachments/assets/8e7790cd-958e-4f16-805a-875b7ff226fc)

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-29T22:54:26Z,2024-12-16T18:52:24Z,2024-12-16T18:52:24Z,status: ready,master,feature/lfs,6,119,34,5,8,1,"gerhardol, mstv, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12078
12075,chore(MemoryStream): Add missing `using` statement,"Fixes https://github.com/gitextensions/gitextensions/pull/12072#discussion_r1861390651 in all other occurrences

## Proposed changes

- `MemoryStream`: Add missing `using` statement 
- Remove unnecessary stream copy from `FileViewer.CreateImage`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests
- manually (view `.ico` and `.png` file of GE repo in diff and as new file)

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-28T20:09:38Z,2024-11-28T20:46:57Z,2024-11-28T20:46:57Z,,master,fix/memory_stream,3,6,13,1,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12075
12072,fix(RevisionReader): Avoid hang on lengthy StandardOutput,"Fixes #12055

## Proposed changes

- fix(`RevisionReader.GetRevision`): Avoid hang in `StandardError.ReadToEnd` on lengthy `StandardOutput`
- The other usages of `GitCommandRunner.RunDetached` are not affected as they do not read `StandardError` at all.
- Extract `GetRevisionAsync` as proposed by Roslyn analyzer

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Test environment(s) <!-- Remove any that don't apply -->

https://github.com/mstv/test_lfs/tree/test_long_commit_body

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-27T22:05:10Z,2024-12-03T22:53:06Z,2024-12-03T22:53:06Z,,master,fix/12055_detached_process_hang,1,34,7,2,0,2,"gerhardol, RussKie, mstv, mstv, mstv, RussKie, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12072
12065,fix(Scripts): Do not display mnemonic ampersand,"## Proposed changes

- Remove mnemonic ampersand in script name except for tool bar and menus 

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/user-attachments/assets/101acf22-908e-415a-8c96-951128be04cd)

Before | After
-|-
![image](https://github.com/user-attachments/assets/c75f5f08-4284-44f3-a24a-2e9e1f7e9893) | ![image](https://github.com/user-attachments/assets/de057d5b-2792-44bd-a717-475af3b616e4)
![image](https://github.com/user-attachments/assets/db58e09a-1bb1-4e85-a20f-8165f4522e9d) | ![image](https://github.com/user-attachments/assets/2a33f32f-7b7c-4f35-9e09-d30774303cba)
![image](https://github.com/user-attachments/assets/bafe24e6-31b9-451d-add2-89740aff4377) | ![image](https://github.com/user-attachments/assets/c62464e2-6097-4ad6-9fc1-123448507a58)

## Test methodology <!-- How did you ensure quality? -->

- adapt tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-24T18:58:34Z,2024-11-24T23:21:18Z,2024-11-24T23:21:18Z,,master,fix/script_name,6,26,15,1,0,0,"RussKie, gerhardol, mstv, gerhardol, RussKie","APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12065
12064,.net9,"Requires #12167 (due to submodule changes)
Requires submodules first like https://github.com/gitextensions/ICSharpCode.TextEditor/pull/48

## Proposed changes

An attempt to try out .net9
There are the usual performance and syntax improvements in .net9/c#13
.net9 do not have long term support, update to .net10 will be required in a year.

One specific feature that is interesting is dark mode, discussions in #9191 and more issues

## Test methodology <!-- How did you ensure quality? -->

?

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2024-11-24T17:43:27Z,,,,master,feature/net9,13,30,9,3,4,1,"RussKie, gerhardol, mstv, gerhardol, RussKie, RussKie, gerhardol, mstv, RussKie, mstv, mstv, gerhardol, gerhardol, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12064
12063,fix: ReadExactly from stream,"
## Proposed changes

Read() from a stream could obtain fewer characters than requested, the number of chars read was never checked.

This is a warning with .net9 and a potential issue in current master.
With this change all bytes reported to be in the stream are read, which should be the case anyway.

ReadExactly () was added in .net7. (I considered using that when optimizing the read of revisions for 4.x (that was for .net6, just testing an update.) If Git reported number of bytes for a commit the handling was slower than the current handling that searches for \0 in the stream).

Alternatives to this change:
- Suppress the warning in .net9 
- Assign Read() to _ to ack that the value is not used (there will likely be an exception below instead)
- Return with error if no of bytes are not read.

## Test methodology <!-- How did you ensure quality? -->

code review - cannot provoke the error

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-24T16:57:04Z,2024-12-02T21:22:13Z,2024-12-02T21:22:13Z,,master,feature/readexactly-from-stream,1,1,1,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12063
12062,chore(stylecop): update to 1.2.0-beta.556,"## Proposed changes

No specific reason to update, just preparing for .net9 and c#13 that potentially need updates
We had a beta before, this beta is a year old so it should be considered ""stable"".

## Test methodology <!-- How did you ensure quality? -->

Build

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-24T16:45:19Z,2024-11-25T20:24:34Z,2024-11-25T20:24:34Z,,master,feature-stylecop,1,1,1,1,1,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12062
12061,fix: WFO1000 Property does not configure the code serialization for i…,"…ts property content

## Proposed changes

Content serialization must be declared with .NET9, error WFO1000 
Similar change is needed for conemu, icsharp submodules
An alternative is to supress the warning for .net9

I took .net9 for a quick spin, this was the biggest required change. A few other suppression needed due to deprecations.
The app starts. With the favorite in left panel the app hanged after a fetch though

## Test methodology <!-- How did you ensure quality? -->

Manual use, just annotations

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-24T16:40:19Z,2024-12-22T22:54:44Z,,,master,feature/wfo1000-property-serialization,30,169,19,2,1,1,"mstv, RussKie, gerhardol, RussKie, gerhardol, gerhardol, RussKie","APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12061
12060,feat(Git Command Log): Improve display of command cache,"## Proposed changes

- Hide git configuration arguments in cache tab, too
- Add context menu item for clearing the cache

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/898b269c-caad-4dee-9109-3003cff6c6a1)

### After

![image](https://github.com/user-attachments/assets/80af9355-12ed-46aa-bd75-24776a0d5acc)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Please do not squash merge
----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-24T16:24:49Z,2024-11-24T18:46:59Z,2024-11-24T18:46:59Z,,master,feature/cache,6,66,11,2,0,1,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12060
12058,perf(FormResetAnotherBranch): Use quicker command,"Fixes #12035

## Proposed changes

- FormResetAnotherBranch: Use quicker command ""update-ref""
- Enable the `OK` button using a dry-run of the previous command ""push"" 

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- add testcase

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-22T21:35:57Z,2024-12-02T18:01:08Z,2024-12-02T18:01:08Z,,master,feature/update-ref,4,92,16,6,4,1,"RussKie, pmiossec, pmiossec","APPROVED, CHANGES_REQUESTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12058
12057,chore: Convert remaining post-fix `FileAndForget`,"## Proposed changes

- Replace `ThreadHelper.JoinableTaskFactory.RunAsync(...).FileAndForget()` with `ThreadHelper.FileAndForget(...)` 

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-22T18:18:58Z,2024-11-24T18:38:29Z,2024-11-24T18:38:29Z,,master,fix/runasync,2,6,6,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12057
12056,Fix(git-grep),"## Proposed changes

- fix(FileStatusList): Extract function `GetFileStatusListTop` and consider all additional boxes
  in order to fixup the position of ""Loading data..."" - particularly on empty (artificial) commits, the just shown empty ComBox could be covered by the ListView
- fix(FileStatusList): Expand group of selected item
  otherwise the selection of a diff file is not visible because all diff groups are collapsed for git-grep
- fix(GetGrepFileAsync): Quote filename
  in order to support files with spaces in their name
- fix(git-grep): Go to first match if showing the entire file

## Screenshots <!-- Remove this section if PR does not change UI -->

Not really applicable

## Test methodology <!-- How did you ensure quality? -->

- manual

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-22T16:43:40Z,2024-11-24T18:44:23Z,2024-11-24T18:44:23Z,,master,fix/gitgrep,3,18,3,4,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12056
12049,fix(GPG): Ignore exit code from verify-tag,"Fixes #12048

## Proposed changes

- `GitGpgController`: Ignore exit code from ""git verify-tag""
   (Git does not document exit codes of this command. And the output is handled to a certain degree. If it fails for other reasons, users need to consult the Git Command Log.)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![EOE](https://github.com/user-attachments/assets/a5062bdf-8624-4965-996d-f6d5ed428bed)

### After

![image](https://github.com/user-attachments/assets/91d7c8b6-4d1c-46e4-bfbb-d221a68da800)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-19T21:26:20Z,2024-11-19T23:49:39Z,2024-11-19T23:49:39Z,,master,fix/12048_verify-tag,1,1,1,1,0,0,"pmiossec, RussKie, gerhardol","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12049
12040,fix(inline-diff): Limit highlight length,"Fixes #12038

## Proposed changes

- DiffHighlightService: Apply highlighting to the first 2000 characters only

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

stack overflow

### After

![image](https://github.com/user-attachments/assets/4e259f97-183b-4d3c-82f2-969b7c80c71c)

![image](https://github.com/user-attachments/assets/8a98266b-53aa-4b3c-ab8e-ed25e1b894b2)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-13T21:28:09Z,2024-11-14T20:53:08Z,2024-11-14T20:53:08Z,,master,fix/12038_limit_inline_diff,1,10,2,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12040
12034,feat(FileStatusList): Add examples of negative file filter,"## Proposed changes

FileStatusList: Add two examples of regex for excluding files
1. `""^(?!.*NotThisWord)""`: self-explanatory with easy-to-delete placeholder
2. `""^(?!.*\bg?tests?/)""`: common test folders, singular & plural, optional prefix 'g' (for a common C++ test framework)

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/user-attachments/assets/e3b79f32-305b-46b6-8ec0-0565e78a5590)

### Before

![image](https://github.com/user-attachments/assets/2acbfd48-19f0-4545-b893-dd8062b5bf2f)

### After

![image](https://github.com/user-attachments/assets/b48183cf-8cdb-4896-9f7b-13a6aece4e75)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-11T21:29:33Z,2024-11-12T20:56:27Z,2024-11-12T20:56:27Z,,master,feature/negative_file_filter,2,51,49,2,0,0,"gerhardol, RussKie, pmiossec","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12034
12033,feat(FileStatusList): Focus git-grep box on show,"## Proposed changes

- Make `cboFindInCommitFilesGitGrep` the active control when it is shown

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/user-attachments/assets/c4fbf9ba-1772-4b69-a691-230f5c221616)

### Before

![image](https://github.com/user-attachments/assets/0567bd67-59ee-4f60-b125-fcd0d960921b)

### After

![image](https://github.com/user-attachments/assets/f1b3fe30-f11f-4c78-a20c-32bd1c4229e9)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-11T21:04:58Z,2024-11-12T20:54:47Z,2024-11-12T20:54:47Z,,master,feature/focus_git_grep,1,2,0,1,0,1,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12033
12032,feat: skip gaps in blocks for mark inline,"## Proposed changes

To improve inline marking of not interesting parts

Inline differences dims text that are not changed (and add markers where text were removed/added on a line)
Before only consecutive removed followed by consecutive added lines were compared.

Note: This allows gaps in the lines, but still requires removed followed by added lines, so the following is not handled
To expand on this it could be possible to match all lines within a section, but it could be confusing if matches are too far apart.

![image](https://github.com/user-attachments/assets/2dd78734-7222-4082-9678-c35511e3f7b5)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/abcd9558-07e4-473d-b9fc-75b94d1bfaa0)

### After

![image](https://github.com/user-attachments/assets/d26cd195-81f2-42ef-a976-b812efe88963)

## Test methodology <!-- How did you ensure quality? -->

Tests added

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-10T17:46:36Z,2024-11-12T21:12:27Z,2024-11-12T21:12:27Z,,master,feature/mark-inline-gaps,4,154,1,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12032
12031,Address  CVE-2019-0820,"See https://github.com/advisories/GHSA-cmhx-cq75-c4mj

![image](https://github.com/user-attachments/assets/17896d75-d5d9-44c1-8e8b-90444175db4a)

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-09T02:38:07Z,2024-11-12T22:59:56Z,2024-11-12T22:59:55Z,,master,deal_with_CVE-2019-0820,3,9,3,2,3,1,"gerhardol, gerhardol, mstv, gerhardol","APPROVED, CHANGES_REQUESTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12031
12029,feat(CI/ADO): Add support for pull requests,"## Proposed changes

- Display Azure DevOps PRs builds result in commit built (pipeline is building a merge commit
and so it is a little more tricky to get the original hash of the commit built)
- Add support to open Pull Request page from contextual menu
- improve a little the tooltip (to have all the information on one line --and prepare display of multiple build result in the tooltip--)
   - display also PR id and build name

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

* The result for the PR is not available
![image](https://github.com/user-attachments/assets/55ea5bb7-a38a-450c-91ad-a8cc0e67c768)


### After

* Build result on the commit & Tooltip (with PR information)
![image](https://github.com/user-attachments/assets/6f0abb63-5e21-423a-ba70-65cf5d190439)


* Open the PR
![image](https://github.com/user-attachments/assets/60827d12-973a-42ce-933c-8fb8e8587d36)


## Test methodology <!-- How did you ensure quality? -->

- Manual 

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 5a7e3d88ee69ac359c3dcba8160c607959f85c97 (Dirty)
- Git 2.45.0.windows.1 (recommended: 2.46.0 or later)
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.8
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.31 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.33 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.20 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.7 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.8 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer do what they want with this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-07T23:05:58Z,2024-11-15T08:31:34Z,2024-11-15T08:31:34Z,,master,feat/adp_pr_builds,3,96,27,3,2,1,"gerhardol, RussKie, RussKie, RussKie, pmiossec, pmiossec, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12029
12028,fix(Diff View): Avoid exception on open,"Fixes #12026

## Proposed changes

Fixup FileStatusList:
- Skip unnecessary git-grep box visibility handling (which called `BeginInvoke` too early)
- Clear search string on hide of git-grep box

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-07T20:21:48Z,2024-11-08T16:09:14Z,2024-11-08T16:09:14Z,,master,fix/12026_git_grep_menu,1,12,4,3,0,1,"RussKie, gerhardol, mstv, pmiossec, gerhardol, gerhardol, mstv, gerhardol","APPROVED, APPROVED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12028
12023,feat(EditboxBasedConsoleOutputControl): Improve UX and add [password] input field,"Extends and supersedes #11182

## Proposed changes

- feat(FormStatus): Add password text box
  - as `UserControl`
  - Automatically show input field
  - Show in all `FormStatus`, not only in `FormRemoteProcess`
  - Focus the new control
  - Cleanup unnecessary `FreeThreaded`
- fix(EditboxBasedConsoleOutputControl):
  - Use `MonospaceFont` and `SystemColors.Info`
  - Less delays
  - Unblock UI
  - Workaround for hang in `WaitForExit`
  - Fixup dispose
  - Log ""Process killed""
- feat(EditboxBasedConsoleOutputControl): Add `AsyncStreamReader` in order to display prompts, i.e. output which has not been terminated with a line end (yet)
  Thus, there is no need for console window for SSH any longer.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![process_before](https://github.com/user-attachments/assets/805b0759-a6e0-4958-bb2f-dae5f4ca8636)

### After

![process_after](https://github.com/user-attachments/assets/c3045547-d3ef-46e7-b4af-b65eae147b53)

![input](https://github.com/user-attachments/assets/64eaf92d-fbcf-48cc-ae74-2dc0b21ae6f7)

## Test methodology <!-- How did you ensure quality? -->

- add unit test for `AsyncStreamReader` (would have been easier if `System.IO.StreamReader` implemented an `interface`)
- manual

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-06T23:28:43Z,2025-01-08T20:15:33Z,2025-01-08T20:15:33Z,,master,feature/console_replacement,17,928,94,10,3,1,"gerhardol, gerhardol","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12023
12022,Signed contributors.txt,":black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-06T02:06:08Z,2024-11-06T20:48:10Z,2024-11-06T20:48:10Z,,master,patch-1,1,1,0,1,1,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12022
12019,feat(graph): Add branch colors to theme,"Fixes #11282

## Proposed changes

- feat(graph): Add branch colors to theme

## Screenshots <!-- Remove this section if PR does not change UI -->

unchanged

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-03T21:30:56Z,2024-11-06T20:56:22Z,2024-11-06T20:56:22Z,,master,feature/11282_graph_colors,5,49,13,1,0,1,"RussKie, gerhardol","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12019
12018,fix: Add missing defaults to git attributes parser,"## Proposed changes

GE uses the Git built-in patterns in .gitattributes to detect if a file is binary in certain situations to prune detection. Sync the list to recent Git versions to add newer formats.

https://git-scm.com/docs/gitattributes#_defining_a_custom_hunk_header

Very minor change seen together with #12007 

## Test methodology <!-- How did you ensure quality? -->

Code review

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-11-03T21:14:42Z,2024-11-04T20:42:58Z,2024-11-04T20:42:58Z,,master,feature/gitattr-custom-chunk-header,1,1,1,1,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12018
12016,fix(File History): Do not change capitalization of filename," Fixes #11886

## Proposed changes

- fix(FileHistory): Do not change the capitalization of filename passed on the command line
  because the filename filter of ""git log"" is case-sensitive
  rather keep the existing path, which has the correct capitalization if the File History is invoked by GE

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/c74f53b0-537f-4056-87a8-614874d6f143)

### After

![image](https://github.com/user-attachments/assets/704e85a2-d53a-473f-9e0d-7cfc1af24007)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-02T21:23:36Z,2024-11-03T21:04:03Z,2024-11-03T21:04:03Z,,master,fix/11886_filehistory_capitalization,1,2,5,3,0,1,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12016
12014,fix(FilterToolBar): Correctly resize branch dropdown,"Fixes #11942

## Proposed changes

- fix(FilterToolBar): Correctly resize branch dropdown and restore filter text

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/fd2778ee-627d-4751-be9f-516dbfc081a7)

### After

![image](https://github.com/user-attachments/assets/0ef89f16-c298-4021-bed8-f8fd842bc692)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-02T17:45:12Z,2024-11-03T20:51:01Z,2024-11-03T20:51:01Z,,master,fix/11942_branch_filter,1,5,1,1,0,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12014
12013,fix(FormCommit): Restore file selection,"Fixes #11903

## Proposed changes

- fix(FormCommit): Restore correct condition in `RestoreSelectedFiles`, which was stupidly broken in #11363

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

first file selected

### After

selected file restored

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-02T13:30:01Z,2024-11-03T20:50:22Z,2024-11-03T20:50:22Z,,master,fix/11903_formcommit_selection,1,1,1,1,0,2,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12013
12012,"fix(FormDiff): Avoid ""A task was canceled.""","Fixes #11980

## Proposed changes

- fix(`FormDiff`): Separate `CancellationTokenSequence`s of `PopulateDiffFiles` and `ShowSelectedFileDiff`
  necessary because `ShowSelectedFileDiff` is called twice before `PopulateDiffFiles` finishes

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

exception

### After

works

## Test methodology <!-- How did you ensure quality? -->

- manual (compare commit e283787912ca8b0af82461f3d1eec50f3f680242 with working dir)

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-11-01T22:36:58Z,2024-11-03T20:49:31Z,2024-11-03T20:49:31Z,,master,fix/11980_formdiff_async,1,3,1,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12012
12007,fix(git diff): Suppress `diff.external`,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #12006

## Proposed changes

- Add argument `--no-ext-diff` to all 6 found `git diff` commands in order to suppress a possibly configured `diff.external` tool

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- adapt existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-29T19:43:00Z,2024-11-03T20:56:24Z,2024-11-03T20:56:24Z,,master,fix/12006_override_diff_external,5,10,4,1,6,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/12007
12004,fix(FileStatusList): Set `Text` for accessibility,"Fixes #10976

## Proposed changes

- Also set `listItem.Text` in addition to the `FileStatusItem` instance in order to provide accessibility information

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-28T21:47:40Z,2024-10-29T17:32:39Z,2024-10-29T17:32:39Z,,master,fix/10976_filestatuslist_accessibility,1,3,0,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/12004
11999,"fix(Push): fix false positive detection of ""detached head"" state","when branch name contains brackets.

fixes #11997 and #11970

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After
![image](https://github.com/user-attachments/assets/1e66e900-f873-44ab-a836-788cad7e8826)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 2b8f800a9d26f1ba95c49516e677b0a4e387b4a7
- Git 2.45.0.windows.1 (recommended: 2.46.0 or later)
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.8
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.31 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.33 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.20 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.7 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.8 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-22T22:41:14Z,2024-10-23T23:07:44Z,2024-10-23T23:07:44Z,,master,fix/formpush_detached_head,1,2,4,1,2,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11999
11996,Feature/repo favorites,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #

## Proposed changes

Adding support for selecting the existing branches (head, remote) to be marked as favorites and list them in additional node for easy access 

## Screenshots <!-- Remove this section if PR does not change UI -->
![image](https://github.com/user-attachments/assets/c866b76b-c3fa-45a8-87c5-e11abc28c789)

### Before

<!-- TODO -->

For some reason the image of favories node is not correctly showing as Star, though the star image in the resource i sset.

### After

<!-- TODO -->

## Test methodology <!-- How did you ensure quality? -->

- 
- 
- 

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2024-10-21T09:22:22Z,,,,master,feature/RepoFavorites,24,1439,310,19,14,4,"mstv, mstv, RussKie, RussKie, mstv, chkoddi, RussKie, mstv, chkoddi, mstv, RussKie, RussKie, mstv, chkoddi, chkoddi, chkoddi, chkoddi, chkoddi, chkoddi","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11996
11995,Singed for contributing ,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #

## Proposed changes

- 
- 
- 

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

<!-- TODO -->

## Test methodology <!-- How did you ensure quality? -->

- 
- 
- 

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-21T09:13:16Z,2024-10-23T19:51:15Z,2024-10-23T19:51:15Z,,master,patch-2,1,2,1,1,0,0,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11995
11994,fix(in-line diff): Support non-reversed git coloring,"## Proposed changes

- in case of `AppSettings.ReverseGitColoring` set to `false`, dim the text and keep the window background

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/0c1496c2-42e9-4566-90a9-29665774b06e)

### After

![image](https://github.com/user-attachments/assets/58f74933-c9f3-41ab-b5c9-424f8d69de54)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-20T16:45:32Z,2024-10-23T19:49:50Z,2024-10-23T19:49:50Z,,master,fix/inline_diff_positive,2,24,26,2,0,0,"gerhardol, mstv, RussKie, mstv","APPROVED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11994
11993,Improve unit tests code,"
## Proposed changes

- Add missing category to some unit tests
- use more idiomatic fluentassertion asserts
- update FluentAssertions to last stable

## Test methodology <!-- How did you ensure quality? -->

- run unit tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer do whatever he wants with this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-18T22:42:37Z,2024-10-19T21:24:10Z,2024-10-19T21:24:10Z,,master,improve_unit_tests,30,190,182,3,0,1,"RussKie, mstv, gerhardol","APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11993
11992,"fix: Handle dubious repo ownership, too, if detected by GitStatusMonitor","Fixes #11964

## Proposed changes

- `GitStatusMonitor`: Let the `BugReportInvoker` handle dubious repo ownership, and trace other exceptions
- `Main`: Register exception handlers as early as possible

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

empty FormBrowse

### After

dubious ownership popup

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-18T22:21:05Z,2024-10-19T21:47:46Z,2024-10-19T21:47:46Z,,master,fix/11964_bugreporter,2,19,8,2,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11992
11987,fix(FormRenameBranch): Run git interactively,"Fixes #10375

## Proposed changes

- FormRenameBranch: Run git interactively instead of manually dealing with git output and silent tracing of exceptions
- dialog remains open on error in order to be able to fixup the entered name

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

nothing but an entry in the Git Command Log:

![image](https://github.com/user-attachments/assets/77b1a307-2b4b-4629-a576-bb1747991dca)

### After

![image](https://github.com/user-attachments/assets/5e846766-89be-4ac0-a5c1-4e51bdc3ea1a)

## Test methodology <!-- How did you ensure quality? -->

- manual
- adapt testcase

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-15T19:57:39Z,2024-10-18T17:50:00Z,2024-10-18T17:50:00Z,,master,fix/10375_eoe,7,27,47,1,0,1,"gerhardol, mstv, gerhardol, RussKie","APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11987
11983,fix(difftastic): Adjust endmarkers,"## Proposed changes

First commit reviewed in #11982, this commit is incomplete in the handling of text markers . Actually, #11921 that merged adjacent textmarkers, slightly broke the Difftastic color processing.
The colors bleed slightly.
This PR refactors the processing and simplifies the handling too.

Note: It was maybe not a good move to try to process the Difftastic output to be similar to other GE diffs, but now its done.

## Screenshots <!-- Remove this section if PR does not change UI -->

This is with #11982 only, not in master
![image](https://github.com/user-attachments/assets/33d7fb40-6c0c-4950-8c68-c31063c649ef)

![image](https://github.com/user-attachments/assets/e1ff7866-6d15-4843-84f8-fe6fb99b06ea)


![image](https://github.com/user-attachments/assets/65957489-5e80-41c2-844f-ad8a29c5e714)

![image](https://github.com/user-attachments/assets/853a1242-46cf-4633-a81d-c8d8d3df2546)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-14T21:26:45Z,2024-10-27T12:59:45Z,2024-10-27T12:59:44Z,,master,feature/difftastic-markers,3,123,97,4,3,1,"mstv, gerhardol, gerhardol, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11983
11982,feat(difftastic): use VRulerPos for right hand diff,"## Proposed changes

instead of inserting '|' to the text

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
5.0.0 
Highlight colors is here normal/bold, changed to dim/bold in master

![image](https://github.com/user-attachments/assets/c6b11bd2-b9d2-4a7c-a9d5-3eb1a19975af)

### After

![image](https://github.com/user-attachments/assets/74dd30e9-1d2c-4843-ad6a-640aff8ce91b)

## Test methodology <!-- How did you ensure quality? -->

test for the divider added

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-14T20:52:09Z,2024-10-20T14:57:18Z,,,master,feature/grep-splitter,3,27,11,1,1,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11982
11981,feat: Cache the diff highlighting,"Depends on #11947

## Proposed changes

Split in two commits for review:

- GE diff highlighting, if Git coloring is not used (Git colors were cached already) 
- Inline processing to find common parts

Before this processing was done every time a marker was changed in the diff viewer.
(before #11947 the complete text was parsed every time too)

## Test methodology <!-- How did you ensure quality? -->

Refactoring only, tests exists

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-14T20:41:35Z,2024-10-21T21:31:23Z,2024-10-21T21:31:23Z,,master,feature/cache-textmarkers,7,48,69,1,0,2,"mstv, gerhardol, gerhardol, mstv, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11981
11976,Create SEC,9,closed,2024-10-12T20:26:12Z,2024-10-12T21:20:55Z,,,master,patch-1,1,21,0,1,0,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11976
11965,"fix(ReportDubiousOwnership): Support normal paths, too","Fixes #11958

## Proposed changes

- `ReportDubiousOwnership`: Support normal paths (containing spaces), too, by replacing the first single quote instead of searching for `""'%(prefix)""`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/f58f34b4-44c5-4502-acf5-8d2eaece5314)

### After

![image](https://github.com/user-attachments/assets/de02cb39-ea0c-4201-aa2e-0ff9e825d14b)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-07T07:10:20Z,2024-10-07T20:11:54Z,2024-10-07T20:11:54Z,status: ready,master,fix/11958_trust_dir,1,4,1,1,0,1,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11965
11963,fix: commit gpgSign Git defaults,"Fixes #11931

## Proposed changes

Commit dialogue ""Do not sign commit"" should explicitly not set GPG key.
The default is set to ""Git default"", using the git-config settings.

## Screenshots <!-- Remove this section if PR does not change UI -->

Adding the first option in the dropdown
![image](https://github.com/user-attachments/assets/5338277f-f5b8-4c8d-892f-aaad6c105593)

## Test methodology <!-- How did you ensure quality? -->

tests updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-06T17:09:31Z,2024-10-08T20:34:30Z,2024-10-08T20:34:30Z,,master,feature/i11931-default-gpg-sign,4,31,25,3,1,1,"mstv, mstv, mstv, RussKie, mstv","DISMISSED, COMMENTED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11963
11962,fix: Reset current ansi terminal color,"Fixes #11940

## Proposed changes

An empty ansi terminal sequence must be handled as an explicit reset.
This could cause that foreground colors were applied when black was to be used.

Adjust overridden colors for range-diff.
contextBold should not be reverse bold and
newDimmed/oldDimmed should be reverse.
(There is a minimal difference bold/normal black, but this context is
not very interesting.)

## Screenshots <!-- Remove this section if PR does not change UI -->

Slightly different behavior in 5.0 and master
Use mstv's branches repro/rangediff2-a and repro/rangediff2-b

5.0
![image](https://github.com/user-attachments/assets/d89d15c7-9543-4e5d-8d74-632189015709)

master
![image](https://github.com/user-attachments/assets/c8f4c8c5-c650-4002-adef-83f54370862d)

after
![image](https://github.com/user-attachments/assets/13bfed3f-2683-4e27-a10a-d0f1c474a0a3)

## Test methodology <!-- How did you ensure quality? -->

Tests are updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-06T15:59:27Z,2024-10-07T19:22:58Z,2024-10-07T19:22:58Z,,master,feature/i11940-reset-terminal-color,4,22,8,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11962
11960,Fix FileViewer's encoding bug when showing unstaged files,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11934

A bigger issue than originally mentioned in #11934 is that currently TextEditor provided/used by GitExtensions actually corrupts files 😬

## Proposed changes

- ICSharpCode.TextEditor has a helper which attempts to auto-detect the encoding, lets use it
- Depends on https://github.com/gitextensions/ICSharpCode.TextEditor/pull/42 because of this line [`FilePreamble = reader.CurrentEncoding.GetPreamble();`](https://github.com/gitextensions/gitextensions/blob/master/src/app/GitUI/Editor/FileViewer.cs#L793)
- For good measure, lets avoid creating `MemoryStream` when not necessary and we can write straight to `FileStream`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Switching between UTF8 file without BOM and with BOM

https://github.com/user-attachments/assets/b746f341-b702-427d-9514-2e83874c6d98

After save using `fileeditor` (`F4` from within commit dialog) ⚠️⚠️⚠️ notice corruption in a file without BOM

https://github.com/user-attachments/assets/6db61e34-6906-4713-a16b-fe100110bc35


### After

Both files even after saving them with `fileeditor` (`F4` from within commit dialog) are recognized as UTF8

https://github.com/user-attachments/assets/23260abd-30e1-4848-8027-323de38f1bcf


## Test methodology <!-- How did you ensure quality? -->

- Manually, checking files visually and with Hex editor

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-05T16:58:23Z,2024-10-06T11:58:02Z,2024-10-06T11:58:02Z,,master,fileviewer-encoding-fix,4,16,15,6,1,3,"mstv, RussKie, mdonatas, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11960
11959,fix(settings): Ignore non-boolean advanced git config settings,"Fixes #11939

## Proposed changes

GitConfigAdvancedSettingsPage:
- display git config without value or with non-boolean value as indeterminate 
- do not overwrite such settings

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/3da63fa5-0186-428e-87f4-49407a8b6856)

### After

![image](https://github.com/user-attachments/assets/4ee39b47-585f-4b7e-acd9-e37a0664114b)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-04T21:38:26Z,2024-10-09T20:14:36Z,2024-10-09T20:14:36Z,status: ready,master,fix/11939_git_config,1,7,2,2,0,0,"RussKie, gerhardol, gerhardol","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11959
11955,"fix: Restrict settings to ""global"" when not in a repository","and so that settings file can't be saved in a ""not existing"" local repository.

Check that repo is valid and provide the information when creating pages

Fixes #11907 (at least prevent one way to reproduce it)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/f367efa8-1506-415e-ac17-f8cbc727d8f0)

### After

![image](https://github.com/user-attachments/assets/51b27e99-252c-412d-8244-7aba513fc481)

## Test methodology <!-- How did you ensure quality? -->

- Manual (Opening settings from dashboard i.e. while no repo opened)

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).
(Will be squashed before merging)

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-02T08:32:17Z,2024-10-19T22:17:09Z,2024-10-19T22:17:09Z,,master,fix/settings-outside-repo,2,12,5,1,3,4,"gerhardol, RussKie, mstv, gerhardol, RussKie, pmiossec, pmiossec, RussKie, pmiossec, RussKie, mstv","COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11955
11954,fix(push): fix tracking reference not well selected,"by retrieving the gitref corresponding to local branch combobox

fixes #11899

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/bdae64e4-9bf8-487b-a574-32f5e08bdc8b)

### After

![image](https://github.com/user-attachments/assets/136653c9-7cbf-4023-84ac-199ca6267603)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-10-02T07:55:09Z,2024-10-19T12:58:06Z,2024-10-19T12:58:06Z,,master,fix/push_tracking_ref,1,20,14,1,5,3,"mstv, RussKie, gerhardol, pmiossec, mstv, RussKie","COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11954
11952,fix(FormGoToCommit): Improve performance,"Fixes #11683

## Proposed changes

`FormGoToCommit`:
- limit number of loaded branches and tags to 20.000 entries each
- assign `DisplayMember` first!
- activate `TextChanged` last
- cancel loading on `FormClosed`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual
- simulate lots of tags

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-10-01T20:22:24Z,2024-10-04T12:40:06Z,2024-10-04T12:40:06Z,:eyeglasses: status: needs review,master,fix/11683_gotocommit,2,16,7,2,5,0,"RussKie, mstv, gerhardol, RussKie","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11952
11950,Correctly select destination remote branch,"Resolves #11899


## Test methodology <!-- How did you ensure quality? -->

- manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-30T13:55:42Z,2024-10-10T02:50:07Z,,,master,11899,1,3,2,1,6,1,mstv,COMMENTED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11950
11948,fix(show git-grep): Sync and use actual visibility,"## Proposed changes

`AppSettings` can be changed by another instance.
`AppSettings` are automatically updated in all other instance but are not applied to most of the UI.
Thus, the visibility of the `cboFindInCommitFilesGitGrep` can become out of sync with the checked state of `Show 'Find in commit files using git-grep'` - both in the git-grep form and in the context menu.

So, set the checked state of `Show 'Find in commit files using git-grep'` to the actual visibility of `cboFindInCommitFilesGitGrep` instead of `AppSettings.ShowFindInCommitFilesGitGrep`.

## Screenshots

### Before

![image](https://github.com/user-attachments/assets/dea975aa-e824-4846-bfc1-43288ee37e09)

### After

![image](https://github.com/user-attachments/assets/2969f859-f5de-4421-99a4-20b6a4501bb2)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-09-27T23:00:03Z,2024-09-28T20:22:46Z,2024-09-28T20:22:46Z,status: ready,master,fix/gitgrep_setting,3,12,2,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11948
11947,feat: Avoid coloring moved lines,"Fixes #11843
Depends on #11862 

## Proposed changes

* feat: Avoid coloring moved lines

Use heuristics to select which lines that are candidates to
mark inlines for, avoid lines that Git has detected
as moved lines.
(the change is not complete, a few parts required from the second commit, to be squashed befor merge)

* feat: Only parse diff files once

Only parse the document for added/removed lines once, by using
the DiffLineInfo info parsed for the linenumbering.
Previously, the document was parsed many times every time the
highlighting (including searching and marking) was changed.
This simplifies the code.

## Test methodology <!-- How did you ensure quality? -->

Some kind of tests will be added for the gap change, the other visible change has updated tests.

## Merge strategy

Rebase

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-27T22:58:23Z,2024-10-19T19:33:57Z,2024-10-19T19:33:57Z,,master,feature/difflineinfo-coloring,18,504,516,3,5,3,"mstv, RussKie, gerhardol, gerhardol, gerhardol, mstv, gerhardol, mstv, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, mstv, mstv, gerhardol, mstv, gerhardol, gerhardol, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11947
11946,fix: Align difftastic colors,"## Proposed changes

Align with updated GE colors in #11851 and use normal/dim instead of bold/normal.
GE uses dim-dim for unchanged, but the difftastic default normal is not exactly the same and need better visibility.

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/user-attachments/assets/cb17bfd6-b04c-4d1f-bb88-e869d7230ec4)
![image](https://github.com/user-attachments/assets/2bdd9317-257a-46aa-94b4-48cf890f499b)

![image](https://github.com/user-attachments/assets/dce8d59e-34f1-4725-a863-9623abded1ef)
the ""bleeding of green"" is due to incorrect vwesion used to take screenshot...
![image](https://github.com/user-attachments/assets/68f7248d-3dc2-42ea-83b4-d9f0aee3da0d)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-27T22:22:06Z,2024-09-28T20:59:16Z,2024-09-28T20:59:15Z,,master,feature/diftastic-colors,1,6,3,1,0,2,"mstv, RussKie","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11946
11937,"Use ""-D"" instead of ""-d"" when deleting unmerged branches","<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #3871

## Proposed changes

Use `git branch -D` instead of `git branch -d` when explicitly deleting unmerged branches.

## Screenshots <!-- Remove this section if PR does not change UI -->

## Test methodology <!-- How did you ensure quality? -->

- Manual test to check if deleting unmerged branches works instead of return an error message from git.

## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.46.0
- Windows 10 Enterprise 22H2

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-26T08:10:24Z,2024-09-27T14:23:42Z,2024-09-27T14:23:42Z,,master,master,2,3,2,1,1,0,"pmiossec, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11937
11930,fix!: View colors in git-blob diff files,"## Proposed changes

This PR is to simplify troubleshooting, not really something that normal users will have benefit from.

GE currently tries to apply coloring with the ""GE color engine""
for all files that ends with .diff or .patch.
This PR expands on this heuristics by trying to  present colors in
files where the Git color engine has stored the colors as ANSI
terminal sequence.

If a file to present seem to be a diff file get the file with escape
sequences and present with the ansi terminal colors if they exist.
For other diff files, use the GE color engine.

Include tests/app/UnitTests/GitUI.Tests/Editor/Diff/AnsiTerminalColors.diff
to view terminal colors.

Also include a file to present the presentation of ansi terminal
colors.

tests/app/UnitTests/GitUI.Tests/Editor/Diff/diff_added_moved.diff
tests/app/UnitTests/GitUI.Tests/Editor/Diff/diff_removed_moved.diff
will also be used in follow ups

Note that all sample diff files are not displayed as they would be if Git
displays them

 * tests/app/UnitTests/GitUI.Tests/Editor/Diff/SampleCombined.diff
 Not stored with colors
The output is not changed

* tests/app/UnitTests/GitUI.Tests/Editor/Diff/SampleCombined.diff
Not stored that this is a combined diff, so line numbers are not detected.

* tests/app/UnitTests/GitUI.Tests/Editor/Diff/SampleDifftastic.diff
Not stored that this is a difftastic file, so the GE adjustments are not done.
fix: presentation tweak of command cache commands
command 
Easier to copy the commands when viewing/debugging cache.

## Screenshots <!-- Remove this section if PR does not change UI -->

Syntax highlighting is deactivated to not distract
After includes #11851/#11862

![image](https://github.com/user-attachments/assets/34485826-1d13-4176-b4bf-ae1a4755def5) ![image](https://github.com/user-attachments/assets/6431aad1-9757-4b1f-80e7-3d6e6b7a256a)


![image](https://github.com/user-attachments/assets/9882b2aa-5929-4b8e-8850-0595d87f29d2) ![image](https://github.com/user-attachments/assets/1413c90a-8bd5-40ef-972b-3a5ec3f3f85b)


![image](https://github.com/user-attachments/assets/afd67545-0204-4ab4-8105-fbcd358d2b98) ![image](https://github.com/user-attachments/assets/936dedaa-782a-462c-9e4f-413affdd2cbc)


![image](https://github.com/user-attachments/assets/d8ef17dd-c6ec-4a8b-a132-f659a4d45bc1) ![image](https://github.com/user-attachments/assets/f130454c-893b-49a3-bc5c-cc2cd858649c)


![image](https://github.com/user-attachments/assets/5d13ee62-dc59-4e4e-93ee-0a9bacac6f32) ![image](https://github.com/user-attachments/assets/aef7600e-9268-4427-ad06-b7eba7841bc3)

## Test methodology <!-- How did you ensure quality? -->

Manual - for debugging

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).
(Could be rebase merged too, but the first commit is very minor.)

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-20T19:48:01Z,2024-09-25T20:06:52Z,2024-09-25T20:06:52Z,,master,feature/view-diff-blob,9,95,8,3,0,1,"mstv, gerhardol, mstv","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11930
11927,"Use ""real"" GitUICommands instance","Resolves #11906



## Test methodology <!-- How did you ensure quality? -->

- manually

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-18T11:56:10Z,2024-09-25T12:04:14Z,2024-09-25T12:04:14Z,,master,11906,2,6,6,1,1,2,"pmiossec, RussKie, mstv, RussKie","APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11927
11923,fix: Allow ^and .. in manual branch filters,"Fixes #](https://github.com/gitextensions/gitextensions/issues/3165#issuecomment-2352794359)

## Proposed changes

Allow ranges in Branches quick search
With this, it possible to search branches with ^ .. ... in the search box
Previously only arguments starting with -- was excluded from git-rev-parse checks if it was not a known branch/tag so the arguments were not allowed.
The check that there is a valid reference for ^branch is there, no such check for branch2..branch1 though.

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-16T22:11:36Z,2024-09-25T20:02:12Z,2024-09-25T20:02:12Z,,master,feature/i3361-branch-filters-cli,2,7,6,1,0,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11923
11922,fix: Always present git inserted as Header,"Part of #11831, that PR reports on the Git behavior to insert the information rather than the GE presentation.
I do not want to manipulate the git-diff output here, which is what is requested in #11831.

## Proposed changes

Git may insert ""\ No newline at end of file"" in the end lines of a diff, this was not presented as Header unless last line.
(This printout may appear before last line in addition to the last line.)
Incorrect line numbers and not extra gray background.
Note that all printouts with '\' as first chars could be handled this way, the first position is special (+/-/@ after the header).

## Screenshots <!-- Remove this section if PR does not change UI -->

See 1e1b946b65669c232db8eef55efb378d41a44b82

### Before

![image](https://github.com/user-attachments/assets/4861337f-6cff-4c04-a69f-affa2d20ace0)

### After

![image](https://github.com/user-attachments/assets/601b281b-2f58-4d95-b358-f6624fdd5a9a)

## Test methodology <!-- How did you ensure quality? -->

A test is added in an upcoming PR, some restructuring is done to tests and I prefer to wait on that. 
(PR awaits #11851 and #11862).

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-16T19:59:10Z,2024-09-17T19:07:32Z,2024-09-17T19:07:32Z,,master,feature/i11831-no-newline-header,1,3,1,1,2,0,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11922
11921,fix: Merge git-diff textmarkers separated by newlines,"Follow up to #11887 
Adds tests, refactor a little, slightly more performant and merges some more text markers.
This was discussed with #11843 but is not strictly needed (but simplifies that PR too).

## Proposed changes

Number of text markers affect performance, merge with previous text marker if the new is directly following or only separated by newline.

* do not color empty \r

git-diff tries to color \r also if diff.colorMovedWS=no This has no visible effect and is just polluting the markers.

## Screenshots <!-- Remove this section if PR does not change UI -->

No change, \r\n are never colored.

## Test methodology <!-- How did you ensure quality? -->

Tests are added.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-16T19:35:22Z,2024-09-18T19:12:12Z,2024-09-18T19:12:12Z,,master,feature/newline-textmarkers,2,133,32,2,0,0,"mstv, gerhardol, mstv, mstv, RussKie, gerhardol","COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11921
11917,FormCommit: Disable ResetSoft if command not applicable,"Fixes #11894

## Proposed changes

- FormCommit: Disable ResetSoft if the git command will not be applicable, i.e. if ""HEAD~1"" does not exist

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

exception (refer to issue)

### After

![image](https://github.com/user-attachments/assets/bb08bfda-f2da-460e-98d5-fee9ce1132ca)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-09-14T13:36:00Z,2024-09-15T08:54:02Z,2024-09-15T08:54:02Z,,master,fix/11894_disable_reset_soft,1,5,1,1,0,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11917
11916,FileStatusList: Reuse context menu separators,"Fixes #11909

## Proposed changes

1. There are used different ContextMenuStrips for files and for submodules.
The menu items are added on menu open - and automatically removed from the other menu.
When re-adding them, the separators must not be created anew (as it is done for `_openInVisualStudioSeparator`).

2. Set the visibility of `FormCommit.toolStripSeparatorScript` as in https://github.com/gitextensions/gitextensions/commit/844050a9fd4a5d3a93a4888a2f6e5d424d7e1ac0 (done for all usages of `AddUserScripts`).

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

see issue

### After

no multiple separators

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-09-13T21:21:20Z,2024-09-15T08:53:09Z,2024-09-15T08:53:09Z,,master,fix/files_context_menu,2,13,14,4,0,1,"gerhardol, RussKie, mstv, mstv, RussKie, mstv, drewnoakes","COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11916
11915,fix: support Git < 2.26 with bright colors,"https://github.com/gitextensions/gitextensions/pull/11847#issuecomment-2346101789

## Proposed changes

Git before 2.26 do not support the bright attribute for colors. As a workaround reverse bold is set, which has occasionally derived white foreground colors.
This doeos not change the appearance, except for the situations that #11847 addressed. The workaround for #11847 would have to be done for all Git users with < 2.26

Note: Adding the version to IGitVersion would require a change of all plugins to change this. Even if this is done for 5.0.1 I rather change this at this single usage.

An alternative is to raise LastVersionWithoutKnownLimitations from 2.15 to 2.26, which is a little steep.
I have whish to support 2.25 as that is the version in Ubuntu 20.04, not very important though.

## Test methodology <!-- How did you ensure quality? -->

Manual, faking version

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-13T21:01:57Z,2024-09-15T11:14:34Z,2024-09-15T11:14:34Z,,master,feature/p11847-git25-bright,1,15,4,1,2,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11915
11913,feat(settings): deeper checks for GitExtensions install directory,"* Check that the folder exists
* Check that it is set to the currently running instance GE install path

Make GE config more reliable. Related to https://github.com/gitextensions/gitextensions.vsix/issues/33#issuecomment-2348488930

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->
- Git Extensions 33.33.33
- Build 5ac26f6ed7cd0d8da2f8fe1f629f4de3b77948fb (Dirty)
- Git 2.45.0.windows.1 (recommended: 2.46.0 or later)
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.8
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.31 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.33 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.20 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.7 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.8 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-13T11:13:18Z,2024-09-17T07:42:16Z,2024-09-17T07:42:16Z,,master,reliability-installdir-registry-check,1,7,1,1,0,1,"RussKie, RussKie, gerhardol, RussKie, gerhardol, RussKie, pmiossec","APPROVED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11913
11912,chore: Update wix to v3.14.1 (security update),"No more need to ignore warning NU1903 raised by Wix package <= v3.14.0
(better fix for #11574 than ones done in #11575 and #11911 )

https://wixtoolset.org/news/2024/02/06/wix-v4.0.4-available/

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11574


## Test methodology <!-- How did you ensure quality? -->

- Build successful in AppVeyor

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-13T07:49:46Z,2024-09-17T07:42:44Z,2024-09-17T07:42:44Z,,master,update-wix,2,2,2,1,4,3,"mstv, gerhardol, RussKie","APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11912
11911,Move NoWarn=NU1903 to the Wix PackageReference,"
https://github.com/gitextensions/gitextensions/issues/11574 @RussKie 

## Proposed changes
- Instead of suppressing warning globally for the repo, suppress it on the single package reference where its needed.  This lets GitExtensions still see warnings for other vulnerable packages.

## Test methodology <!-- How did you ensure quality? -->

- Restore before change - works
- Remove NoWarn - fails with NU1903
- Add NoWarn to package reference - works again

## Test environment(s) <!-- Remove any that don't apply -->

Windows, dotnet 9.0 preview 7 SDK

## Merge strategy
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).

I agree that the maintainer squash merge this PR (if the commit message is clear).

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-12T22:56:33Z,2024-09-13T04:38:59Z,2024-09-13T04:38:59Z,,master,reduceNoWarnScopeNU1903,3,3,2,1,4,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11911
11900,Correctly escape paths,"Fixes #11896
Fixes #11897

![image](https://github.com/user-attachments/assets/4e241541-76b3-4c0d-b2f5-9970a04f3dee)


## Test methodology <!-- How did you ensure quality? -->

- manual
- unit tests

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-10T10:33:55Z,2024-09-11T21:45:00Z,2024-09-11T21:45:00Z,,master,11897,9,120,26,1,2,1,"mstv, RussKie, gerhardol, mstv","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11900
11893,Fix NRE in scripts if `arguments` unset,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11892

## Proposed changes

Handle unset script arguments which result in an NRE when a script is invoked (before the Settings dialog is opened - this sets all unset arguments to `""""`).

## Screenshots <!-- Remove this section if PR does not change UI -->

## Test methodology <!-- How did you ensure quality? -->

- manual
- unit tests

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-09T11:25:43Z,2024-09-09T21:03:35Z,2024-09-09T21:03:35Z,,master,11892,5,45,16,1,0,2,"mstv, gerhardol","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11893
11889,Update README.md to v5.0,,closed,2024-09-09T00:42:00Z,2024-09-09T12:06:52Z,2024-09-09T12:06:52Z,,master,readme,2,6,19,1,0,0,"mstv, RussKie","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11889
11888,fix: LineNumber presentation for Git word-diff,"
## Proposed changes

Tune the heuristics to get word-diff line numbers. If the diff only had added or removed chars, only added/removed line numbers were presented.

There are still many situations where the Git output is incomplete, the line numbers will be incorrect still.
Comments added to the code, trying to explain the issues.

## Screenshots <!-- Remove this section if PR does not change UI -->

File to compare is in a private branch, did not find a good example in recent commits

![image](https://github.com/user-attachments/assets/092fc7bc-8399-4cb7-b88d-3eb1a615eb58)

with #11868 

![image](https://github.com/user-attachments/assets/2a33873b-2990-45b3-801e-63799ac87e49)

### Before

see line 20

![image](https://github.com/user-attachments/assets/10fb12eb-091f-4f3e-b33d-dd3c3c905922)

### After

![image](https://github.com/user-attachments/assets/baaf9c5a-50c8-4ce0-9635-405b14d65d83)

## Test methodology <!-- How did you ensure quality? -->

tests updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-08T17:46:29Z,2024-09-09T21:07:29Z,2024-09-09T21:07:29Z,,master,feature/git-word-diff-lineno,3,129,67,2,1,1,"mstv, gerhardol, gerhardol, mstv, vbjay","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11888
11887,fix: merge adjacent textmarkers,"## Proposed changes

Git often emits a separate sequence for the first +/-, merge this with the reminder of the line.
This is a minor performance improvement (probably not possible to detect),
for big files number of textmarkers slow down.

Also set the terminal backcolor to SystemColors.Window if unset (instead of hardcoding to White).

## Test methodology <!-- How did you ensure quality? -->

Tests adjusted

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-08T17:27:00Z,2024-09-09T20:17:15Z,2024-09-09T20:17:15Z,,master,feature/merge-adjacent-textmarkers,2,21,17,1,0,2,"RussKie, mstv","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11887
11884,"Add navigation commands ""Go to first / last parent commit""","Fixes #11863

## Proposed changes

- Add navigation commands `GoToFirstParent` / `GoToLastParent` to the RevisionGridControl and to the FileStatusList of the RevisionGridControl
  (hotkeys `Ctrl+Left` / `Ctrl+Right` are free yet and can be assigned manually)
- Add icon to `GoToCommonAncestor`

I use this for following the main branch or for entering the feature branch, respectively.
Note: Left and right do not always match the graph - but strictly the merge direction.

`GoToFirstParent` is almost the same as `GoToParent`. But when moving down and up in branches, `GoToParent` chooses the parent commit from the navigation history.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![grafik](https://github.com/user-attachments/assets/fdaccd5f-a454-4cbe-8254-5845ca06a8a3)

![grafik](https://github.com/user-attachments/assets/94178417-bed8-4994-bdd7-69e956a5fbc2)

### After

![image](https://github.com/user-attachments/assets/8c71d4a2-aa17-4d48-9478-a48b250e9e1c)

![image](https://github.com/user-attachments/assets/16fc74c5-c724-4b21-ab9e-b5af3d9aa1b7)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-09-06T21:31:37Z,2024-09-11T22:57:38Z,2024-09-11T22:57:38Z,,master,feat/11863_gotolastparent,11,113,0,2,1,1,"gerhardol, gerhardol, mstv, RussKie","COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11884
11871,fix: RunCommand() should not throw when exit is checked,"Fixes #11869 

## Proposed changes

Some methods intend to check the Git output, but the command always throws at exit.
throwOnErrorExit need to be configurable for these methods.
Quotes were additionally quouted too (done in QuoteNE())

This occurs for instance when checking the characters in a branch name and staging files.
Note that the command still echoes the branchname to the console.

While Git allows quotes in branch names, Windows does not (this is a file) allow quotes in the name.

Note: There are a few calls of RunCommand() that could be supressed in addition to those thatactually check the output, but I left it at the checked calls.
This cannot be be too commonly occurring as the throwOnErrorExit checks were added in 4.1 or 4.0.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

NBug

### After

![image](https://github.com/user-attachments/assets/492dfadf-3214-4c7d-a275-7f00c9569902)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-02T20:45:40Z,2024-09-04T19:46:30Z,2024-09-04T19:46:30Z,,master,feature/i11869-create-branch,4,21,37,3,0,0,"RussKie, gerhardol, mstv, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11871
11868,Remove seconds from commit date display (#11812),"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11812

## Proposed changes
- It changed the commit date format in commit lists from `YYYY-MM-DD HH:MM:SS` to `YYYY-MM-DD HH:MM`.


## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![スクリーンショット 2024-09-01 202240](https://github.com/user-attachments/assets/dec54cf0-0ecd-42ee-b8bd-d686047abecb)



### After

![スクリーンショット 2024-09-01 203256](https://github.com/user-attachments/assets/abc3a890-39f8-45cd-99d5-bd740d082123)


## Test methodology <!-- How did you ensure quality? -->
- manual


## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-09-01T12:15:43Z,2024-09-08T23:31:33Z,,:scroll: status: needs cla,master,modify-gridview,1,1,1,1,11,1,mstv,COMMENTED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11868
11865,Adjust ToolStripComboBox size based on DPI scaling,"## Proposed changes

- It seems that `ToolStripComboBox` is immune to AutoScaling things.. thus it's necessary to perform the scaling manually
  - Manually scale all instances of `ToolStripComboBox`
- Fix gpg drop down width

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before / After

![image](https://github.com/user-attachments/assets/9e94cb78-872e-420f-a1eb-57d2155e4ed6)
![image](https://github.com/user-attachments/assets/f68b2bbe-d9cc-4740-9486-b41eea905e34)

---

![image](https://github.com/user-attachments/assets/b365f7e0-d677-424d-9585-4c8ef2f1d5a8)
![image](https://github.com/user-attachments/assets/1c91599c-4d19-484d-a107-1a31850e96a8)

---

![image](https://github.com/user-attachments/assets/9485eacb-723f-4a0b-952e-d63cf4b03819)
![image](https://github.com/user-attachments/assets/ef72c258-cd18-437d-8bd4-6106fa20aaee)



## Test methodology <!-- How did you ensure quality? -->

- Manually at 1x and 2x scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 4K 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-31T19:32:40Z,2024-09-16T04:36:47Z,2024-09-16T04:36:47Z,,master,toolstripcombobox-dpi-fixes,4,73,0,5,4,4,"mstv, RussKie, mdonatas, RussKie, RussKie, mstv, mdonatas, mdonatas, mdonatas, mstv, mdonatas, mstv, RussKie, mdonatas, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11865
11864,Make DropDownWidth calculation Dpi aware and account for vertical scrollbar,"## Proposed changes

- Take DPI into account when setting ComboBox width
- Take `DisplayMember` into account
- Take vertical scrollbar into account
- Allow for narrower drop downs

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Combo box is not adjusted for DPI
Max width at 1x scale is 600px, screenshot at 2x scaling

![image](https://github.com/user-attachments/assets/7bae7b27-1792-4e40-a09d-7d6efea2a35c)


### After

`Commit:` **Call ResizeDropDownWidth with Dpi adjusted values**

Weird; why is it so wide?..
![image](https://github.com/user-attachments/assets/f3ee4e6b-e3a0-4e45-aa90-67dd03b35192)

---

### DisplayMember

Turns out some combo boxes have their `DisplayMember` set to something other than a value of `.ToString()` and the width is measured based on a wrong value
`Branches.DisplayMember = nameof(IGitRef.LocalName);`

### After

`Commit:` **Measure combo box item's displayed value width**

![image](https://github.com/user-attachments/assets/c91f7f15-61e2-4975-a4b2-abdff6e21b0f)

---

### WS_VSCROLL

Turns out, when setting combo box drop-down width `comboBox.DropDownWidth = ...`, one needs to take vertical scrollbar's width into account

### After

`Commit:` **Take vertical scrollbar width into account when setting drop down width**

Nice :)
![image](https://github.com/user-attachments/assets/79917461-373d-42a2-b6fb-5581eb467327)

---

### High value of `AppSettings.BranchDropDownMinWidth = 300`

Maybe this value was picked by someone not running at 1x scaling? It seems too high.

![image](https://github.com/user-attachments/assets/72b5375d-abfb-4adb-afea-5285229d45ed)

### After

`Commit:` **Adjust AppSettings.BranchDropDownMinWidth**

![image](https://github.com/user-attachments/assets/4c45a453-2ab0-49f5-bad1-fcda6280c33a)


## Test methodology <!-- How did you ensure quality? -->

- Manually with 1x and 2x scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 4K 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-31T13:13:34Z,2024-09-16T04:34:26Z,2024-09-16T04:34:26Z,,master,combobox-dpi-fixes,21,315,37,22,5,2,"mstv, mdonatas, mstv, mdonatas, mstv, mdonatas, mstv, mdonatas, mdonatas, mstv, mdonatas, RussKie, RussKie, RussKie, mdonatas, mdonatas, mdonatas, mdonatas, mdonatas, mdonatas, mdonatas, mstv, mdonatas, mdonatas, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11864
11862,Improve in-line diff highlight and add anchor markers,"## Proposed changes

- Try to find multiple identical sections in removed/added line (instead of just at begin and end of line)
- Draw anchor markers in order to indicate where a pure addition / removal is located

## Screenshots <!-- Remove this section if PR does not change UI -->

of `ScriptOptionsProvider.cs` of 25d4c139682b874af21a3a4ad94dbad9806a7385

### Before

![image](https://github.com/user-attachments/assets/00962bac-9f46-41f0-91b5-c28a5e07fde1)

### After

![image](https://github.com/user-attachments/assets/988cb662-1854-43d7-9c2e-b9dd9982c854)

## Test methodology <!-- How did you ensure quality? -->

- adapted tests
- add tests
- manual

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-08-28T17:28:16Z,2024-10-14T19:06:23Z,2024-10-14T19:06:23Z,status: ready,master,feat/inline_diff,4,282,88,2,6,3,"gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, mstv, mstv","COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11862
11858,Expose git-grep in settings and context menu,"Addendum to #11350


## Proposed changes

- Expose ""git-grep"" search in Settings
- Expose ""git-grep"" search in the context menu

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/82a194d3-cad4-4045-bad6-aab61553b389)
![image](https://github.com/user-attachments/assets/0a5d63ee-cd4f-4d6d-8f77-7dafe4b449fb)

### After

![image](https://github.com/user-attachments/assets/473164f9-707d-4a8a-9c19-6645d691732b)
![image](https://github.com/user-attachments/assets/b933808d-f640-41be-ba61-2f27b8dc3077)
![image](https://github.com/user-attachments/assets/f90fdef4-5212-4142-bf30-3814361118bf)


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-27T09:52:22Z,2024-09-27T21:25:12Z,2024-09-27T21:25:12Z,,master,gitgrep,16,812,470,2,20,7,"gerhardol, gerhardol, RussKie, gerhardol, RussKie, mstv, gerhardol, RussKie, RussKie, gerhardol, mstv, gerhardol, mstv, RussKie, gerhardol, RussKie, mstv, RussKie, mstv, gerhardol, gerhardol, gerhardol, RussKie, RussKie, RussKie, RussKie, gerhardol, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11858
11855,fix: try-catch for FileSystemWatcher,"Fixes #11854

## Proposed changes

Add try-catch for FileSystemWatcher, as this can raise FileNotFoundException. This addresses exceptions with interactive rebase editor for the FileSettingsCache in WSL.

## Test methodology <!-- How did you ensure quality? -->

Manual use

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-25T19:18:44Z,2024-08-28T20:16:03Z,2024-08-28T20:16:03Z,,master,feature/i11854-fileditor-filewatcher,3,34,12,3,0,0,"mstv, gerhardol, gerhardol, mstv, gerhardol, mstv, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11855
11853,feat: Recommend Git 2.46.0,"
## Proposed changes

Recommend the latest release version

## Test methodology <!-- How did you ensure quality? -->

manual use

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-25T16:13:20Z,2024-08-26T07:26:07Z,2024-08-26T07:26:07Z,,master,feature/git-2.46,1,1,1,1,0,0,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11853
11851,Diff View: Match similar lines in changed blocks,"## Proposed changes

- Detect indented lines
- Then match by common words
- Reduce the highlight (from git) for identical parts of the line - instead of marking the different part
- Remove highlighting of filenames in the diff header because their background highlighting was removed in f201220e8b77f5ab218277f60fd3e008c1ee5041
- Some refactoring into functions

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

`FormRevertCommit.cs` in 6a9f3c01b1c988d5a01369a5f54020115022a5cf

![image](https://github.com/user-attachments/assets/d0ff86e4-ffce-41f8-ad03-10c954e7215d)

### After (final variant)

![grafik](https://github.com/user-attachments/assets/2e096864-b8cd-4657-81a0-f67319471e89)

### After (intermediate variant with bold highlight)

![image](https://github.com/user-attachments/assets/678630e4-6053-4040-b4db-296ab8dc1946)

## Test methodology <!-- How did you ensure quality? -->

- some additional tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-08-24T21:00:10Z,2024-09-27T20:54:03Z,2024-09-27T20:54:03Z,":eyeglasses: status: needs review, status: ready",master,feat/multiline_diff,7,519,70,7,20,5,"gerhardol, mstv, mstv, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, mstv, gerhardol, RussKie, gerhardol, mstv, pmiossec, gerhardol, mstv, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11851
11850,feat: GitCache: Add current directory to key,"Depends on #11848 

## Proposed changes

Git cache uses the command as the cache key. However a sha could
theoretically be duplicated in repos, so the path is added.
(This means that multiple clones (like worktrees) are no longer cached.)

Clean escape sequences before storing in the cache to speed up
fetching information from the cache.
Clean escape is also added to the cache key.

Cache DiffTastic commands, add environment variables as cache keys.

--

There is no strong requirement to include this PR in 5.0, but it improves DiffTastic usage in reviews. I switch the different mode several times per file and the delay to open difftastic is annoying.

## Test methodology <!-- How did you ensure quality? -->

The cache tests are updated - only the format of what is changed that is changed.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-23T20:50:02Z,2024-08-28T20:15:18Z,2024-08-28T20:15:17Z,,master,feature/cache-dir-key,14,108,66,6,2,0,"RussKie, mstv, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, RussKie, mstv, gerhardol, mstv, gerhardol, mstv, gerhardol, mstv, RussKie, RussKie, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11850
11849,fix: bold attributes applies to both fore/back,"
## Proposed changes

Related to #11847 

The handling of ANSI escape sequences was probably not completely correct (there is no clear spec...).
All direct attributes applies to all colors specified.

So git colors ""black bold red"" and ""black bold red"" are translated to the sequence ""1, 30, 41"" which will render the same as  ""brightblack brightred"" (""90, 101""), but ""black brightred"" (""30, 101"") is different.
Attributes should not be ""persistent"" if a ""bright"" color is set explicitly.

The implementation is slightly simplified too.

In reality, the implementation would not be a major issue as attributes are not often used in combination like this.

## Test methodology <!-- How did you ensure quality? -->

Tests are mostly unchanged.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-23T19:34:03Z,2024-08-25T18:32:08Z,2024-08-25T18:32:08Z,,master,feature/ansi-bold-attribute,2,105,141,3,1,1,"RussKie, gerhardol, RussKie, mstv","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11849
11848,feat: Unprintable chars in cache viewer,"
## Proposed changes

To simplify debugging of parsing of GE processing
of Git output.

Related to discussions in #11843, #11831

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/5cd26399-144d-4b24-aff0-b32db95cfe54)

### After

![image](https://github.com/user-attachments/assets/f9b7e4a3-747c-4bf2-9c76-12dc75aca40a)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-23T18:59:40Z,2024-08-25T03:30:12Z,2024-08-25T03:30:12Z,,master,feature/cache-viewer-nonprintable,1,15,1,2,0,1,"RussKie, mstv, gerhardol, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11848
11847,fix: Force black foreground colors for bold in moved diff,"
## Proposed changes

Always use black as foreground colors for moved lines. GE may calculate the color to be white, this is a an override to avoid the low contrast without risking breaking other scenarios.

This can be seen in https://github.com/gitextensions/gitextensions/issues/11843#issue-2473084897
even if that issue is about something related.
I cannot reproduce, this is a good enough default configuration as theming is limited anyway.
(and colors can be overridden with git-config)

Note that colors set as ""black brightyellow"" instead of ""black yellow bold"" as that has a separate meaning - a separate PR will clarify.

## Screenshots <!-- Remove this section if PR does not change UI -->
white foreground is configured in debugger, cannot reproduce.

![image](https://github.com/user-attachments/assets/4f137997-fb5d-4b52-b925-832c1df12aa0)
![image](https://github.com/user-attachments/assets/c7303c7a-8b34-4cdb-af32-e349d0afd3ed)

![image](https://github.com/user-attachments/assets/dd004c3e-6f4f-4f7e-a49e-7749801c8370)
![image](https://github.com/user-attachments/assets/4c44acb6-eba6-4835-a338-9ec1bfa87255)

![image](https://github.com/user-attachments/assets/31223b74-4458-4bcd-b11a-5b6c0c88a92e)
![image](https://github.com/user-attachments/assets/1301d5c6-b7f6-4b94-9a10-e64fd74ef3a9)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-22T21:03:12Z,2024-08-25T03:30:51Z,2024-08-25T03:30:51Z,,master,feature/ansi-black-foreground,1,10,6,1,3,1,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11847
11846,fix(DiffHighlightService): Skip unchanged char after pure addition/removal,"## Proposed changes

`DiffHighlightService.MarkDifference`:
- search the end of the diff back to `beginOffset` including
- avoid accessing characters out of range, i.e. before `beginOffset`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/69c8c294-67d9-42a5-aafa-9d83b8803b45)

### After

![image](https://github.com/user-attachments/assets/dc1f9800-9193-4dce-8128-56033f72113c)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-08-21T18:18:22Z,2024-08-24T14:43:46Z,2024-08-24T14:43:46Z,,master,fix/inline_diff,1,11,3,1,7,1,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11846
11842,fix: WslGitPath in FormProcess,"Fixes #11839

## Proposed changes

Use the hidden read-only setting WslGitPath also in FormPath (""popup"" commands like push and fetch) as all other Git commands executed in WSL (a few commands in WSL uses Windows Git).

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-17T17:52:50Z,2024-08-17T18:42:47Z,2024-08-17T18:42:47Z,,master,feature/i11839-wslgit,1,1,1,1,0,0,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11842
11841,fix: Allow user to override git-grep color,"## Proposed changes

The intention was to allow the user to override the git-grep color, this was not implemented.
Also allows for removal of a routine.

Note: SetIfUnsetInGit() is used in DiffHighlightService too, but it is not worth it to share the method.

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-16T20:30:16Z,2024-08-17T18:05:39Z,2024-08-17T18:05:39Z,,master,feature/user-override-grep-color,3,12,27,2,0,1,"mstv, gerhardol","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11841
11838,fix: Tweak difftastic colors,"## Proposed changes

Use reverse colors also for difftastic bold colors, to improve visibility
By default difftastic use normal colors, just like diff.
This was modified to use reverse color for normal red/green, but difftastic uses bold for changed words.
https://github.com/Wilfred/difftastic/blob/master/src/display/style.rs#L313
https://github.com/Wilfred/difftastic/blob/master/src/display/style.rs#L368
https://github.com/Wilfred/difftastic/blob/master/src/display/style.rs#L384

Note that difftastic uses dim colors for ""unchanged blocks"" like when there are only whitespace changes.
This PR does not change that, see an example below of how that would look.
https://github.com/Wilfred/difftastic/blob/master/src/display/style.rs#L396

Darken some foreground colors to improve visibility, even if the difference between normal and bold is smaller.
Even if the colors are not directly used in difftastic or other diffs, they could by configured to used by users.
Also, the dimmed colors are partly used by difftastic for ""non interesting"", example below is changed just for whitespace.

## Screenshots <!-- Remove this section if PR does not change UI -->

![difftastic1](https://github.com/user-attachments/assets/651fb301-4166-4102-8547-cd6fb878b3e2) ![difftastic2](https://github.com/user-attachments/assets/a6195cab-5d9b-4af3-8fa1-17604384cb1c)


Normal diff and difftastic default
![difftastic3](https://github.com/user-attachments/assets/be730d9e-2fab-40dc-80ec-7df68246e21b)
![difftastic0](https://github.com/user-attachments/assets/27fba9da-a8eb-4cef-9982-5fbf5ce4cec8)

![resx1](https://github.com/user-attachments/assets/66b4bcc9-5874-4316-8fa9-94aac7b99ca6) ![resx2](https://github.com/user-attachments/assets/d5add29c-1bb9-419d-a7e1-18b9103f85ca)

The above diff with normal, then with dim background (not used)
![resx3](https://github.com/user-attachments/assets/6fcab207-94b7-42cf-9227-055ea377f482) ![resx4](https://github.com/user-attachments/assets/2d92eb2f-be5f-42e8-864e-f5a6774ca8ae)


![color1](https://github.com/user-attachments/assets/5d4dc8ce-1a41-4e7b-b59d-11e515ab5f6f) ![color2](https://github.com/user-attachments/assets/a25d6d40-5a83-4a67-8ebe-db5ee90c87a9)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-14T20:37:46Z,2024-08-17T18:41:33Z,2024-08-17T18:41:33Z,,master,feature/difftastic-reverse-bold,3,7,7,2,1,1,"mstv, gerhardol, mstv","COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11838
11837,Fix Revision Links settings page DPI,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Fix DPI
- Align `Links` label to the `left`

This ""bug"" has made me both sad and angry.. look at the _200% before_ screenshot.. ""drowners-donut"" icon is not clickable. In order to get the link, I had to make a screenshot and use OneNote's OCR to copy the text! I honestly thought this was an incarnation of the most evil UX I've ever encountered....... turns out it's a DPI issue 😡

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

100%
![revisionlinks_old_100](https://github.com/user-attachments/assets/94de82ab-062c-461b-8dd8-9883f3570e1c)

200%
![revisionlinks_old_200](https://github.com/user-attachments/assets/b2d5a0c5-1845-42be-9b0e-776b2b2f60e6)


### After

100%
![revisionlinks_new_100](https://github.com/user-attachments/assets/a93cc5d6-2b30-43e0-8dd5-8c86fd96b5df)

200%
![revisionlinks_new_200](https://github.com/user-attachments/assets/ee5ccc0b-18c7-4a16-9807-1a0fdbe0b390)


## Test methodology <!-- How did you ensure quality? -->

- Manually with 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 4K 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-12T19:40:15Z,2024-08-18T19:31:59Z,2024-08-18T19:31:59Z,,master,fix-revision-links-dpi,2,108,109,2,2,2,"mstv, gerhardol, mdonatas, RussKie, RussKie, gerhardol","APPROVED, COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11837
11836,Fix FormRevertCommit dpi,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Convert `FormRevertCommit` to `GitExtensionsDialog`
  - Fix its DPI in a process
  - Add Abort button
  - Align designer/form-sizing code with `FormCherryPick`
- Align forms `FormCherryPick` code with `FormRevertCommit`, they are very similar
  - Designer file mainly had controls moved around
    - `label2` got a proper field and got renamed to `lblAnotherRev`
  - Code file had an improvement for how to calculate controls size (mainly because previous approach for some reason didn't work with `FormRevertCommit`)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

`FormRevertCommit` 100% 1 parent
![revert_old_100_1parent](https://github.com/user-attachments/assets/e46d6b4b-bc27-4ef7-aee1-35d4dee9229b)

`FormRevertCommit` 200% 3 parents (notice column width and button size)
![revert_old_200_3parents](https://github.com/user-attachments/assets/7b48f901-b26c-4a63-bfb9-4340318e3dff)


### After

`FormRevertCommit` 100% 1 parent
![revert_new_100_1parent](https://github.com/user-attachments/assets/c737d703-71b2-4ac5-9b41-ce0028734e6d)

`FormRevertCommit` 100% 2 parents
![revert_new_100_2parents](https://github.com/user-attachments/assets/796422b9-f7b4-4086-9b01-c5e596a6d49c)

`FormRevertCommit` 100% 3 parents
![revert_new_100_3parents](https://github.com/user-attachments/assets/cfce8399-2abd-44d9-a36b-00f67c87b68d)

`FormRevertCommit` 200% 1 parent
![revert_new_200_1parent](https://github.com/user-attachments/assets/9e1b2d28-9b87-4024-870f-019198f2d7f8)

`FormRevertCommit` 200% 2 parents
![revert_new_200_2parents](https://github.com/user-attachments/assets/da1be9fd-8a99-451d-a106-956f23d82457)

`FormRevertCommit` 200% 3 parents
![revert_new_200_3parents](https://github.com/user-attachments/assets/4fac09ca-ae2b-48ac-82c7-2da1e04382ec)

---

The only difference is that parents list view has some extra white-space at the bottom to make it evident that there are no more items

`FormCherryPick` 200% 1 parent
![cherrypick_new_200_1parent](https://github.com/user-attachments/assets/335c8e62-929c-4abf-8131-4adc28c9a16d)

`FormCherryPick` 200% 2 parents
![cherrypick_new_200_2parents](https://github.com/user-attachments/assets/0eaef934-fa54-4a9d-8846-1a036dd6e6d0)

<!-- TODO -->

## Test methodology <!-- How did you ensure quality? -->

- Manually at 100% 175% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 4K 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-12T19:02:32Z,2024-08-18T19:32:48Z,2024-08-18T19:32:48Z,,master,fix-form-revert-dpi,7,366,294,3,6,3,"gerhardol, mstv, RussKie, mstv","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11836
11833,fix: Keep linenumber when switching viewer,"Related to https://github.com/gitextensions/gitextensions/pull/11832#issuecomment-2278328551

## Proposed changes

Try to keep the linenumber in the fileviewer if the identification for the contents is the same (using the filename as identification).

Previously the line was restored if the number of lines were the same or if it was a diff and the first line matched.
Some situations where this did not work:
* Switch diffviewer to/from difftastic (as header differs)
* Select a new commit for a file in the file tree, where the number of lines differed in the other commit.

## Screenshots <!-- Remove this section if PR does not change UI -->

![filetree-nostore-changed-file](https://github.com/user-attachments/assets/5ae62857-ac77-42c0-a571-bcdf03135f99) ![filetree-restore-changed-file](https://github.com/user-attachments/assets/4f7273bc-0a4b-428d-80d2-8336b4b96926)

![difftastic-norestore](https://github.com/user-attachments/assets/3ad98474-d63c-4536-ae07-9ef2c939e09f) ![difftastic-restore](https://github.com/user-attachments/assets/94cb92a4-85a5-4cd9-a90b-eeb2e4959f3e)

## Test methodology <!-- How did you ensure quality? -->

Tests updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-09T21:55:01Z,2024-08-17T18:03:54Z,2024-08-17T18:03:54Z,,master,feature/fileviewer-restore-line,5,135,29,3,1,1,"mstv, gerhardol, mstv, gerhardol","APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11833
11832,fix(file tree): Do not force line first line when changing commit,"## Proposed changes

Keep the current linenumber when switching to a new commit in file tree, instead of always resetting to first line.

This is a regression from 9bbd08ff2985e46df1a30edc94f1dddb3ba9d247 in 4.2
(The change in that commit is otherwise OK. cc @pmiossec)

This is useful when viewing a file in the file tree (possibly filtered the revision grid), then selecting various commits.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![filetree-reset-lineno](https://github.com/user-attachments/assets/7ddc39c9-8c5b-410f-8f77-b0f41844b965)

### After

![filetree-keep-lineno](https://github.com/user-attachments/assets/6611d26c-1215-4bd1-a5d9-e774f0875528)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-08T21:42:24Z,2024-08-09T21:30:01Z,2024-08-09T21:30:01Z,,master,feature/restore-lineno-file-history,1,1,1,1,3,1,"RussKie, mstv, mstv","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11832
11830,feat: Configure ANSI background colors separately,"Supersedes #11824 
Fixes #11821

## Proposed changes

This PR has four serial parts, the last commit could be dropped.

- feat: ANSI PrintColors also in Release builds

Enable the routine to print the ANSI terminal colors also in release builds.
The colors are used to display e.g. git-diff.

- feat: Configure ANSI background colors separately

Specify foreground/background colors for the terminal separately,
to enable themes that work better with GE colors.

Apply theme colors for difftastic: Do not change background
for bold text, to improve readability.
Only reverse video for normal red/green.

- feat: GE theme ANSI terminal colors

Adjust the ANSI terminal colors to align with the GE theme.
The background/foreground colors are separate to improve the
display for the extremely bright GE colors.

The theme is somehow based on mintty Helmhotz, but heavily modified
especially for background (reverse video) to align with the
existing GE theme colors.

- feat: moved lines in diff as reverse

If GE theme colors are applied, set moved lines as
reverse video (colored background) to match the appearances

## Screenshots <!-- Remove this section if PR does not change UI -->

Yellow foreground is still not great, but not much used by git-diff
The background (reverse) are to most used with the last commit
![image](https://github.com/user-attachments/assets/6a602482-0f7f-4df1-89b1-b79869cb1b66)  ![image](https://github.com/user-attachments/assets/5ab55f12-bfe9-4b58-ac18-786865357c19)


#### Before

![image](https://github.com/user-attachments/assets/1b93e0e8-d386-4b7e-a0d7-00cbd4ad1c8d)

![image](https://github.com/user-attachments/assets/69533ca7-c6c9-40e2-9cd8-efa92ef753e1)

![image](https://github.com/user-attachments/assets/b3e2c1b3-d324-4da7-858a-0784f116cd2e)

#### no reverse video

![image](https://github.com/user-attachments/assets/068b049b-851b-4dd9-a9d2-8bd2030b9bc7)

![image](https://github.com/user-attachments/assets/037a18eb-6203-4dff-b103-1bd54bb1e922)

![image](https://github.com/user-attachments/assets/954bd06f-9379-448d-94dc-7a01252ae92d)

#### reverse video

Not convinced that this is better, but maybe more predictable

![image](https://github.com/user-attachments/assets/7ea364bf-3600-4762-8b83-3ca98f8fe33e)

![image](https://github.com/user-attachments/assets/353b45a0-d4cb-4367-95d3-eb3988dd823e)

![image](https://github.com/user-attachments/assets/10cad2df-1961-43f0-9e84-1cc2c102aa15)

### Difftastic

Visibility is still not great, that need to be handled in difftastic itself

![image](https://github.com/user-attachments/assets/bfc79d59-bf6b-4a05-9b8d-02e9bd40a39f)

![image](https://github.com/user-attachments/assets/c7a31b4e-86ac-4a81-9549-76a692845bc3)

## Test methodology <!-- How did you ensure quality? -->

Tests are updated

## Merge strategy

- Rebase merge (PR submitter must change the commit message for the last commit).
I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-07T11:33:03Z,2024-08-09T21:08:11Z,2024-08-09T21:08:11Z,,master,feature/i11821-ansi-background-theme-colors,25,428,301,5,3,2,"RussKie, mstv","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11830
11827,feat: Dynamically calculate dim colors,"Follow up to #11823 
To be followed by a tweak of colors for #11821 

## Proposed changes

Dim(faint) colors was previously hardcoded, only related to the normal colors.
This is the normal use, bold and dim s not often used.
However, with this change the dim colors do not need explicit configuration, which simplifies #11823 (this could be merged first if required, but I prefer this way as it was implemented after).
Further color tweaks are simpler.

The method to dim is the same as in mintty.

Note: Another feature from mintty could be to separate foreground/background configuration. It does not work so well with the GE default handling (as the alternative should use the theme configuration before the GE configuration).

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/30d5e610-3dd7-468c-a2ef-75ad49383159)

Example where the moved code with alternative colors at a block change is seen.
The lines that are at the border are normal (GE tweak, is bold by default), the other lines are dimmed.
The second diff is just a reverse diff in this case.

![image](https://github.com/user-attachments/assets/119fc7da-41f3-4ef4-9810-20039c0da187)

![image](https://github.com/user-attachments/assets/53834d8e-ec5a-430c-855d-8103de26360f)

### After

The second line for fore/back is dimmed and corresponds to the third 65536 line for previous. These colors have minor changes to before.
The second dimmed line is new, not expected to be used.

![image](https://github.com/user-attachments/assets/e577c832-7099-4aca-836c-f763adb491bc)

![image](https://github.com/user-attachments/assets/2c84eb16-b039-4ee6-884e-44d5fc574fa8)

![image](https://github.com/user-attachments/assets/67e7234c-b591-42ac-9f9a-692728cd3679)

## Test methodology <!-- How did you ensure quality? -->

Tests updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-05T22:10:36Z,2024-08-07T10:50:55Z,2024-08-07T10:50:55Z,,master,feature/i11821-ansi-dim-colors,6,101,107,2,0,1,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11827
11826,fix: Migrate core.editor settings from GE x86 path,"Fixes #11819

## Proposed changes

Migrate editor settings if GE was installed in 'Program Files (x86)' before 4.3.
Only check and update global Git settings in Windows, the only set by GE.
Guess previous, migrate to current path (i.e. the first usage).

When running in debug, migration is not automatic as the debug path is probably not what should be used.

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-05T12:06:57Z,2024-08-07T10:49:17Z,2024-08-07T10:49:17Z,,master,feature/i11819-core-editor-x86-path,2,43,0,3,0,1,"RussKie, RussKie, gerhardol, mstv, gerhardol, gerhardol, mstv, mstv, gerhardol","COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11826
11824,feat: moved lines in diff as reverse,"https://github.com/gitextensions/gitextensions/issues/11821#issuecomment-2266663665

Fixes #11821

## Proposed changes

If GE theme colors are applied, also set moved lines as reverse video (colored background) to match the appearances

Not sure if I want this, the moved lines are less important.
(The default colors are slightly to bold though, also as reverse)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/cd8fb2a5-b2f2-418e-afd8-558cabe6b573)

### After

![image](https://github.com/user-attachments/assets/d4eef542-8edd-4073-abb9-ea1aef11fa3a)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-03T17:15:19Z,2024-08-07T11:37:44Z,,,master,feature/i11821-reverse-moved-lines,1,15,12,1,2,0,,,True,https://api.github.com/repos/gitextensions/gitextensions/issues/11824
11823,feat: Themeable ANSI colors,"After discussions in #11821

## Proposed changes

Add the terminal (cli) ansi color output sequences to the default theme.
This controls how e.g. ""blue"" text are presented for applicable commands, primarily the Git diff viewer.

The GE overrides like added/removed is themeable as before (overriding the Git colors).

This makes it simpler to experiment with terminal color translations, change of source is not required.

## Test methodology <!-- How did you ensure quality? -->

Manual, output of colors in debug mode

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-03T16:36:34Z,2024-08-06T09:26:20Z,2024-08-06T09:26:20Z,,master,feature/i11821-ansi-theme-colors,4,106,29,4,0,1,"mstv, gerhardol, gerhardol, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11823
11822,Change diff.wordRegex to match words,"(https://github.com/gitextensions/gitextensions/issues/11634#issuecomment-1995477095)

## Proposed changes

This affects git-word-diff output. (Ctrl-D in diffviewer) 
Suggested by @mstv , I had been testing this some time too. Not convinced it is better but maybe easier to understand

As it is now, as much as possible commonalities are chown, so changed suffixes are listed.
However, the current could also show slightly chopped up if some chars matched.

## Screenshots <!-- Remove this section if PR does not change UI -->

The first diff is better after this change, I prefer the second occurrence

### Before

![image](https://github.com/user-attachments/assets/2abb1466-fb5a-4688-ac31-4a4df5dd1242)

### After

![image](https://github.com/user-attachments/assets/fd68f544-cf86-43ed-bd21-903e72423533)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-08-03T12:39:48Z,2024-08-06T09:02:45Z,2024-08-06T09:02:45Z,,master,feature/i11634-diff-wordregex-tweak,1,1,1,1,0,1,"mstv, RussKie","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11822
11818,fix(avatars/initials): fix a special case causing an exception,"when generating the initials
where none of the email and name starts by a letter

and add better fallback to always return a not empty string

## Test methodology <!-- How did you ensure quality? -->

- unit tests (I don't remember the repository where I encounter this case to manual test the case)

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-07-31T09:24:51Z,2024-08-01T13:47:47Z,2024-08-01T13:47:47Z,,master,fix_avatar_initial_exception,2,20,5,1,0,1,"mstv, mstv, gerhardol, RussKie","COMMENTED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11818
11817,Update dashboard logo,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Resolves #11810

## Proposed changes

The current logo was a failed attempt at rebranding and it's been bothering me since the inception. Also I'd like to bring consistency back. 

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/user-attachments/assets/85fbc315-0ee3-419a-a355-dd003a230345)

### After

![image](https://github.com/user-attachments/assets/c6a3c580-8c16-4f43-83c2-0292d82ffd10)



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-07-30T04:35:30Z,2024-08-02T00:26:09Z,2024-08-02T00:26:09Z,,master,icons,1,0,0,1,1,1,"pmiossec, mstv, gerhardol, mstv","APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11817
11811,fix: Clarify prune is for branches,"Follow up to #11571 

## Proposed changes

Just a tooltip clarification

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-07-15T20:27:43Z,2024-07-17T00:45:32Z,2024-07-17T00:45:32Z,,master,feature/i11571-fetch-prune,2,2,2,1,0,0,"pmiossec, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11811
11802,Improve Quick Search keyboard interaction,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Enable cancelling of Quick Search via `Esc` key
- Allow pasting text as Quick Search value
- ~~While Quick Search is active, enable moving through the results using `up` / `down` arrow keys~~

I've personally found that these changes have greatly improved Quick Search usability.

## Screenshots <!-- Remove this section if PR does not change UI -->

### After

In here I show how pasting could be useful (works great with pasting `sha` too); how `Esc` terminates quick search and how movement through results via `up` / `down` works

https://github.com/gitextensions/gitextensions/assets/483659/2924d532-9eb8-4dab-8f36-686b69e0494c

## Test methodology <!-- How did you ensure quality? -->

- Manually

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-07-07T14:17:13Z,2024-07-09T21:20:10Z,2024-07-09T21:20:10Z,,master,improve-quick-search,2,32,16,8,1,2,"mstv, mdonatas, mstv, mdonatas, mstv, mdonatas, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11802
11799,Improve sorting in quick git ref selector dialog,"


## Proposed changes

- Sort refs in the following order: local/remote/tags. Then sort by local ref name within each group.
- Add group separators for ease management.


## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/4403806/e436a2b3-f2d8-423e-a727-6d9d9715c4dc)
![image](https://github.com/gitextensions/gitextensions/assets/4403806/2516d960-8745-4c71-969d-9fb99e3a9250)

### After

![image](https://github.com/gitextensions/gitextensions/assets/4403806/ec1e94c4-7321-46d4-a008-4318846aeeae)
![image](https://github.com/gitextensions/gitextensions/assets/4403806/448cb92b-0c1d-42ec-bc7c-58e990b072ec)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-07-03T11:03:41Z,2024-07-13T06:02:30Z,2024-07-13T06:02:30Z,,master,sort_delete_refs,7,99,33,1,5,1,"mstv, RussKie, mstv","COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11799
11797,fix(sidepanel): Await reload before updating visibility,"Fixes #11796 

## Proposed changes

UpdateVisibility() (started when the grid is loaded) must run after all objects in the sidepanel is loaded.
Previously there could be a race condition, especially when reloading with ""current branch only"" filter.

An alternative could be to use SlimSemaphore.

Did a quick check for similar uses as in RevisionGrid, TaskCompletionSource is used in Executable.

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-06-28T22:37:50Z,2024-07-07T21:09:00Z,2024-07-07T21:09:00Z,,master,feature/i11796-rot-await-load,2,10,4,1,0,1,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11797
11795,fix(scripts): Do not quote {SelectedRelativePaths},"Fixes #11794

## Proposed changes

- fix(scripts): Do not quote `{SelectedRelativePaths}`
- fix(scripts): Support multiple values in `IScriptOptionsProvider`
  each value quoted for `{{SelectedRelativePaths}}`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- extended test

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-27T21:37:13Z,2024-08-14T18:06:06Z,2024-08-14T18:06:06Z,,master,fix/11794_script_option_provider,7,52,41,4,8,2,"gerhardol, mdonatas-trafi, mstv, RussKie, gerhardol, RussKie, mstv, RussKie, mstv, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11795
11793,Update privacy policy reference,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #

## Proposed changes

PR #11744 moved the location of the `PrivacyPolicy.md` file. This PR adjusts sources to changes.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

<!-- TODO -->

## Test methodology <!-- How did you ensure quality? -->

- 
- 
- 

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-06-24T11:49:29Z,2024-06-26T06:31:05Z,2024-06-26T06:31:05Z,,master,wip,1,1,1,1,1,1,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11793
11791,fix(DiffMergeTools): path for diff/merge command,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11741

## Proposed changes

- treat `difftool.<tool>.path` as (absolute) executable path (see [difftool doc](https://git-scm.com/docs/git-difftool#Documentation/git-difftool.txt---toollttoolgt))
- add last resort fallback to avoid empty string as command path

## Test methodology <!-- How did you ensure quality? -->

- Verify the _empty path_ mentioned in #11741 is now set correctly

## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.45.2.windows.1
- Windows 10.0.19045.4529

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](/gitextensions/gitextensions/blob/master/contributors.txt).
",closed,2024-06-17T11:58:17Z,2024-06-20T17:26:45Z,2024-06-20T17:26:45Z,:pen: status: cla signed,master,fix/difftool-path,2,18,2,1,0,2,"mstv, mstv, gerhardol","COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11791
11790,RecentReposSettings: Streamline naming,"between ""Top"", ""Recent"" and ""Anchored"" repositories

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Also:
* inverted the 2 top settings to be in the same order than list it is referring to.
* used similar label as 2 settings are referring the the same behavior for top and recent lists..

Discussed [here](https://github.com/gitextensions/gitextensions/pull/11779#issuecomment-2164942593)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/23f8e588-c563-4d23-bc42-b7e1f00f1592)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/a1a640b5-c36d-4c9b-a961-81e1e5d44b14)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-06-17T10:16:02Z,2024-06-22T20:16:36Z,2024-06-22T20:16:36Z,,master,recent_repos_settings_adjust_naming,12,296,291,2,0,1,"mstv, gerhardol, RussKie, pmiossec, gerhardol","APPROVED, APPROVED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11790
11785,FormCommit: Fixup cursor movement in message editor,"Fixes #11784
and further regression from #10730

## Proposed changes

- `EditNetSpell`:
  - disable `RichTextBox.WordWrap` in order to avoid issues with cursor position calculation (not made public by `RichTextBox`)
- `TextBoxSilencer`:
  - do not suppress keypress if there is a selection
  - evaluate position on `KeyDown` not on `SelectionChanged`
    because `RichTextBox.Text` can be empty yet on `SelectionChanged` and the selection does not change on setting `Text`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-10T19:55:08Z,2024-06-12T16:15:52Z,2024-06-12T16:15:52Z,,master,fix/11784_commit_msg,2,16,24,1,0,1,"gerhardol, RussKie","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11785
11781,fix(FileSettingsCache): Always watch repo-local settings,"Fixes #11720

## Proposed changes

Cleanup `FileSettingsCache`:
- Always watch the settings file also if the checkout does not contain that file on startup (repo open) 
- Hence remove `_canEnableFileWatcher`
- React on deletion, too
- There is no need to distinguish the kind of file change because we just need to know whether to refresh the settings or not
- Use `FileChanged` instead of assigning `_lastFileModificationDate`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual
- Remove obsolete testcase `ctor_CanEnableFileWatcher_should_be_false_if_invalid_dir` which is redundant with the existing
  `ctor_FileWatcher_EnableRaisingEvents_should_be_false_if_invalid_dir`

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-04T21:47:59Z,2024-06-11T18:44:58Z,2024-06-11T18:44:58Z,,master,fix/11720_distributed_settings,2,14,41,1,2,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11781
11780,Make graph settings non-experimental,"## Proposed changes

in preparation of upcoming release:
- Move `RenderGraphWithDiagonals` and `StraightenGraphDiagonals` to non-experimental settings

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-04T20:30:26Z,2024-06-11T22:27:27Z,2024-06-11T22:27:27Z,,master,fix/graph_diagonals,1,2,2,1,0,0,"mstv, gerhardol, gerhardol, RussKie, mstv, RussKie, RussKie","COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11780
11779,Improve pinned repos handling,"Based on PR #11790 that should be merged first.

- Add a icon to clearly see anchored repositories
- Add an option to remove pinned repositories from recent repositories (to not have duplicate repositories and save space --and user brain CPU cycles--)
- ~~Remove ""Maximum number of pinned recent repositories"" because if user add a repository to the pinned list, it's to see it (otherwise he will remove it from the list)~~

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

no ""pinned"" icons & repos duplicated

![image](https://github.com/gitextensions/gitextensions/assets/460196/107c836e-aca6-4281-b3b6-29299fc385ac)


### After

Settings:

![image](https://github.com/gitextensions/gitextensions/assets/460196/17b9291d-c040-4d3e-8f6f-64588aa209c5)



Pinned repos with icon:

![image](https://github.com/gitextensions/gitextensions/assets/460196/d14b3d3a-65cb-4ed5-8f56-7e9fed570c14)

With pinned repos not deduplicated (as before):
![image](https://github.com/gitextensions/gitextensions/assets/460196/ec342ddc-8294-42c0-9e47-7baafec09d40)

With pinned repos deduplicated (so less repo lines displayed) :

![image](https://github.com/gitextensions/gitextensions/assets/460196/3f56cb5f-0d18-4d93-b4b7-0a973028f6f3)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 392712e717aa06c55419142557156ff185d597a3
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.5
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.30 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.19 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.5 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer rebase merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-06-04T13:12:23Z,2024-07-18T21:13:30Z,2024-07-18T21:13:30Z,,master,improve_pinned_repos_handling,11,103,20,2,10,3,"mstv, mstv, mstv, mstv","CHANGES_REQUESTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11779
11775,fix(AnsiEscapeUtilities): Limit error tracing,"Fixes #11774

## Proposed changes

- `AnsiEscapeUtilities.ParseEscape`: Limit error tracing

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

you don't want to see it

### After

```
New start marker without end for grep (270, 308) in:
diff --git a/UnitTests/GitCommands.Tests/Patches/testdata/color.diff b/UnitTests/GitCommands.Tests/Patches/testdata/color.diff
new file mode 100644
index 000000000..0bfb32613
--- /dev/null
+++ b/UnitTests/GitCommands.Tests/Patches/testdata/color.diff
[36m@@ -0,0 +1,325 @@[m
[38;2;0;0;0;48;2;200;255;200m+[1mdiff --git a/GitCommands/Patches/PatchProcessor.cs b/GitCommands/Patches/PatchProcessor.cs[m[m
[38;2;0;0;0;48;2;200;255;200m+[1mindex 70b40..c1e6c 100644[m[m
[38;2;0;0;0;48;2;200;255;200m+[1m--- a/GitCommands/Patches/PatchProcessor.cs[m[m
[38;2;0;0;0;48;2;200;255;200m+[1m+++ b/GitCommands/Patches/PatchProcessor.cs[m[m
[38;2;0;0;0;48;2;200;255;200m+[36m@@ -15,19 +15,29 @@[m [mprivate enum PatchProcessorState[m[m
[38;2;0;0;0;48;2;200;255;200m+             OutsidePatch[m[m
[38;2;0;0;0;48;2;200;255;200m+         }[m[m
[38;2;0;0;0;48;2;200;255;200m+ [m[m
<snip />
[38;2;0;0;0;48;2;200;255;200m+ }[m[m


New start marker without end for grep (362, 440)

New start marker without end for grep (389, 507)

```
## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-02T17:42:38Z,2024-06-02T19:32:51Z,2024-06-02T19:32:51Z,,master,fix/patch_error_tracing,1,4,2,1,0,0,"mstv, gerhardol","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11775
11773,feat(ScriptOptionsProvider): {SelectedRelativePaths},"Relates to https://github.com/gitextensions/gitextensions/pull/11734#issuecomment-2119243843

## Proposed changes

- Turn script option `{SelectedFiles}` into `{SelectedRelativePaths}` without resolving full paths
  in order to emphasize that these paths are valid for the selected commit (and might not apply to the working directory)
- Always replace the provided options `{SelectedRelativePaths}` and `{LineNumber}` if an according `ScriptOptionsProvider` exists - at least with an empty string
  Otherwise, ""{SelectedRelativePaths}"" was passed as is to the script, which f.i. makes VS Code open a new file with the option as name.

E.g. in order to open a file in VS Code, the following background script command can be used (if the file has not been renamed or deleted; works best with VS Code setting `window.restoreWindows` set to `preserve`):
```
cmd /c code . --goto {SelectedRelativePaths}:{LineNumber}
```
(`{LineNumber}` may not exactly match for older commits and may not apply at all if multiple files are selected in the wrong sequence.)

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-02T14:36:54Z,2024-06-23T15:31:40Z,2024-06-23T15:31:40Z,release-notes-worthy,master,feature/scripts_for_blobs,6,18,29,1,0,0,"gerhardol, mstv, RussKie","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11773
11772,FormVerify: Provide more help to user,"- Improve the 2 top labels
- Add 2 explaining tooltips

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/8b42d56b-a40c-4514-9807-d01b3da034e8)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/53eb6d89-6d6d-4645-aa19-0f5d8f82ee5d)

## Test methodology <!-- How did you ensure quality? -->

- Manual 

## Test environment(s) <!-- Remove any that don't apply -->
- Git Extensions 33.33.33
- Build c5d13dbac57836b91cbf65681f14bc7cab306eb1
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.5
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.30 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.19 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.5 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-06-01T22:55:20Z,2024-06-03T07:14:44Z,2024-06-03T07:14:44Z,release-notes-worthy,master,form_verify_help,3,53,47,2,0,1,"mstv, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11772
11771,RevisionReader: Update after at most 500 ms,"Fixes https://github.com/gitextensions/gitextensions/pull/11621#discussion_r1532965374

## Proposed changes

- fix(RevisionReader): Update after at most 500 ms
- fix(RevisionReader): Define `TRACE_REVISIONREADER` for debug build only

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![before](https://github.com/gitextensions/gitextensions/assets/36601201/ef84344a-cc6e-48b4-8875-c3636c92c497)

### After

![after](https://github.com/gitextensions/gitextensions/assets/36601201/e51117a7-7a1c-4974-9409-499b458ca580)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-06-01T20:32:01Z,2024-06-04T19:16:35Z,2024-06-04T19:16:35Z,,master,fix/grid_update,2,6,3,2,0,0,"gerhardol, pmiossec, gerhardol","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11771
11770,fix(ShellEx): Support adding multiple files,"Fixes #11711

## Proposed changes

- fix(ShellEx): Support adding multiple files
- fix(ShellEx): Write `InstallDir` to registry on registration of the shell extension
- fix(ShellEx): Open GE with current dir as work dir

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

N/A

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/39e1905d-f5c5-4644-b55f-98d5ca2d443f)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-31T23:17:07Z,2024-06-11T22:29:14Z,2024-06-11T22:29:14Z,release-notes-worthy,master,fix/11711_shellex_addfiles,5,66,31,3,1,1,"gerhardol, RussKie, mstv, mstv, RussKie, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11770
11769,fix(ReportDubiousOwnership): Replace single quotes,"Fixes #11767

## Proposed changes

- `ReportDubiousOwnership`: Replace single quotes with double quotes in proposed git command

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

see issue

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/777502d0-b14f-4c1a-827c-0a62b28d9062)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-31T19:31:43Z,2024-06-01T11:52:56Z,2024-06-01T11:52:56Z,,master,fix/dubious_ownership,1,16,1,3,0,1,"gerhardol, RussKie, RussKie","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11769
11765,Fixup hangs moving the RevisionGrid,"Fixes https://github.com/gitextensions/gitextensions/discussions/11441#discussioncomment-7921050

## Proposed changes

- `RevisionDataGridView`: Remove double invalidate from `CacheTo`
- `RevisionGraph`: Save masses of pointer copies by switching to a permanent instance of `List<RevisionGraphRow>`
  `ImmutableArray` is not needed any longer as the `_orderedRowCache` is built and accessed from the same exclusive background task.
  `_orderedRowCache = localOrderedRowCache.ToImmutable();` is very expensive and seems to even block the UI thread although executed in a background task. 

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual (scroll down the Linux repo)

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-29T16:13:15Z,2024-05-31T18:52:46Z,2024-05-31T18:52:46Z,,master,fix/grid_perf,2,34,52,2,2,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11765
11762,Generate P/Invoke code at compile time,"## Proposed changes

`DllImport` causes binding code to be generated at run time, which can hurt startup performance. It also precludes use of NativeAOT compilation.

This change introduces the newer `LibraryImport` (.NET 7) which performs the binding at compile time via a source generator.

This fixes instances of diagnostic SYSLIB1054.

The changes here were made by a code fix, with a few exceptions:

- I had to roll a few automated changes back as they wouldn't compile.
- I had to explicitly specify string marshaling as UTF-16 in one instance.
- I had to rename a function from `SendMessage` to `SendMessageW` to avoid an exception when opening `FormCommit`.

As this last point suggests, this still uses late binding. It's just the code generation that's done up front.

There are also possible changes in `conemu` and `ICSharpCode.TextEditor`, but they would have to be filed separately.

More info on this at:

- https://learn.microsoft.com/en-us/dotnet/standard/native-interop/pinvoke-source-generation
- https://learn.microsoft.com/en-us/dotnet/fundamentals/syslib-diagnostics/syslib1050-1069

## Test methodology <!-- How did you ensure quality? -->

Manual testing. It's possible that these changes fail at run time (as mentioned above) and most P/Invoke happens in the UI, so only using the UI will draw issues out. I'd avoid merging this right before a public release, just to give time for developers in the repo to hit any issues here. That said, I ran through a bunch of UI scenarios and didn't hit any problems.

## Test environment(s) <!-- Remove any that don't apply -->

- GIT N/A
- Windows 11

## Merge strategy

I don't mind. I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2024-05-29T03:42:41Z,,,,master,p-invoke-source-generator,27,87,80,2,4,3,"mstv, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11762
11759,Fix: Correct ProjectId retrieval in GitLab BuildServerIntegration due…,"… to improved group parsing in URLs

This commit addresses an issue where the BuildServerIntegration with GitLab was failing to correctly obtain ProjectIds.

An inconsistency was encountered in parsing GitLab project URLs, particularly those with nested namespaces (e.g., `https://git.xxx.ai/aot/xdtest/agv.git`). Previously, the namespace was incorrectly parsed as `xdtest`, and the host was mistakenly inclusive of the first part of the namespace (`git.xxx.ai/aot`), leading to failed Project ID retrievals.


Fixes 


## Test methodology <!-- How did you ensure quality? -->

Given a project URL `https://git.xxx.ai/aot/xdtest/agv.git`:
- Incorrect Namespace Parsing: `xdtest`
- Incorrect Host Interpretation: `git.xxx.ai/aot`

aot/xdtest/agv.git == [groupName]/[groupName]/[Project name].git

**Reproduction Steps:**

1. Configure the BuildServerIntegration with a GitLab instance containing projects
2.  Instance https://git.xxx.ai
3. Click on the ""Get Project ID from server"" button.
4. Observe that the system fails to retrieve the correct Project ID due to namespace parsing errors.",closed,2024-05-27T07:30:13Z,2024-06-16T20:16:06Z,2024-06-16T20:16:06Z,:pen: status: cla signed,master,master,4,16,2,4,1,3,"RussKie, gerhardol, redcatH, pmiossec, pmiossec, gerhardol, gerhardol","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11759
11758,fix(RevisionReader): Load body in dependency on commit date,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11710

## Proposed changes

- RevisionReader: Load commit body in dependency on commit date instead of on author date

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/36601201/4f57cf4d-4648-4760-971c-3a00063abd00)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/a3f75417-0040-4a6f-b660-57113f5bd1ba)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-26T12:02:36Z,2024-05-27T17:35:11Z,2024-05-27T17:35:11Z,,master,fix/11710_commit_body,1,1,1,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11758
11757,Handle `RevisionReader.GetRevision` returning `null`,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes NRE after calling `RevisionReader.GetRevision`

## Proposed changes

- Indicate that `RevisionReader.GetRevision` can return `null` and handle it
  optionally by throwing an `ExternalOperationException`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- additional testcases

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-26T11:33:28Z,2024-05-27T17:42:41Z,2024-05-27T17:42:41Z,,master,fix/revisionreader,4,40,11,1,0,0,"gerhardol, RussKie, RussKie","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11757
11754,chore: fix update-loc.cmd script (following repo restructure),"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes[ #](https://github.com/gitextensions/gitextensions/pull/11744#issuecomment-2131204692)
",closed,2024-05-25T10:51:01Z,2024-05-25T10:52:00Z,2024-05-25T10:52:00Z,,master,fix_update_script,1,1,1,1,0,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11754
11753,Improve recovery form,"## Proposed changes

* display type of data for blob in grid
* perf: fetch ** dangling commit** metadata by batch (for my GE repo, for 1074 commits: 0.8s instead of 41.5s / only the long `git fsck` command --25s-- is now taking time. Overall: 1m5s before/ 25s after )
* syntax highlighting also when opening in popup viewer
* contextual shortcut are directly accessible (no need to open contextual menu first) & Ctrl-S added
* support more file types & magic numbers
* perf: don't do GUI costly processing twice

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/03731d43-53f7-4ce7-a53e-6e61d83a7566)

![image](https://github.com/gitextensions/gitextensions/assets/460196/d003cb12-9f8b-4088-943e-536d9c25ba79)

![image](https://github.com/gitextensions/gitextensions/assets/460196/0edd7ebc-8d3e-4bd4-902e-2cd84051b3b9)

### After
![image](https://github.com/gitextensions/gitextensions/assets/460196/b8d2fa32-a5c0-4b94-9007-254ab775bc12)

![image](https://github.com/gitextensions/gitextensions/assets/460196/4362843d-c7c4-428f-8580-af5ec2a451d6)

![image](https://github.com/gitextensions/gitextensions/assets/460196/70741ce6-a97f-4757-8809-8780087c5c49)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 3c8dd1972d260d7b0bcb613805a83e3988f96a87 (Dirty)
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-25T10:17:12Z,2024-05-27T20:10:57Z,2024-05-27T20:10:57Z,release-notes-worthy,master,improve_recovery,5,135,39,7,0,3,"RussKie, pmiossec, mstv, pmiossec, pmiossec, gerhardol, mstv, RussKie, mstv, pmiossec, RussKie, pmiossec, RussKie","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11753
11752,Use `IGitUICommands` in signatures,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Follow up to https://github.com/gitextensions/gitextensions/pull/11269

## Proposed changes

- Replace `GitUICommands` with `IGitUICommands` in signatures.
- Move selected types to GitExtensions.Extensibility to enable the above change



----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-25T03:54:51Z,2024-05-27T04:30:01Z,2024-05-27T04:30:01Z,release-notes-worthy,master,interface,30,227,126,2,0,2,"mstv, gerhardol, RussKie","APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11752
11751,"Add ""Close (go to Dashboard) to repos dropdown","
## Proposed changes

- Extract the working directory / recent repositories dropdown as a standalone component
- Add ""Close (go to Dashboard) to repos dropdown

## Screenshots <!-- Remove this section if PR does not change UI -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/4403806/2553622d-a733-4032-a3c9-320d3c56532f)


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-24T02:40:29Z,2024-07-03T07:37:30Z,2024-07-03T07:37:29Z,,master,close_repo,11,446,314,2,10,1,"mstv, RussKie, pmiossec, gerhardol, RussKie, RussKie, RussKie, mstv, mstv, RussKie, RussKie, pmiossec, RussKie, RussKie, pmiossec, mstv, RussKie, RussKie, mstv, pmiossec, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11751
11749,Filter: Add 2 examples of invert grep filters,"* to exclude from commit message
* to exclude from author

Help user with #8176

2 patterns are added at the end of the filter ""history"" and the user has just to select and replace the pattern to filter.
I'm aware that it's not the perfect UX but it is **very** convenient if you want to do this kind of filter (otherwise it is really difficult)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/7a946078-e3c8-40e7-a97e-7354acd382ae)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build dd7687981074b2c7cad97c5e2cfeb41dc5811749
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-22T15:06:28Z,2024-05-24T17:21:54Z,2024-05-24T17:21:54Z,,master,invert_filter_examples,1,7,1,1,2,2,"gerhardol, mstv, mstv, gerhardol, pmiossec, mstv","APPROVED, COMMENTED, APPROVED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11749
11748,More meaningful and (I hope) pleasant default colors,"* Selected revision (blue) => Same author (**light** blue)
* Selected text (mauve) => Same text (**light** mauve)

Note: I know that colors is a sensible subject and that everyone has it's own tastes but I hope I will not open the pandora's box.
I personally prefer not seeing the kind of yellow.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/bee214f2-8368-4808-be85-1bb9070e88c0)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/03ddabeb-1a7d-4240-8dfc-12016950e2d7)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build dd7687981074b2c7cad97c5e2cfeb41dc5811749
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-22T14:40:46Z,2024-05-23T15:59:04Z,2024-05-23T15:59:04Z,,master,more_meaningful_colors,2,4,4,1,2,2,"gerhardol, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11748
11747,fix Hexa editor display of binary files,"by:
* reading file and blob with a better encoding
* not touching/altering *blob* content (i.e not breaking content by reencoding)
* not converting in ASCII before doing the Hexa editor display (it breaks char > 0x80)

As a result, display is **exactly** the same obtained by using an external Hexa Editor:
* Hexa value are accurate
* string display is the same (except some cheating done by hexa editor
for example with char 0x99 displayed as ™)
* File size is accurate

Kind of followup to #11727 as it was not always working well because beginning of some files (ex: jpegs) were badly altered when reading blob content.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

#### In commit window

* before:

![image](https://github.com/gitextensions/gitextensions/assets/460196/42e52363-58bd-40db-b364-5e3f4e740776)

* After:

![image](https://github.com/gitextensions/gitextensions/assets/460196/6517884f-9f4c-4294-b301-5eecece46496)

Goal (Hex editor):

![image](https://github.com/gitextensions/gitextensions/assets/460196/32817078-02f6-44c2-be90-c6a6a58535b9)

#### Recover jpeg blob:

* before: 
![image](https://github.com/gitextensions/gitextensions/assets/460196/023925d3-194c-4fc0-abff-08ad56f83d48)


* after (because content is not corrupted, type of file is well recognized):

![image](https://github.com/gitextensions/gitextensions/assets/460196/b5654273-09e7-4398-9147-3c8a22bc741a)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 561d355dff3fc916f7a8fe04b18b65ad911dddb1
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-22T12:19:22Z,2024-05-24T17:23:19Z,2024-05-24T17:23:19Z,,master,fix_binaries_display,5,63,40,2,1,5,"mstv, gerhardol, mstv, gerhardol, gerhardol, mstv","COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11747
11746,feat(GitHub): Add commit message issue helper feature,"
## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

no git issue menu item

### After

Need to be enabled:
![image](https://github.com/gitextensions/gitextensions/assets/460196/91667560-be47-4d1d-9735-a380dd1fdff2)

Issue template from GitHub assigned issues:
![image](https://github.com/gitextensions/gitextensions/assets/460196/c5233d9e-622f-49e7-9dbf-0a4f623f9fa1)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build a32c590c1f00a2e918f68d0fe5b70d86bc54db48
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-21T13:15:01Z,2024-05-26T17:51:00Z,2024-05-26T17:51:00Z,,master,feat/github_issues_commit_message_helper,5,114,5,3,2,3,"gerhardol, gerhardol, pmiossec, pmiossec, gerhardol, pmiossec, gerhardol, RussKie, gerhardol, pmiossec, pmiossec, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11746
11745,fix(diff): Script separator only if items,"## Proposed changes

Only show the script separator if there are items

## Screenshots <!-- Remove this section if PR does not change UI -->

diff tab context menu
### Before

![image](https://github.com/gitextensions/gitextensions/assets/6248932/b373705b-3d43-4cf3-8299-f7109cda7880)

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/d203e96d-3cb3-4516-8f12-df4d1044daf0)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-20T21:40:03Z,2024-05-25T18:57:26Z,2024-05-25T18:57:26Z,,master,feature/diff-script-separator,2,8,2,1,0,1,"RussKie, mstv, mstv, pmiossec","APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11745
11744,Restructure repository,"* Rename Setup/ to setup/
* Rename Bin/ into assets/ and move under setup/
* Rename Externals/ to externals/
* Move app projects into src/
* Move test projects into tests/
* Move scripts/ to eng/
* Move TranslationApp/ into setup/
",closed,2024-05-19T11:21:21Z,2024-05-24T01:24:16Z,2024-05-24T01:24:16Z,,master,restructure,30,145,316,1,14,3,"gerhardol, RussKie, gerhardol, RussKie, pmiossec, mstv, mstv, gerhardol, pmiossec","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11744
11743,Open GitHub release page for portable apps instead of downloading msi,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->


Fixes #11742

## Proposed changes

- Open GitHub release page for portable apps instead of downloading msi
- Convert FormUpdates to use GitExtensionsDialog

## Screenshots <!-- Remove this section if PR does not change UI -->



### After

* Installed
![image](https://github.com/gitextensions/gitextensions/assets/4403806/63f690f9-ecdc-476b-af51-6fdffa87d577)
![image](https://github.com/gitextensions/gitextensions/assets/4403806/2389e8a7-29f2-40e7-857b-d662b239ed5e)
![image](https://github.com/gitextensions/gitextensions/assets/4403806/b847b5d8-22bc-4537-8776-0b3ae3e11b4d)


* Portable
![image](https://github.com/gitextensions/gitextensions/assets/4403806/17967835-295c-4ed4-91ee-9e07aeee989d)
![image](https://github.com/gitextensions/gitextensions/assets/4403806/de03208b-4bd7-4542-9710-9cb95c538efc)


<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-19T09:41:05Z,2024-05-21T02:36:58Z,2024-05-21T02:36:58Z,,master,fix_11742,4,287,254,3,0,1,"gerhardol, RussKie","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11743
11739,fix(difftastic): default for --strip-cr changed in 0.58,"## Proposed changes

Always set the option to handle compatibility.
https://github.com/Wilfred/difftastic/releases/tag/0.58.0

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-16T20:07:24Z,2024-05-26T20:12:56Z,2024-05-26T20:12:56Z,,master,feature/difftastic-0.58,1,5,6,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11739
11738,fix(diff): Don't fail if user customized git `diff.*Prefix` settings,"i.e. `diff.srcPrefix` and `diff.dstPrefix` settings introduced with git v2.45 https://git-scm.com/docs/git-diff/2.45.0#Documentation/git-diff.txt---default-prefix

Only (remaining) constraint is that the prefix end with '/' and doesn't contain a space.

Allowing something like (for terminals supporting hyperlinking to paths):
 git config --global diff.srcPrefix ""before:./""
 git config --global diff.dstPrefix ""after:./""

https://github.blog/2024-04-29-highlights-from-git-2-45/

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/da66bac6-bfce-4d9b-87b2-c3c13c861528)

### After

No error diff displayed:

![image](https://github.com/gitextensions/gitextensions/assets/460196/37a05d12-7501-4746-a9fc-ef0386520931)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 9dd1ea113a519b0c40036d35f66c4d2f01b26423
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-15T14:24:42Z,2024-05-21T12:24:55Z,2024-05-21T12:24:55Z,,master,diff_prefix_support,6,365,3,1,1,1,"gerhardol, gerhardol, RussKie, gerhardol, RussKie","COMMENTED, APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11738
11735,Convert FormCommitTemplateSettings to GitExtensionsDialog; fix Dpi issues,"Fixes #11343

## Proposed changes

- Convert `FormCommitTemplateSettings` to `GitExtensionsDialog`
- Fix `TabIndex` for controls in the second tab
- Adjust grammar

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

**At 100% scale**

![image](https://github.com/gitextensions/gitextensions/assets/483659/ef1c6dda-f544-4890-8338-57cebc27117a)

![image](https://github.com/gitextensions/gitextensions/assets/483659/dfa54629-25b7-472f-ad93-b509b9838a98)

**At 200% scale**

![image](https://github.com/gitextensions/gitextensions/assets/483659/bb17a549-40ab-41de-b7ff-83002250f7b6)

![image](https://github.com/gitextensions/gitextensions/assets/483659/1cad63b3-b9e3-4249-9ca2-ae7baef8caa0)


### After

**At 100% scale**

![image](https://github.com/gitextensions/gitextensions/assets/483659/ef534d3b-fb42-4e13-b951-ac7947b7d59d)

![image](https://github.com/gitextensions/gitextensions/assets/483659/45101491-cd7c-46f1-9e3d-641cc58a04df)

**At 200% scale**

![image](https://github.com/gitextensions/gitextensions/assets/483659/7f6ca361-c96f-46f9-bc4a-aafb3f834fe8)

![image](https://github.com/gitextensions/gitextensions/assets/483659/f16ed275-2270-48b0-adf7-5ecb5e609750)

## Test methodology <!-- How did you ensure quality? -->

- Manually

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100% and 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-11T19:00:03Z,2024-05-12T09:35:29Z,2024-05-12T09:35:29Z,,master,fix-FormCommitTemplateSettings-dpi,5,184,185,3,2,2,"mstv, gerhardol, RussKie","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11735
11734,Expose ScriptOptionsProvider to toolbar event scripts,"<details>
  <summary>Previous PR description before it got ""rebranded""</summary>

## Proposed changes

Once I've noticed this PR https://github.com/gitextensions/gitextensions/pull/11239 I wanted to use `{SelectedFiles}` in my script but it didn't work, I got literal value of `{SelectedFiles}` as a result.
Question: Is it a bug to leave `{SelectedFiles}` unreplaced into say an empty string?

- Since Toolbar Event Scripts go through `FormBrowse` when looking for a `IScriptOptionsProvider`, `FormBrowse` conveniently has two potential sources for it
- Override `GetScriptOptionsProvider()` in `FormBrowse` to forward this request to `RevisionDiffControl` or `RevisionFileTreeControl` depending on which one is visible

----

</details>

## Proposed changes

Currently scripts using `toolbar` event type do not have access to `IScriptOptionsProvider` thus are unable to make use of all variables provided by the scripting mechanism.

- Since Toolbar Event Scripts go through `FormBrowse` when looking for a `IScriptOptionsProvider`, `FormBrowse` conveniently has two potential sources for it
- Override `GetScriptOptionsProvider()` in `FormBrowse` to retrieve `IScriptOptionsProvider` from `RevisionDiffControl` or `RevisionFileTreeControl` depending on which one is visible/active

## Test methodology <!-- How did you ensure quality? -->

- Manually. I've been using this feature for ~2 weeks almost daily

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-10T09:44:01Z,2024-06-26T17:54:49Z,2024-06-26T17:54:49Z,,master,selectedfiles-in-toolbar-event-scripts,3,19,0,2,24,1,"mstv, mdonatas, mdonatas, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11734
11733,fix(RevisionReader): do not quote GetRevision() hash,"Fixes #11732

## Proposed changes

Reviewed the code paths calling this and reverting the quoting added in #11570

Also make sure artificial commits are not cached

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-09T17:05:14Z,2024-05-10T20:44:28Z,2024-05-10T20:44:28Z,,master,feature/i11732-sequence-commithash,1,5,2,2,1,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11733
11731,fix(revgrid): SuperprojectModule has no workingdir,"Fixes #11730

## Proposed changes

The superproject workingdir is occasionally null at least for WSL when restoring minimized windows and the command to add branches for the super project in the submodule cannot run.

## Screenshots <!-- Remove this section if PR does not change UI -->

No GUI change, just example of the superproject info
![image](https://github.com/gitextensions/gitextensions/assets/6248932/24252432-44a0-42fd-afbf-be39cd437699)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-09T13:05:49Z,2024-05-10T20:28:28Z,2024-05-10T20:28:28Z,,master,feature/i11730-wsl-submodule,1,1,1,1,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11731
11727,Improve recovery of files UX,"## Proposed changes

- Display tag as patch (to benefit diff syntax highlighting)
- improve recovery file format detection and saving
    * improve heuristic to determine file type
    * better default name for recovered files (by using the file type found)
    * allow user to more easily save as another (similar) file type

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

* tag:

![image](https://github.com/gitextensions/gitextensions/assets/460196/78d91afb-c369-4ad0-96af-e3834d55f449)

* File recovery:

![image](https://github.com/gitextensions/gitextensions/assets/460196/dfc5df6e-13eb-4e7b-80e3-ec6e4c8d658c)

![image](https://github.com/gitextensions/gitextensions/assets/460196/7ba9d8e9-74e8-443e-a550-3fc4c48c36ca)

### After

* tag:

![image](https://github.com/gitextensions/gitextensions/assets/460196/7cbd9009-841e-4db7-b117-ff5197f61fbe)

* better detection of file type and better saving UX:

![image](https://github.com/gitextensions/gitextensions/assets/460196/28fa7a7c-b3d3-4317-abb7-1aa964f07aff)

![image](https://github.com/gitextensions/gitextensions/assets/460196/eb0e19f6-e2bb-43c9-a664-e8b67e4c6eab)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-08T09:21:45Z,2024-05-10T10:22:42Z,2024-05-10T10:22:42Z,release-notes-worthy,master,improve_recovery_ux,1,68,32,1,0,2,"RussKie, mstv, gerhardol","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11727
11725,Checkout *remote* branch: more helpful labels,"## Proposed changes

Update labels to be clear that:
- a remote **can't** be checked out and that the commit will be checked out in fact (and user will be end up in 'detached head' state).
- local branch will be given the *same* branch name

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/98bad465-d01e-4899-9b9c-2dcd6a5f6de1)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/fee6d576-83c5-4b3b-8238-7cc8ae8ad0c4)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 453280d62575f353cd5d6b2d30a5e9cc08a21f2e
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-07T10:48:47Z,2024-05-08T08:19:48Z,2024-05-08T08:19:48Z,,master,checkout_branch_helpful_labels,3,4,4,2,0,0,"RussKie, mstv, gerhardol","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11725
11724,"fix: label ""No changes"" no more hiding first file of the list","when opening ""FormLog""
even if it was set as not visible.

Fixes #11679

Reproduce step: double click on a revision in the revision grid

Regression introduced by f8c035302bba1351d88b5159e5ec93bfbbc5933d

/!\ Technical reason of the bug:
Previous code was:

            FilterComboBox.Visible = filesPresent || (SearchComboBox.Visible && !string.IsNullOrEmpty(SearchComboBox.Text));
            NoFiles.Visible = !FilterComboBox.Visible;

But as `FilterComboBox.Visible` is not just a property storing the value directly to a backed field
(it has a complex WinFoms internal logic),
 the value retrieved by the getter ( to after set `NoFiles.Visible`) is sometimes wrong and not the one set to the property :(
The value is not ""well"" set due to complex internal logic and so a wrong value is used after.

Using a temporary variable fix the issue because the set of the 2 properties has no more impact on each others!
## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/ccd4b5c1-31bf-4495-854b-ae5c43ffcb7a)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/07b479f0-df00-4fb0-8365-ca2322809d83)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 10b42c51f9bf9285b4a064e2a3d2547ea215f87a
- Git 2.45.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-07T10:28:02Z,2024-05-16T20:59:38Z,2024-05-16T20:59:38Z,,master,fix_no_changes_hidding_label,1,6,3,1,3,2,"mstv, gerhardol, pmiossec, RussKie, mstv, pmiossec, mstv, gerhardol, pmiossec, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11724
11722,fix(RevisionDataGridView): Update RowCount while loading,"## Proposed changes

- `RevisionDataGridView`: (Asynchronously) update `RowCount` also if `DisplayedRowCount` returns 0 yet
- `BackgroundUpdater`: Always cool down after performing the `_operation`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

revision grid may stay empty until ""Loading"" is hidden

### After

`RowCount` is updated every 300 milliseconds

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-05T15:20:58Z,2024-05-11T21:08:03Z,2024-05-11T21:08:02Z,,master,fix/graph_loading,2,16,9,2,3,1,"gerhardol, gerhardol, RussKie","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11722
11721,Diff moved lines: Use dimmed-zebra algorithm,"Tweak to #11674

## Proposed changes

git-diff detects moved blocks (with at least 20 chars) and colors adjacent blocks with alternate colors.
The alternative color profile will use dimmed colors for lines that are moved without changes so changed lines stand out better.
Border lines close to changes are marked (not always done by Git though...)

A better description: https://stackoverflow.com/questions/57817642/whats-the-purpose-of-dimmed-zebra

This PR changes to use dimmed-zebra instead (zebra is git default).
A bonus is that the GE colors are hard to see in the terminal. (such theme colors are hard to tune)
After feedback, colors are changed to be dimmed colors for moved and normal colors (but not reverse video) for border lines.

Need to be updated in the GE doc PR too.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

block1 and block2 should have alternate colors

![image](https://github.com/gitextensions/gitextensions/assets/6248932/4014b719-9815-4bf0-94f5-a6b1f2742af1)

### After

Not sure why block2 added do not have alternate colors

![image](https://github.com/gitextensions/gitextensions/assets/6248932/561a82f5-a8b8-4b17-bc4e-17899b0f306a)

Slight update with some alternate blocks where border is seen

![image](https://github.com/gitextensions/gitextensions/assets/6248932/fb2767fc-5944-41e9-a1bb-bb9543504b9b)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-05-03T20:57:52Z,2024-05-07T21:33:10Z,2024-05-07T21:33:10Z,,master,feature/dimmed-zebra,2,38,17,2,3,1,"RussKie, mstv, mstv","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11721
11719,Render revision graph in the background,"Fixes #11700

## Proposed changes

Have clear chains of revision grid updates (one for graph loading affecting RowCount, one for visible row range).
Get rid of several workarounds and of the mix-up of revision loading and graph-only operations.
Avoid unnecessary blocking the UI thread.

- Do not render the graph in the UI thread but in a background task with double buffering
  in order to avoid calling the potentially expensive `RevisionGraphRow.BuildSegmentLanes` from the UI thread
- Remove `RevisionDataGridView.UpdateGraphAsync`, just call `RevisionGraph.CacheTo` once with cancellation
  because `CacheTo` is needed for graph rendering only
- Remove `UpdateVisibleRowRange` call on unhandled `OnCellPainting`
  because there no need to for this additional trigger of graph update
- `RevisionDataGridView`: Remove special `OnScroll` handler which called `Update` from time to time
  because the revision graph rendering does not block the UI any longer

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual
- adapted tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

## Please do not squash merge!

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-01T19:29:28Z,2024-05-12T19:57:55Z,2024-05-12T19:57:55Z,,master,fix/graph_perf,6,229,296,5,2,2,"gerhardol, RussKie","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11719
11718,Refresh less on author highlighting,"## Proposed changes

- Just invalidate `_gridView` on author highlight instead of refreshing the entire `RevisionGridControl`
- Always explicitly refresh the `RevisionGridControl` in `OnRevisionReadCompleted` in order to apply settings and column widths
- Trigger graph update from `RevisionDataGridView.SetRowCount`
  which fixes the regression from the improved author highlighting

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual
- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-05-01T18:41:46Z,2024-05-09T19:32:11Z,2024-05-09T19:32:11Z,,master,fix/author_highlight,2,15,16,2,0,1,"gerhardol, gerhardol, mstv, mstv, pmiossec, pmiossec, RussKie, RussKie, gerhardol, gerhardol, mstv, gerhardol, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, APPROVED, APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11718
11714,fix(RevisionDataGridView): Cancel outdated update,"Might fix #11700

## Proposed changes

- `RevisionDataGridView.Clear`: Cancel outdated update by `RevisionDataGridView.UpdateVisibleRowRangeInternalAsync`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-28T21:08:54Z,2024-05-01T15:29:21Z,2024-05-01T15:29:21Z,,master,fix/graph_redraw,1,1,0,1,2,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11714
11713,conemu-inside: No trace output in release build,"## Proposed changes

`GetInfoRoot.QueryAsync`: No trace output in release build (`Debug.WriteLine` instead of `Trace.`)
in order to suppress output like:

```
[ROOT]: <Root
	State=""NotStarted""
	Name=""git.exe""
/>

[ROOT]: <Root
	State=""Running""
	Name=""git.exe""
	PID=""19884""
	ExitCode=""259""
	UpTime=""0""
/>

[ROOT]: <Root
	State=""Exited""
	Name=""git.exe""
	PID=""19884""
	ExitCode=""0""
	UpTime=""1832""
/>
```

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-28T20:36:15Z,2024-05-01T19:49:58Z,2024-05-01T19:49:58Z,,master,reduced_trace,1,1,1,1,7,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11713
11712,perf(graph): Keep more lines in cache when scrolling forward,"## Proposed changes

- `RevisionGraphColumnProvider.PaintGraphCell`: Keep more lines in cache when scrolling forward
  A different limit is needed for forward than for backward in order to not unnecessary throw away rendered lines.

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- extended unit tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-28T16:22:07Z,2024-05-01T15:29:49Z,2024-05-01T15:29:49Z,,master,fix/graph_cache,2,45,16,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11712
11709,Allow selecting custom icons for user defined scripts,"## Proposed changes

- In `Scripts` in addition to `Icon` property, add `IconPathName` in the property grid
  - First, this will allow to pick any icon the user wishes for
  - Second, this will allow picking high quality icons (built in ones are blurry)
- Change icon related property handling such that their values are reflected in the scripts list immediately on-value-change
- Fix DPI issues with script icons (see ""before 200% scaling"" screenshot)
- Default position of `PropertyGrid` is ridonculous. StackOverflow listed the only option of using reflection to read into internal control and adjusting its splitter position.. not pretty but no downsides even if underling API changes **and** it looks much better.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

100% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/50d4bd57-da37-4075-8f33-b4819b6ce3a0)

200% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/b2253036-9800-4c16-8900-a7b4dcf3d0fa)


### After

100% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/258ececc-2c8c-4df1-8c25-ff10ab3c3a5b)

200% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/40ee82d0-7e55-47c8-80b3-8af5af15d01b)

## Test methodology <!-- How did you ensure quality? -->

- Manually by adding empty paths, incorrect paths, setting both `Icon` and `IconPathName`, etc.

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-26T15:09:38Z,2024-05-01T16:39:02Z,2024-05-01T16:39:02Z,,master,custom-script-icons,5,129,25,8,3,3,"mstv, mdonatas, mdonatas, mdonatas, mstv, mstv, mdonatas, mdonatas, mstv, mdonatas, mstv, mstv, RussKie, mdonatas, mdonatas, mdonatas, RussKie, RussKie, RussKie, RussKie, mdonatas, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11709
11707,[WIP] Read repositories with sha256 object format,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #5483

## Proposed changes

- Work with repositories which use sha256 as object format

## Test methodology <!-- How did you ensure quality? -->

- T.B.D. / manual for now

## Test environment(s) <!-- Remove any that don't apply -->

- GIT version 2.43.0.windows.1
- Windows 11 23H2

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy
I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2024-04-24T23:10:31Z,,,,master,allow-sha256,5,191,35,1,2,1,"RussKie, pmiossec, gerhardol, drewnoakes, drewnoakes, drewnoakes, drewnoakes, Chri-s, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",True,https://api.github.com/repos/gitextensions/gitextensions/issues/11707
11705,Links for InfoClicked in Settings,"## Proposed changes

Open documentation settings in the browser when info icons are clicked.
DiffViewer handled in https://github.com/gitextensions/gitextensions/pull/11677

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-23T22:20:57Z,2024-04-25T21:10:56Z,2024-04-25T21:10:56Z,,master,feature/settings-click-link,9,64,13,7,3,1,"RussKie, gerhardol, mstv, mstv, gerhardol, RussKie, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11705
11704,feat(SettingsCheckBox): Use hand cursor for icon,"Fixes https://github.com/gitextensions/gitextensions/pull/10307#discussion_r1576296882

## Proposed changes

- Use hand cursor for icon of `SettingsCheckBox`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/36601201/b68da660-a9d1-4d60-8143-a3fd1da949ef)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/1fce387f-3ad9-444f-9ae9-93727d6a0979)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-23T19:20:40Z,2024-04-23T19:50:04Z,2024-04-23T19:50:04Z,,master,feature/settings_checkbox_hand,2,28,28,1,0,0,pmiossec,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11704
11703,FormChooseCommit & Rebase onto: Display only potential commits,"so that choice is not overwhelming
and user has less data to process to find commit he wants

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

All the git history is displayed and user has to search for the commit to select:
![image](https://github.com/gitextensions/gitextensions/assets/460196/454e5f91-a157-4bcd-9920-12d379241ddc)

### After

Only the commit that could be rebased are displayed and it's easier for user to find the good low bound one of commits to rebase:
![image](https://github.com/gitextensions/gitextensions/assets/460196/43c29097-89b8-46ec-a9da-2258794bf173)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 754b034fbe97b7e7973e5b43bfed7fc87cff1a3e
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-23T12:22:44Z,2024-05-04T04:58:07Z,2024-05-04T04:58:07Z,,master,form_rebase_commits_range_reduced,4,47,3,1,2,1,"mstv, RussKie, RussKie, RussKie, pmiossec, RussKie","COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11703
11698,fix(TranslationUtil): Suppress Trace output,"## Proposed changes

- Suppress `Trace` output from `TranslationUtil` in release build

Though these traces might be a hint that something does not work properly. I think the number of such traces is not the same on every startup.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![hints from translation](https://github.com/gitextensions/gitextensions/assets/460196/b6eaa41b-1a14-4315-b083-3f648c715f02)

### After

no output

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-22T22:11:32Z,2024-04-23T19:24:06Z,2024-04-23T19:24:06Z,,master,fix/silence_translation,1,1,1,1,0,0,pmiossec,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11698
11697,refactor: Factor out ExecutionResult.ThrowIfErrorExit,"## Proposed changes

- Factor out `ExecutionResult.ThrowIfErrorExit`
  from `GitModuleGetGitSetting` in preparation of #11680

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-22T18:53:34Z,2024-04-23T19:27:09Z,2024-04-23T19:27:09Z,,master,refactor/throw_if_error_exit,6,43,7,4,2,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11697
11696,Fix FormRemotes DPI scaling,"## Proposed changes

- Fix `FormRemotes` DPI scaling
- Adjust alignment/anchoring for more even layout

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

100% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/d8851e42-6b4c-4eaf-9c24-7f18f181ef97)

200% scaling (notice huge buttons)
![image](https://github.com/gitextensions/gitextensions/assets/483659/86543bfc-defb-4ef1-a958-116598e50227)

### After

100% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/bad115db-bd4e-4118-b8b5-5a89d614a186)

200% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/02cf0398-0cb9-4688-ad8e-42c1bddcb55f)

## Test methodology <!-- How did you ensure quality? -->

- Manually at 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-21T13:19:01Z,2024-04-22T05:21:29Z,2024-04-22T05:21:29Z,,master,fix-form-remotes-scaling,2,289,268,2,0,1,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11696
11695,Fix FormInit DPI issues; align with FormClone,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Fix FormInit DPI issues by wrapping the radio buttons in a `GroupBox` and placing it into a `TableLayoutPanel`
- Align anchoring for buttons and labels between two forms
- Align button sizes between two forms
- Remove unused Button controls from `FormClone`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before (FormInit)

100% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/8a34ab84-54dd-437f-be1c-749cd7120500)

200% scaling (notice the radio buttons)
![image](https://github.com/gitextensions/gitextensions/assets/483659/a1610b9c-9933-4ba8-a79e-a206f9273152)

### After (FormInit)

100% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/fc0c1c16-42b3-4881-84bb-49e7ed3e1f7e)

200% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/e17e8045-ac81-420e-8d7d-4684466167e5)

----

### Before (FormClone)

200% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/31a65da5-661a-418b-99ce-b5b9146f7f9a)

### After (FormClone)

200% scaling
![image](https://github.com/gitextensions/gitextensions/assets/483659/5e264f07-e127-459c-bf33-594f64115760)

- Manually at 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-21T12:03:06Z,2024-04-22T05:19:37Z,2024-04-22T05:19:37Z,,master,align-forminit-formclone,4,89,62,2,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11695
11694,GE internal revision links: Match PR starting with number,"# Proposed changes

- Provide revision link for the PR if the branch name starts with the PR number
  e.g. created by `git fetch upstream pull/{UserInput}/head:{UserInput}`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

no link

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/408498dd-db32-457c-bfa1-14e54bcee1e7)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-20T21:14:47Z,2024-04-21T17:33:49Z,2024-04-21T17:33:49Z,,master,feature/ge_pr_link,1,1,1,1,0,1,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11694
11693,Adjust FormDeleteRemoteBranch sizing and fix DPI issues,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Reduce empty space in the form
- Fix the form getting overly long with higher scaling

I've spent A LOT of time trying this and that until this change has fixed the form getting overly long and becoming non-resizable

![image](https://github.com/gitextensions/gitextensions/assets/483659/1f8ef9b6-dd90-44a7-acaa-1f664220c424)


## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

100% with local branch
![image](https://github.com/gitextensions/gitextensions/assets/483659/680d95d8-9ab5-40ef-9700-57de09fe2918)

100% no local branch (large white space looks weird)
![image](https://github.com/gitextensions/gitextensions/assets/483659/c9f4ba64-5398-4511-9dc2-c5218f57e638)

200% with local branch
![image](https://github.com/gitextensions/gitextensions/assets/483659/b3f37a3c-1b33-4642-98be-bb6fb374adbe)

200% :( no local branch. The form is **not** resizable!
![image](https://github.com/gitextensions/gitextensions/assets/483659/dcd636f0-9593-4459-9d11-5b450e88a91f)

### After

100% with local branch
![image](https://github.com/gitextensions/gitextensions/assets/483659/24256d0d-1ee7-4720-a637-7850f3408069)

100% no local branch
![image](https://github.com/gitextensions/gitextensions/assets/483659/8500e515-5b45-4555-a03b-8992dad093db)

200% with local branch
![image](https://github.com/gitextensions/gitextensions/assets/483659/b4ac083a-e7a5-419f-89ac-2f73e080afd9)

200% no local branch ❤️
![image](https://github.com/gitextensions/gitextensions/assets/483659/6f36cafb-93ab-4617-99b0-e3cf625b6bcc)

## Test methodology <!-- How did you ensure quality? -->

- Manually at 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-20T20:31:20Z,2024-04-20T21:10:59Z,2024-04-20T21:10:59Z,,master,fix-form-delete-remote-branch-scaling,1,7,8,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11693
11692,Fix author highlighting background color,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11691

## Proposed changes

- Fix bool logic

## Screenshots <!-- Remove this section if PR does not change UI -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/483659/c6a1ab7e-128a-4821-8a05-ff504aa74e1d)

## Test methodology <!-- How did you ensure quality? -->

- Manually

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-20T17:48:51Z,2024-04-20T20:58:34Z,2024-04-20T20:58:34Z,,master,fix-author-highlight,1,1,1,1,1,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11692
11690,Update ignore patterns of FormGitIgnore; Fix DPI issues,"## Proposed changes

_This is a bit of fruit-salad of commits, let me know if I should split this up, although they are somewhat related. It's far easier to review these commits one at a time._

- Fix DPI scaling problems with `FormGitIgnore` buttons
- There were ignore patterns for `.vs` and `_ReSharper` but not for `.idea` which is added by Rider so I've added that
	- Example text was not reflecting the default patterns used, at least to me it seems these should match
	- The change I am not too sure of is I've gone through all the translation files and updates these patterns by hand meticulously checking to not break anything 😅
- I've increased the default height of the form
- Enabled the vertical scrollbar for the `Examples` section as it doesn't fit by default
- I've noticed at random a comment by @mstv asking for a mnemonic so added that too :) https://github.com/gitextensions/gitextensions/pull/11661#pullrequestreview-2012080628

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

100%
![image](https://github.com/gitextensions/gitextensions/assets/483659/85cc81ae-0b9c-4430-84da-5c98de4ebc77)

200% 😢
![image](https://github.com/gitextensions/gitextensions/assets/483659/6d6431a5-d12e-45ec-893d-a3d762c9f55e)

### After

200%
![image](https://github.com/gitextensions/gitextensions/assets/483659/59a3f003-1719-4228-9089-975282978ea2)


## Test methodology <!-- How did you ensure quality? -->

- Manually at 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100% and 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-20T15:55:28Z,2024-04-22T05:30:58Z,2024-04-22T05:30:58Z,,master,form-gitignore-changes,8,82,58,10,4,2,"mstv, mstv, RussKie","COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11690
11688,Fix HEAD ref arrow scaling,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Scale HEAD ref's Arrow ""padding""

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/483659/809a6d3d-1f68-4f47-ae16-d58913e2aaac)

### After

![image](https://github.com/gitextensions/gitextensions/assets/483659/00599aa7-d8a3-422b-aef8-75b5f622fde6)

## Test methodology <!-- How did you ensure quality? -->

- Manually at 100%, 150% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100%, 150% and 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-18T16:04:45Z,2024-04-19T03:49:16Z,2024-04-19T03:49:16Z,,master,head-ref-arrow-scaling-fix,1,2,2,1,1,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11688
11687,perf(FileStatusList): Initialize ImageList data only once,"## Proposed changes / Background

While looking into `FormCommit` slow load times I've come across this inefficiency. Not only is it calculated twice per form open but it's done on every form open!

- Initialize `ImageList` with relevant data once and store the result in a static field

## Test methodology <!-- How did you ensure quality? -->

- Manually. In debug mode I think it shaved off `~40ms` for the first open and `~80ms` for subsequent opens

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-18T15:24:13Z,2024-04-19T18:25:20Z,2024-04-19T18:25:20Z,,master,init-imagelist-once,1,83,79,2,3,2,"mstv, RussKie, RussKie, mstv","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11687
11686,Scale PictureBox background images,"## Proposed changes

- At the moment only the foreground image of the `PictureBox` is scaled but in some cases the image is set as background image and that has not been scaled up until now

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

(notice the tiny ℹ️ icon below the file list)
![image](https://github.com/gitextensions/gitextensions/assets/483659/84aa2159-b557-4d54-bd23-8d5c02b1cff6)

### After

<!-- TODO -->
![image](https://github.com/gitextensions/gitextensions/assets/483659/14099a67-b9fd-4f2f-be47-1dd67794ae18)


## Test methodology <!-- How did you ensure quality? -->

- Manually at 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100% and 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-18T15:04:27Z,2024-04-19T04:11:35Z,2024-04-19T04:11:35Z,,master,dpi-scale-picturebox-background,1,5,0,1,1,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11686
11685,"Fix ""Modify the commit message"" button Dpi scaling","<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Fix button scaling

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/483659/7280ea60-26fa-4e06-ab28-077516e15624)

### After

![image](https://github.com/gitextensions/gitextensions/assets/483659/4c95e8d6-a64e-4e42-918a-d3699202e7dd)

## Test methodology <!-- How did you ensure quality? -->

- Manually with 100% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100% and 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-18T14:50:58Z,2024-04-19T04:12:33Z,2024-04-19T04:12:33Z,,master,fix-modify-commit-msg-btn-scaling,1,2,0,1,1,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11685
11684,Fix FormClone DPI issues,"## Proposed changes

- Set relevant `AutoSize` / `AutoScale` properties for form/controls to fix Dpi issues
- Adjust `groupBox1` size related props to make it look good in all DPIs

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Notice how radio buttons are shifted down before resizing the form. Also... does anyone know why the heck the text is selected in the combo-boxes upon resize?

https://github.com/gitextensions/gitextensions/assets/483659/be7297fa-cf3d-43ac-bb7c-6dc0ebc242a3

### After

![image](https://github.com/gitextensions/gitextensions/assets/483659/c7e81c70-678b-43fe-8281-4dc8ed6482c1)

## Test methodology <!-- How did you ensure quality? -->

- Manually at 100% 150% and 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100% 150% 200% Scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-18T14:45:15Z,2024-04-19T04:13:38Z,2024-04-19T04:13:38Z,,master,formclone-dpi-fixes,1,7,1,1,1,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11684
11680,fix finding merge base when unrelated history,"i.e there is no common ancestors.
""merge-base"" command exit code is 1
which is not an error but more a ""nothing found"".

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/d6963665-e97d-4776-bdd1-831ff7520a01)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/fc2759ea-7d41-4152-9254-31c1422e7ea7)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build e8497aecf376488273c1ffc6293f9ac3b6318814
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-11T09:20:49Z,2024-04-24T08:01:34Z,2024-04-24T08:01:34Z,,master,fix_merge_base,1,14,2,1,1,1,"gerhardol, pmiossec, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11680
11677,Difftastic as diff viewer,"Implements #11618 

## Proposed changes

Support Difftastic as an alternative difftool output in addition to the standard ""patch"" and recently added ""git-word-diff"" views.

The Difftastic output is mostly presented as-is without changes (except that there is an attempt to apply Git theme colors).
The info is parsed to show file line info and allow navigation.

The current ""Git word diff"" toggle is changed to a dropdown.

The hotkeys toggle on/off, back to patch if set. There could be a key just cycling instead.
In the way I use it, I normally want a way to get back to the normal ""patch"" view.

Icons are from Fugue and Diffstatic favicon. (viewed in 175%)

--
To learn more about Difftastic, see: https://github.com/Wilfred/difftastic/tree/master
Some documentation will need to be written for this.

To use this functionality, you need to install difftastic, just drop the binary somewhere.
Define a difftool named ""difftastic"", e.g. adding to ~/.gitconfig

Windows example:
```
[difftool ""difftastic""]                                           
        cmd = /c/cygwin/home/user/bin/difft.exe ""$LOCAL"" ""$REMOTE""
```

WSL
```
[difftool ""difftastic""]
        cmd = /c/cygwin/home/user/bin/difft.exe ""$LOCAL"" ""$REMOTE""
```

Note: Other external difftools could potentially be tried out in a similar way, if they are called *difftastic*, they will be displayed. The printout may not be parsed correctly, line numbers may not be displayed.

--
Then is it useful?

See the doc of what the structural diff gives. It is an alternative view to toggle when viewing patches, just like git-word-diff.
I have set single key hotkeys to quickly toggle when reviewing.

--
Limitations

The intention was first just to displaythe raw output, but it grow to integrate Difftastic as well as possible. It is not intended as a native view.

* Difftastic is not intended to be parsed, some situations are guesses. Worst case is though that the line numbers are not shown or displayed twice. It would be better if the output was parsable, could be changed in difftastic. The divider for side-by-side is occasionally green: ![image](https://github.com/gitextensions/gitextensions/assets/6248932/ae2264bf-ad74-48db-95d2-8e30126c155f)
* Header is the same as in the CLI: The Git temp file name
* Column size for side-by-side is guessed, cannot be adjusted
* When copying information, you copy the text as you see, also for side-by-side. I guess it
* GE theme colors (reverse video highlighting) is guessed from use of red, bold-red, green, bold-green which is not always correct. There is a PR for better display, see https://github.com/Wilfred/difftastic/pull/690#issuecomment-2030799275. Theming in Difftastic is maybe a later step.
* difftastic is considerably slower than git-diff and the output is not cached. Caching would require adding the environment variables configuring difftastic to be included (as column size is set when calling the command
* It would be nice to have staging of lines in the viewer. This requires access to a real patch so it is not trivial.
* Some file formats like CMake are not handled well, I prefer to force viewing them as text...
* Ignore whitespace would be a nice addition to difftastic, even if spaces are not adding to structural differences

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/6248932/b73e9e87-7bbe-47ba-b3b6-86208d2675af)

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/a81e2ed5-814c-4590-b1bc-a8640a8d7e8d)

Example output with alternative ""patch"" line and side-by-side. Imperfect coloring. (Still my preference.)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/8cc7a0ee-39a6-40d1-8ec1-b7679ec7d4aa)

Example with GE theme but no syntax
![image](https://github.com/gitextensions/gitextensions/assets/6248932/7e07be6c-e435-4878-b3e8-fe6d3f612331)

Example without GE theme
![image](https://github.com/gitextensions/gitextensions/assets/6248932/ba0b9215-6ee2-4149-90f7-4eb11f6fac08)

## Test methodology <!-- How did you ensure quality? -->

Test that involves parsing diffstatic output and setting line information.

## Test environment(s) <!-- Remove any that don't apply -->

diffstatic 0.57

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-10T19:10:13Z,2024-04-28T18:56:55Z,2024-04-28T18:56:55Z,release-notes-worthy,master,feature/i11618-difftastic,28,1132,161,2,16,5,"mstv, pmiossec, gerhardol, mstv, pmiossec, pmiossec, mstv, gerhardol, gerhardol, mstv, mstv, mstv, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11677
11675,feat(RevisionGrid): Column width adjustments,"## Proposed changes

- Enforce HashColumn max width to hash length
- Adjust DateColumn width to exact content when date is displayed in ""absolute date"" (because the length is constant)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Date column auto width

* Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/24791c26-c69d-4a15-8d17-7f06ccc0a535)

* After (no more lost space)
![image](https://github.com/gitextensions/gitextensions/assets/460196/74e61da0-d2cd-469f-996f-3a501d526a30)

### Hash column max width enforced to hash length

* Before (column could take a lot too much width):
![hash_column_width_not_enforced](https://github.com/gitextensions/gitextensions/assets/460196/9c782b6d-7e4c-4587-9cef-063045bac798)

* After (column took only required width to display whole hash):
![hash_column_width_enforced](https://github.com/gitextensions/gitextensions/assets/460196/ac0e5e6c-c9a0-4aba-b3b6-8e0e5127716b)



## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build d0b8ca8a5c59d1086b7e19a38ca0b94ac25c0cd5
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-10T08:37:35Z,2024-04-11T06:50:05Z,2024-04-11T06:50:05Z,,master,column_width_adjustments,2,14,2,2,2,1,"gerhardol, mstv, mstv","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11675
11674,Always use Git coloring for word-diff,"## Proposed changes

as well as range-diff and git-grep.

Use of Git coloring of command output was added in #11590. The patch view (default) is configurable, setting to keep the current GE coloring.
git word-diff requires Git coloring and is not enabled if not Git coloring is enabled.

This removes the GE coloring for some commands ans the GE coloring is very limited and is adding complexity.
* git-word-diff (#11590)
* git-grep (#11359)
* git-range-diff (very limited GE coloring).

It is possible that a user want to keep the GE color engine for patches but use it for these commands.

Related to #11673 (and is a merge conflict), ther is a rebased commit in tmp/git-coloring but I want this reviewed in parallel.

## Screenshots <!-- Remove this section if PR does not change UI -->

No changes in the default configuration,  the first image is for without GE coloring.

git word-diff, only when git coloring is activated

![image](https://github.com/gitextensions/gitextensions/assets/6248932/76e2d382-358a-4380-920f-c7e51f42dfcb)

git-grep with regex (guess for length is incorrect)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/b2db1255-7cfd-42d4-a5b3-c33eae78c921)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/300bc177-974a-4608-b4c4-3586d572a47a)

range-diff

![image](https://github.com/gitextensions/gitextensions/assets/6248932/51cae703-b81e-4697-ad71-c7fce210ac25)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/489d89a5-8a35-4d8f-b117-c5abcfadc29c)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-07T12:56:51Z,2024-04-10T17:41:00Z,2024-04-10T17:41:00Z,,master,tmp/always-git-coloring,6,84,167,1,0,1,"mstv, gerhardol, gerhardol, gerhardol, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11674
11673,"Display ""mixed"" diff as red/green","Modification of #11628, approved but not yet merged.
First command is squash and rebase of the commit, not really to be reviewed

If this is approved, I plan to squash together wit the changes in #11628 as one commit.

## Proposed changes

Modification of the presentation in #11628 of GitWordDiff

- Show line number for removed, even if the info is unreliable
- Instead of the blueish line marker show removed line number (if changes detected) in red and new with green. Similar for when changes are only seen on one side, the other is then not colored. 

## Screenshots <!-- Remove this section if PR does not change UI -->

See #11628 also for the change in this PR

## Test methodology <!-- How did you ensure quality? -->

Tests are updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-06T21:50:47Z,2024-04-10T16:30:29Z,2024-04-10T16:30:29Z,,master,feature/word-diff-navigation-2,16,288,206,2,1,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11673
11672,fix(FormResetAnotherBranch): Do not open ComboBox drop down on Enter,"Fixes #11671
which is a regression in #11656

## Proposed changes

- Also ignore `Enter` in `Branches_KeyUp`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-04-06T10:48:57Z,2024-04-07T12:02:29Z,2024-04-07T12:02:29Z,,master,fix/i11671,1,1,1,1,3,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11672
11665,feat(FormCommit): Add Conventional Commit message support,"accessible easily with `Ctrl+T` shortcut
Then first letter of keyword (like 'r' for 'refactor') allows quick selection
then followed by pressing ENTER key.

See https://www.conventionalcommits.org/

and some others useful git commit footers...

Contribute to #11662
Fixes #5903 (See https://github.com/gitextensions/gitextensions/issues/5903#issuecomment-1837623364 )

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/f3f06747-7e2e-4a0e-ac3f-1ad6ed8eb832)

<!-- [](![image](https://github.com/gitextensions/gitextensions/assets/460196/eb0b37d5-e8b8-4a62-beb5-e40fa6d63425)) -->

![conventional_commits](https://github.com/gitextensions/gitextensions/assets/460196/81064678-9976-4c01-b754-26c0a1dbfcaa)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 9c00de36289e762d91125edea26c9fcc95b866e6 (Dirty)
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-04-02T08:24:39Z,2024-04-06T13:48:48Z,2024-04-06T13:48:48Z,,master,conventional_commits,4,255,4,1,2,2,"drewnoakes, pmiossec, pmiossec, mstv, pmiossec, drewnoakes, drewnoakes, pmiossec, pmiossec, drewnoakes, pmiossec, pmiossec, mstv, pmiossec, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11665
11661,DeleteRemote: Add an option to delete a local tracking branch," at the same time than a remote

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Part of #11640 ( Following discussion)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/5d5c4db6-4972-46e2-8549-ae651df94b5a)

<!-- ![image](https://github.com/gitextensions/gitextensions/assets/460196/ab8f5a86-06a8-4435-b8ee-0f88ea5cb9de) -->

When remote deleted successfully, local branch delete form opened automatically with good branch(es) selected:
![delete_local_with_remote](https://github.com/gitextensions/gitextensions/assets/460196/15e9c959-2b68-4284-b1e5-a81afe657707)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build fe059f5db67923fbb93efe2115223b97129e161d (Dirty)
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-28T12:54:14Z,2024-04-19T04:15:48Z,2024-04-19T04:15:48Z,,master,delete_local_branch_when_delete_remote,5,130,34,1,4,4,"RussKie, gerhardol, RussKie, RussKie, RussKie, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11661
11660,Small refactoring or adjustments,"## Proposed changes

(better reviewed commit by commit)

- FormResolveConflicts: don't reinit merge tools after each file conflict resolved
- FormClone: Add Browse icons
- Menus: Add missing '...' to menu entries that will open a popup
- perf(LeftPanel): cache forecolor used for invisible refs
- refactor(GitPluginSettingsContainer): simplify logic
    - by putting the logic of backward compatibility when the container is created instead of every times a value is read
- perf(GitHub3Plugin): do less things
    - instantiate GitHubRemoteParser only once (instead for each remote parsed)
    - return an IEnumerable so that we could use a `.Any()` to stop earlier
- Hash column: remove ellipses

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

Browse icons added:

![image](https://github.com/gitextensions/gitextensions/assets/460196/ae2db307-7ac0-4333-8be3-5921ad93fee3)

Example of ""..."" added:

![image](https://github.com/gitextensions/gitextensions/assets/460196/310576a8-0e7e-41c2-9d66-97396784de25)

Hash columns: Remove ""...""  and reduce size (as user need room to display subject or diff, could still have it in tooltip and is not really interested by this information) :
![image](https://github.com/gitextensions/gitextensions/assets/460196/d2062268-192e-4ae2-b5e1-d2fbd0c77423)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 08ed269e452d6b05e406a6182c5cd496c0bdf363
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-28T11:34:02Z,2024-03-29T09:38:16Z,2024-03-29T09:38:16Z,,master,small_stuffs,11,71,98,7,0,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11660
11659,FormResolveConflicts: Avoid fragmented translation strings,"fixes #11651

Introduced by 3a7e5d8bc16c2ba2f65eac3867e64ad89b9002e8 (#11619)


## Screenshots <!-- Remove this section if PR does not change UI -->

No changes for english version.

## Test methodology <!-- How did you ensure quality? -->

- Build and run

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 9c707d516b0fc5e42046550bba87cb0b2e49a1dd
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-28T09:06:10Z,2024-03-28T10:03:31Z,2024-03-28T10:03:31Z,,master,fix_resolve_conflicts_translations,2,32,17,1,1,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11659
11656,Fixup FormResetAnotherBranch ComboBox handling,"Fixes #11644

## Proposed changes

- Do not open dropdown on special keys (`Alt` = `Menu` and `Escape`) 
- Preserve text and selection
- Open dropdown in `KeyUp` instead of `KeyDown`
- Fixup `TabIndex` and `TabStop` in order to make mnemonics work

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-03-24T20:58:27Z,2024-03-28T16:35:52Z,2024-03-28T16:35:52Z,,master,fix/i11644_reset_other,3,45,37,2,8,0,"berrs, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11656
11655,Fix theme migration bug,"Fixes #11629

There is a problem in SettingsSource.GetColor. If the settings do not contain a value for the requested color, GetColor will return Color.Empty rather than the provided default color (because of how ColorTranslator.FromHtml handles empty input).

This causes the theme migration to think the colors have been updated from the default to a very goth all-black.

## Proposed changes

Fix SettingsSource.GetColor to return the default color instead of Color.Empty

## Test methodology

- Added unit test for SettingsSource.GetColor

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 805cf4832e6e2ad5719c04bdc07607a87be4c7f5 (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.3
- DPI 144dpi (150% scaling)
- Portable: False

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-24T13:59:24Z,2024-03-25T05:59:27Z,2024-03-25T05:59:27Z,:pen: status: cla signed,master,fix-11629,3,30,6,4,1,2,"mstv, berrs, mstv, RussKie","COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11655
11654,Improve hotkey display and handling,"Follow-up to #11620

## Proposed changes

- Display shortcuts in tooltips of FileViewer toolbar
- Fixup xmldoc of `ShortcutHelper`
- Change default hotkey for `ShowGitWordColoring` to `Ctrl+D`
  - less modifiers
  - works from FileStatusList
  - similar to ""Show entire file (Ctrl+E)""
- Remove pointless call to `DiffFiles.ProcessHotkey` because FileStatusList does not support hotkeys at all
- Add `GitExtensionsControl.GetShortcutKeyDisplayString`
- Replace `KeysExtensions.UpdateTooltipWithShortcut` with direct call of `DisplayWithSuffixUpdater.UpdateSuffix`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/36601201/182caf1f-dced-44db-b8a3-14226669b9fc)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/b7ec5de0-91f4-449a-8079-0eb02a76a0a7)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Please do not squash!

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-03-23T18:42:21Z,2024-03-24T13:43:07Z,2024-03-24T13:43:07Z,,master,feature/hotkey_in_diff_tooltip,13,56,82,5,0,1,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11654
11653,Set ForceDesignerDpiUnaware prop for the GitUI project,"## Proposed changes

- Enable `ForceDesignerDpiUnaware` for the `GitUI` project to prevents sizes getting recalculated based on how many pixels controls take when viewed with non-100% Dpi

The link from the informational ""gold bar"" in VS leads to: https://aka.ms/winforms/designer/unaware-mode which is a redirect to https://github.com/dotnet/winforms/blob/main/docs/designer/designer-high-dpi-mode.md

Prevents this upon save:
![image](https://github.com/gitextensions/gitextensions/assets/483659/e1f9893a-7e50-40d5-b0d5-7d16718c1040)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/483659/ec15023c-b5aa-4958-9ea3-191411aa5661)

### After

![image](https://github.com/gitextensions/gitextensions/assets/483659/382af4b0-7ee4-4fe9-a200-8276fd6d1be0)

## Test methodology <!-- How did you ensure quality? -->

- Manually

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11 200% Dpi
- Visual Studio 2022

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-23T12:50:39Z,2024-03-24T03:53:23Z,2024-03-24T03:53:23Z,,master,designer-dpi-unaware,1,2,0,1,2,2,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11653
11652,Improve stability of show stashes test,"Fixes https://ci.appveyor.com/project/gitextensions/gitextensions/builds/49461079#L339

## Proposed changes

- There is no need to invalidate RevisionGridControl
- Just be more patient until stashes are loaded

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-03-22T15:22:20Z,2024-03-25T19:14:04Z,2024-03-25T19:14:03Z,,master,fix/show_stashes_test,1,5,13,1,0,1,"gerhardol, mstv, RussKie, RussKie, mstv","APPROVED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11652
11650,Fixup dir-diff,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11627

## Proposed changes

- Call OpenWithDifftool with properly named arguments
  in order to avoid passing `firstRevision` as `oldName` 

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-03-21T21:37:21Z,2024-03-22T10:43:43Z,2024-03-22T10:43:43Z,,master,fix/i11627_dir_diff,1,1,1,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11650
11649,Recent repos adjustments,"## Proposed changes

- Sort shortening strategy in a logical way (from longer to shorter)
- Better display of ""replace middle part with dots"" paths when repos are in user folder
- Some refactorings

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/aa67b3e0-fc28-48d9-a488-ca9dec5e4694)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/b0da4cdd-cd60-470c-84d7-244d4fe98b44)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-21T15:38:32Z,2024-03-28T10:12:03Z,2024-03-28T10:12:03Z,,master,recent_repos_adjutments,9,318,179,8,11,2,"mstv, RussKie, RussKie, RussKie, RussKie, RussKie, pmiossec, RussKie, RussKie, RussKie, pmiossec, RussKie, pmiossec","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11649
11647,Turn on DoubleBuffered mode for the NativeTreeView control to prevent flickering,"## Proposed changes

- Turn on `DoubleBuffered` in the `NativeTreeView` constructor to mitigate tree flicker during update

_I've also fixed some nullability and warnings/style issues around the code that I've explored while fixing this_

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
Video is slowed down 3x, notice how the repo objects tree is flickering when different commits are selected

https://github.com/gitextensions/gitextensions/assets/483659/166d33d2-d219-43b5-b7bb-76b2c38d155c

### After

https://github.com/gitextensions/gitextensions/assets/483659/44f56a43-5731-4e7e-9863-5b9c23633394

## Test methodology <!-- How did you ensure quality? -->

- Manually over several months of GE usage

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 200% Dpi

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-19T21:21:36Z,2024-03-23T12:43:10Z,2024-03-23T12:43:10Z,,master,fix-branches-tree-flicker,3,27,14,4,5,2,"mstv, mdonatas, mdonatas, mdonatas, mstv, mstv, RussKie, RussKie, mdonatas, mdonatas, RussKie, mdonatas, mstv, gerhardol, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11647
11646,Restore splitter positions early in the layout process for FormCommit,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Splitters in `FormCommit` are restored after layout is already done causing quite some visible re-drawing
- Since all controls are ready early in the layout cycle, restore splitters before performing initial form layout
- Remove the **splitter-drift** hack as it became unnecessary and the tests caught that! (haven't looked at who wrote these tests, but my hat is off to you! 🙇)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
Notice the unstaged/staged controls getting resized during the loading of the form (video is slowed down 3x)

https://github.com/gitextensions/gitextensions/assets/483659/245e63e7-7eb3-479e-8f81-0579fc87ae4b

### After

https://github.com/gitextensions/gitextensions/assets/483659/b069b8d5-da8c-4d4c-991d-a93b5c869745

## Test methodology <!-- How did you ensure quality? -->

- Manually for several days

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- DPI 200%

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-19T20:39:42Z,2024-03-24T03:47:12Z,2024-03-24T03:47:12Z,,master,improve-splitter-onload-formcommit,3,26,8,4,4,5,"mstv, mstv, mstv, pmiossec, mdonatas, mdonatas, pmiossec, pmiossec, pmiossec, RussKie, RussKie","DISMISSED, COMMENTED, APPROVED, CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11646
11641,Parse patch header with escape sequences,"Fixes #11630

## Proposed changes

Add tests for escape sequences.

Add check for additional escape sequences in Debug builds, to monitor changes in Git.

Removed unused property IsCombinedDiff

## Test methodology <!-- How did you ensure quality? -->

Added tests

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-16T19:43:26Z,2024-03-27T21:03:52Z,2024-03-27T21:03:52Z,,master,feature/i11630-parse-color-patch-header,7,444,104,4,1,1,"RussKie, mstv, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, mstv, mstv, gerhardol, mstv, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11641
11638,Ignore OperationCanceledException from ProcessCmdKey,"Fixes #11636

## Proposed changes

- Ignore `OperationCanceledException` and `TaskCanceledException` in the `BugReportInvoker`
- Just trace them in debug builds

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

BugReporter

### After

nothing

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-03-13T21:04:48Z,2024-03-15T22:38:55Z,2024-03-15T22:38:55Z,,master,fix/11636_operationcanceled,1,7,0,2,0,0,"gerhardol, RussKie, mstv, gerhardol, RussKie","APPROVED, APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11638
11637,Support F# files,"

Add support F# files to the statistics plugin


## Screenshots 

### Before

![image](https://github.com/gitextensions/gitextensions/assets/2669927/7c766ba3-7d5f-4f75-a974-1a53c01d4aaf)


### After

![image](https://github.com/gitextensions/gitextensions/assets/2669927/703d1395-23f8-4fd4-aee1-e5b5ecd28947)


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-13T20:43:10Z,2024-03-14T05:59:57Z,2024-03-14T05:59:57Z,"area: plugins, :pen: status: cla signed",master,feature/support_fs_files,2,2,2,1,2,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11637
11628,git-word-diff navigation and line index marking,"https://github.com/gitextensions/gitextensions/pull/11590#pullrequestreview-1912934718
Depends on #11350 - could be refactored to be merged first if that PR is delayed

## Proposed changes

Assume added, removed and other (mixed) lines for
git-word-diff from the detected coloring.
This is a heuristic that covers at least the basic usage.

Refactor next/previous section to use the ""line analyzis"".
This simplifies the implementation, special handlig for grep and
range-diff can be removed.

The left/right line numbering was changed to right only.
This gives slightly better behavior when switching back/forward to normal patch view
and is less confusing (but still just an indication, need to be documented).

The behavior for git-range-diff is aligned with other diff presentations
as next/previous goes to next header block instead of next header as
before.
range-diff also show line numbers.

--
Missing:
- #11350 
- Test for the git-word-diff line analyzer
- Documentation of the limitations (also for #11590, #11350)
- ""Mixed"" does not have a theme color, only hardcoded.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

No added/mixed in the line number control
![image](https://github.com/gitextensions/gitextensions/assets/6248932/8f63ebab-e740-49f8-aab4-e7bdd7752ac0)


### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/93b58b68-cf56-4e1d-97b1-9a9f197a44b0)

### After in #11673

![image](https://github.com/gitextensions/gitextensions/assets/6248932/98267cf7-217c-4f1c-9908-47eca2be4d98)

## Test methodology <!-- How did you ensure quality? -->

Tests were updated
Search next/previous is not tested currently, this mostly eliminates the need.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-10T22:48:13Z,2024-04-10T16:48:21Z,,,master,feature/word-diff-navigation,16,275,209,4,6,1,"mstv, gerhardol, gerhardol, gerhardol, mstv, RussKie, RussKie, gerhardol, mstv, gerhardol, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11628
11626,Combined diff error presentation,"## Proposed changes

When combined diff or range-diff Git command fails, display the Git error message in the viewer, as for most other diff commands since #11535.

For combined diffs, ""Uninteresting diff hunks are omitted."" were no longer displayed.

Follow up to #11535, not fully handled.
""Uninteresting diff hunks"" is a minor regression.

This is slightly refactored in #11590 , merge conflict and viewer has ""combined"" knowledge.
See tmp/git-coloring a53943ebed2e0263dd70a05d8eee0b7715a7a1b2

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Empty viewer

### After

Few merge commits in GE repo (good thing), an example from mstv's test branch that also have diffs with changes in 9da998f1439426a73034bc4ffed96dd691f0336b

![image](https://github.com/gitextensions/gitextensions/assets/6248932/a6918b84-7494-468a-afe0-ad811b184233)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-10T09:58:35Z,2024-03-10T20:46:01Z,2024-03-10T20:46:01Z,,master,feature/p11535-combined-diff-no-info,2,19,6,1,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11626
11625,Add TargetPlatform property,"Add new `TargetPlatform` property, to control the specific platform for the GE installer (.msi) package.

Currently the GE installer package is hard-coded to be built for the `x86` platform, with `C:\Program Files (x86)` as the default installation folder.  This makes sense to install it on the `x86` (i.e. 32-bit) Windows platform, but a bit weird on `x64` (i.e. 64-bit) Windows platform (as discussed in #11554), and really feels weird when building an `Arm64-specific` installer package for Windows on Arm64 platform.

This commit defines a new `TargetPlatform` property which can take the following values: `x64` (default), `x86`, or `arm64` (must be lower-case values, as required by Wix). This property is passed on to the `Platform` parameter for WiX to create relevant installer package specific to that platform. Like any other property, this `TargetPlatform` property can be specified on the command line to build a platform-specific installer, rather than using the default `x64` platform value.

To build GE, the current build command series still work as before:
```
dotnet build -c Release
dotnet build -c Release scripts\native.proj
dotnet publish -c Release
```
and the following build artifacts are produced in the `artifacts\Release\publish` folder for the `x64` platform; for example:
```
GitExtensions-x64-33.33.33.0-0e12afbf1.msi
GitExtensions-Portable-x64-33.33.33.0-0e12afbf1.zip
```
The above `x64` installer (.msi) package will default to `C:\Program Files` as the installation folder, and will refuse to install on `x86` (i.e. 32-bit) Windows platform. It can be installed on Windows on Arm64 platform, as this platform contains translation layer for running `x64` program.

If the `TargetPlatform=x86` property value is specified in the `publish` command, like:
```
dotnet publish -c Release /p:TargetPlatform=x86
```
then the following files are produced:
```
GitExtensions-x86-33.33.33.0-0e12afbf1.msi
GitExtensions-Portable-x86-33.33.33.0-0e12afbf1.zip
```
The above `x86` installer (.msi) package will default to `C:\Program Files (x86)` as the installation folder, and can install on `x86` (i.e. 32-bit) Windows, `x64` Windows and Windows on Arm64 platforms.

Similarly, to produce an `Arm64-specific` installer package, the following build commands should be executed on a Windows on Arm64 box:
```
dotnet build -c Release
dotnet build -c Release scripts\native.proj /p:TargetPlatform=arm64
dotnet publish -c Release /p:TargetPlatform=arm64
```
and the following files will be produced for Arm64:
```
GitExtensions-arm64-33.33.33.0-0e12afbf1.msi
GitExtensions-Portable-arm64-33.33.33.0-0e12afbf1.zip
```
The above `arm64` installer (.msi) package will default to `C:\Program Files` as the installation folder, and will refuse to install on any Windows platform except the Windows on Arm64 platform.

Fixes #9990
Fixes #11554


## Test methodology

- default build GE installer for `x64` platform, and check that it installs to the default `C:\Program Files` folder and works properly on x64 and/or Arm64 Windows platforms. It should refuse to install on an x86 (i.e. 32-bit) Windows platform (but none are available to test.)
- build of `x86` platform GE installer, by specifying the `TargetPlatform=x86` property on the `publish` command, and check that it installs to the default `C:\Program Files (x86)` folder and works properly on x64 and/or Arm64 Windows platforms. It should work on an x86 (i.e. 32-bit) Windows platform too, but none are available to test.
- build GE installer for `Arm64` platform, by specifying the `TargetPlatform=arm64` property on the `publish` command, and check that it installs to the default `C:\Program Files` folder and works properly on Arm64 Windows platform. Check that it should refuse to install on `x64` Windows platform. It should refuse to install on an x86 (i.e. 32-bit) Windows platform too, but none are available to test.

## Test environment(s)

- Windows 10 & 11 on x64 platform
- Windows 11 on Arm64 platform

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-09T23:48:14Z,2024-06-23T10:18:03Z,2024-06-23T10:18:03Z,release-notes-worthy,master,add_target_platform_property,4,22,15,1,2,1,"RussKie, chirontt, chirontt, chirontt, RussKie, RussKie, RussKie, chirontt, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11625
11624,Fixup migration of color settings,"## Proposed changes

Fixup `MigrateColorSettings` by creating the user-themes directory in `ThemeRepository.Save`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

exception on every start

### After

`MigrateColorSettings` successfully executed once and not called any longer

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-03-08T23:49:45Z,2024-03-10T19:49:01Z,2024-03-10T19:49:01Z,,master,fix/migratesolorsettings,1,4,1,1,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11624
11623,Add remote a little more smarter completion,"Improve over https://github.com/gitextensions/gitextensions/pull/11559#discussion_r1474581069 and https://github.com/gitextensions/gitextensions/pull/11559#discussion_r1475190622

## Proposed changes

* A little more clever remote url completion (instead of relying on history of url remote that we know will **never** contains the desired url ): Use existing remotes to propose urls that has a lot higher probability to be suited.
* Do the opposite: extract remote name from URL if Url entered first.

Also:
* convert git hosting regex to compiled regex
* add a new more generic git hosting regex that cover more providers (but not Azure DevOps one 😞 because the format is different and I don't know how to parse it)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

When entering the url field, nothing happens and opening the dropdown just give an history of remotes:

![new_remote](https://github.com/gitextensions/gitextensions/assets/460196/b3a4f9cc-203d-4ede-aa94-95bb9103b400)

### After

Generate potential urls and put it at the top of a dropdown list (and auto select the 1st one):
![new_remote_smart](https://github.com/gitextensions/gitextensions/assets/460196/15eb913f-1990-41ac-b0dc-9209c8c7c97b)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 884d07e3558ea9b33e6a96f06fd60598b475f07b
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase**  merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-07T12:57:07Z,2024-03-15T07:58:10Z,2024-03-15T07:58:10Z,,master,add_remote_clever_completion,9,232,47,4,1,3,"gerhardol, RussKie, RussKie, RussKie, pmiossec, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11623
11622,refactor: clean usage of delimiters,"## Proposed changes

- No behavior change, just refactoring.

## Test methodology <!-- How did you ensure quality? -->

- Unit tests & manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-07T11:28:26Z,2024-03-12T07:44:10Z,2024-03-12T07:44:10Z,,master,refactor_clean_delimiters,18,55,49,1,0,2,"gerhardol, RussKie, mstv, pmiossec, mstv","APPROVED, APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11622
11621,Improve performance of revision grid,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Improvement over #11441

## Proposed changes

- RevisionGridControl: load revisions by batch (e.g. 1s gain over 2.5s when loading Git repo)
- RevisionReader: cache parent commit hash parsed (less memory usage: between 5 and 10MB on GE repo)
- RevisionGrid: Avoid looking at stash for each revision when possible (no stashes or all already displayed)
- RevisionDataGridView: cache resources and don't calculate same thing twice
- RevisionDataGridView: cache graphic resources between all the cells of the same row
- RevisionGrid): halve the number of short hash calculated on each display

## Screenshots <!-- Remove this section if PR does not change UI -->

no changes

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-07T11:18:45Z,2024-04-10T07:43:56Z,2024-04-10T07:43:56Z,,master,perf_revision_grid,7,299,145,10,3,3,"gerhardol, mstv, mstv, mstv, mstv, mstv, pmiossec, pmiossec, pmiossec, pmiossec, mstv, mstv, pmiossec, pmiossec, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11621
11620,Improve shortcuts display,"## Proposed changes

- Display keyboard shortcuts where missing
- Display keyboard shortcuts in tooltips for better discoverability

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

(no shortcuts)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/93499310-426e-49d5-ad11-7f915e65410f)

![image](https://github.com/gitextensions/gitextensions/assets/460196/f3b52446-9ef8-4d90-bb2f-19c3f1711f1a)

![image](https://github.com/gitextensions/gitextensions/assets/460196/84f62749-1761-4bb3-8b7a-8de55998befa)

Shortcut in tooltip for toolbar buttons (not exhaustive):

![image](https://github.com/gitextensions/gitextensions/assets/460196/253a2df8-bb17-45de-9018-2f43d8b3c47c)
![image](https://github.com/gitextensions/gitextensions/assets/460196/0294882b-5921-4161-9520-49214156fc13)
![image](https://github.com/gitextensions/gitextensions/assets/460196/64cfa4f1-f4a7-476f-83ca-adb6de9a5806)
![image](https://github.com/gitextensions/gitextensions/assets/460196/90e85599-d4ff-42f9-abc3-0fe409ed6355)
![image](https://github.com/gitextensions/gitextensions/assets/460196/281c9c15-9455-40d2-a21c-619f6db4ce63)


even user defined scripts:

![image](https://github.com/gitextensions/gitextensions/assets/460196/ac8f2c69-c53f-40b9-9926-864ed103ab4e)

Little side effect (but I think it is not so annoying ), shortcut is displayed in toolbar icon selection menu:

![image](https://github.com/gitextensions/gitextensions/assets/460196/58aeeddc-817d-4397-9506-e01b897ae678)
 

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash or rebase merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-07T10:43:07Z,2024-03-14T08:33:26Z,2024-03-14T08:33:26Z,,master,improve_shortcuts_display,25,182,111,4,1,3,"gerhardol, mstv, pmiossec, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11620
11619,FormResolveConflicts: Improve help when merging/rebasing,"## Proposed changes

When conflicts during merge/rebase, it is not always easy to what is ""local"" or ""remote"" ( See [here](https://jvns.ca/blog/2023/11/01/confusing-git-terminology/#ours-and-theirs-while-merging-or-rebasing) and [here](https://nitaym.github.io/ourstheirs/) )


- Add also terms ""current""/""incoming"" (that I found a little more explicit) and that user could be used to see if merging with ""vscode""
- Add more explicit help as tooltips

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

* Merge:

![image](https://github.com/gitextensions/gitextensions/assets/460196/8b8b1b32-8e7e-404b-9636-c187b49bc1c5)

* Rebase:

![image](https://github.com/gitextensions/gitextensions/assets/460196/6d91dc51-d179-44a2-b9bd-d216e50ef58f)


### After

* Merge:

![image](https://github.com/gitextensions/gitextensions/assets/460196/caee38bf-32d5-4b09-82a2-d15f76e1e012)

* Rebase:

![image](https://github.com/gitextensions/gitextensions/assets/460196/edaa6ff2-739e-4917-afb2-5210daec1538)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 199b9935fa10cea107ffcff6d2d14c54d85cc2f4
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-07T09:07:37Z,2024-03-21T08:48:26Z,2024-03-21T08:48:26Z,,master,conflicts_little_help,8,181,109,4,5,1,"RussKie, mstv, pmiossec, mstv, mstv, pmiossec, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11619
11615,"Fix FormCommit ""splitRight"" moving down on each FormCommit open","<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Take Dpi scaling into account when adjusting `FormCommit` horizontal splitter position

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
https://github.com/gitextensions/gitextensions/assets/483659/19173dfc-9d30-40af-93f8-4b5022f0b627

### After

Sorry, didn't record after, but the splitter doesn't move down with this fix.

## Test methodology <!-- How did you ensure quality? -->

- Manually with 200% scaling

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-03-03T15:06:36Z,2024-03-04T18:40:16Z,2024-03-04T18:40:16Z,,master,fix-commit-splitter-drift,1,1,1,1,2,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11615
11612,Fix FormRebase DPI issues,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11606

## Proposed changes

- Use `Font` scaling. Tests with .net framework 4.7.2, .net6 and .net8 have shown that `Dpi` scaling mode doesn't work properly for controls which are placed in container controls. This [SO question](https://stackoverflow.com/questions/22735174/how-to-write-winforms-code-that-auto-scales-to-system-font-and-dpi-settings) has helped a lot.
- Adjust `Commit hash` column to fit the header text without wrapping
- Fix Help image scaling.. And as for `FormMerge` it was sad to find out that even the text above the image turns out has always been clipped

## Screenshots

### Before

100% scaling
![FormRebase-100p-master](https://github.com/gitextensions/gitextensions/assets/483659/e6e0f75d-0813-4ce2-854e-21fafe21681d)

200% scaling
![FormRebase-200p-master](https://github.com/gitextensions/gitextensions/assets/483659/60877ff0-2bcd-44aa-8bc9-a1c30042f124)


### After
100% scaling
![FormRebase-100p-fixed](https://github.com/gitextensions/gitextensions/assets/483659/a8f33fe1-0a1d-4952-9bca-14bb76282c34)

200% scaling
![FormRebase-200p-fixed](https://github.com/gitextensions/gitextensions/assets/483659/470ffb13-6c3e-486b-a472-1453aca08b46)



## Test methodology <!-- How did you ensure quality? -->

- Checked `FormRebase` and `FormMerge` manually at 100% 150% and 200% scaling

#### FormMerge

### Before
200% scaling
![FormMerge-200p-master](https://github.com/gitextensions/gitextensions/assets/483659/ed662c7d-3558-4286-a441-42b0b2be42a7)

### After
200% scaling
![FormMerge-200p-fixed](https://github.com/gitextensions/gitextensions/assets/483659/5fc006be-d676-440a-928f-9c013e000492)


## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- 100% 150% and 200% scaling

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-29T08:35:26Z,2024-03-02T23:35:40Z,2024-03-02T23:35:40Z,,master,form-rebase-dpi,4,50,33,9,10,3,"mstv, mstv, RussKie","COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11612
11611,Improve flaky LeftPanelTests.Submodules,"Should avoid `OperationCanceledException` as https://ci.appveyor.com/project/gitextensions/gitextensions/builds/49289921#L341

## Proposed changes

- Just wait for finished submodule update triggered by left panel
- Correctly dispose the per-test provider instance

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- run the test (on AppVeyor)

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-02-28T23:38:12Z,2024-02-29T22:15:20Z,2024-02-29T22:15:20Z,,master,fix/left_panel_tests,1,8,8,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11611
11610,fix(CommitPickerSmallControl): fix commit count crash,"when nothing is checked out

Fixes #11609

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/d571bee4-5e39-480f-a580-f5fcbf3d3e72)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/2bb0521f-ec46-4989-8318-74ff6daec7a7)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build a6bfcb6dcff5447d313dab39dcab628fcb86b6a5
- Git 2.44.0.windows.1
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-28T09:28:36Z,2024-02-28T10:34:10Z,2024-02-28T10:34:10Z,,master,fix_commit_count_crash,1,6,2,1,1,1,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11610
11608,SubmoduleInfo: Do not quote empty ref,"## Proposed changes

Commit could be empty for directories not yet added or removed submodule directories.

Regression in #11570 b82e637d37a3a467f083c0b320b05a7b74171e94
(to handle refs with characters that the shell may change).

I reviewed the other changes, did not see any more potential issues.

## Test methodology <!-- How did you ensure quality? -->

Manual 

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-27T23:19:05Z,2024-02-28T20:39:48Z,2024-02-28T20:39:48Z,,master,feature/quote-refs,1,1,1,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11608
11605,RevDiff Find file clarification,"## Proposed changes

Find file (in list) was just displayed as ""Find"" with the preview icon, mostly related to searching.
(Find file is a variation to the filter.)
(To search the files in the commit Find in the FileViewer must be used, by default Ctrl-F will work too).
Similar change in Compare form.

Added the preview (magnifier) icon to FileViewer find.

## Screenshots <!-- Remove this section if PR does not change UI -->

RevDiff
![image](https://github.com/gitextensions/gitextensions/assets/6248932/34760c9e-87b7-4001-8c2c-13442fd77a4b) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/c1029097-ac43-42e9-a35c-5e6b5f1c67de)

Compare
![image](https://github.com/gitextensions/gitextensions/assets/6248932/03edad3a-f84e-4bd2-9fc8-1628a64db93b) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/87db2509-8ea5-4c90-a6ed-60b31c560fee)

FileViewer
(left is master, there has been other cleanups recently.)
![image](https://github.com/gitextensions/gitextensions/assets/6248932/3b599b57-84cb-47ff-9576-0bca3dd31644)  ![image](https://github.com/gitextensions/gitextensions/assets/6248932/d30db686-d88d-44b9-bb4a-80dd83712f8b)

FileTree
![image](https://github.com/gitextensions/gitextensions/assets/6248932/d7b4ef97-87d4-45dc-8cba-8e66ff773d65) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/e8bf0b08-21da-4ee7-962b-2fef3df65f4d)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/f6249d88-73a1-420c-b101-8e312ee18054)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-24T15:21:21Z,2024-02-28T20:43:44Z,2024-02-28T20:43:44Z,,master,feature/diff-find-file,5,54,56,2,4,2,"mstv, gerhardol, gerhardol, mstv, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11605
11601,OnRevisionRead: Handle OperationCanceledException,"Fixes https://ci.appveyor.com/project/gitextensions/gitextensions/builds/49243493#L234

## Proposed changes

- Explicitely handle `OperationCanceledException` in `OnRevisionRead` because `System.Reactive.Subjects.Subject.Subscribe` does not forward it to `onError` for whatever reason

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-22T20:34:01Z,2024-02-24T12:03:48Z,2024-02-24T12:03:48Z,,master,fix/observable_cancellation,1,10,3,1,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11601
11596,Fix avatars not loading behind a corporate proxy,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes https://github.com/gitextensions/gitextensions/issues/11595

## Proposed changes

- Use Default credentials for proxy access when loading avatars

## Test methodology
- Testing before : no avatar displayed when behind corporate proxy
- Testing after : avatar displayed

## Test environment(s)

- GitExtensions version: 4.2.1
- GIT version: 2.43.2
- OS version: Windows 10 22H2
- .NET version: .NET 6.0.27

## Merge strategy

- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).

I agree that the maintainer squash merge this PR (if the commit message is clear).

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-20T23:55:21Z,2024-02-22T16:59:50Z,2024-02-22T16:59:50Z,,master,master,2,4,1,2,0,2,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11596
11594,Shorten RevisionGraphTests file names,"Fixes https://github.com/gitextensions/gitextensions/pull/10637#issuecomment-1951481287

## Proposed changes

- Append `.UseFileName` to the `Verify` function in order to shorten the `.verified.txt` file names
  There is no such parameter in the `TestCase` attribute.
  The `Verify` parameter `sourceFile` is not of any help.

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-02-19T22:03:54Z,2024-02-22T16:55:45Z,2024-02-22T16:55:45Z,,master,shorter_test_filenames,16,33,33,2,2,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11594
11591,fix(FormPush): fix tracking detection broken,"The question to track the new branch to push
was no more asked to the user
because `_NO_TRANSLATE_Branch.SelectedItem` is null when user have not interacted with the ""Branch"" dropdown due to lazy loading

In all likelihood introduced by #11489

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build aca9886154c925df44b6cb86c3afbeae8287d6fb (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-16T16:04:35Z,2024-02-18T20:40:00Z,2024-02-18T20:40:00Z,,master,fix/push_tracking_ref,1,1,1,1,1,2,"gerhardol, RussKie, mstv","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11591
11590,Git diff coloring,"Fixes #11464
Fixes #11517

## Proposed changes

TBD, opened to get feedback.
Description will be improved too, as well as screenshots.

--
FileViewer: Restructure HighlightService

Move handling of ""normal"" patches from the shared
DiffHighlightService to PatchHighlightService.

Various code cleanups.

This commit is a preparation for Git coloring and git-grep.

--
Git diff coloring

Use the coloring by git-diff instead of GE internal algorithm,
by using Git ANSI terminal escape sequences.
This enables for instance view moved code.

Configuration: Git coloring is set by default, the existing engine is still available.
The GE theme colors for added/removed code (reverse green/red) is applied by default (default Git to just set foreground text is can be configured).
Git by default warns about white space, this is disabled by default (diff.colorMovedWS).
A user can override the Git colors for each ""slot"" (see below), but this is not available in GE UI.

--
Git word diff coloring

Enable Git word diff coloring view.
This is an alternative view for diff, not in patch format.
The differences are coded on the same line.

Configuration: ""GE word highlighting"" is the default, ""Git diff highlighting"" can be enabled.
By default Git highlights changed words. If the user has not set diff.wordRegex, change by character is used ('.').

--

What is not in this PR:
- Documentation for the changes, how colors etc can be changed by Git config
- Tests are added for the ""decoding escape sequence handling"". The status for other parts is the same as before (there are no major benefits for adding tests)
- Tuned colors fully matching theming
- A more generic way to display diff in other ways, like using diff-so-fancy or delta. That is probably a different view, similar to Blame in diff (but using the same FileViewer).

## Screenshots <!-- Remove this section if PR does not change UI -->

TBD, see #11464 for now

### moved

The third is ""Git default"", no GE theme override, whitespace errors
![image](https://github.com/gitextensions/gitextensions/assets/6248932/7f714ef3-9978-43c7-a2c8-899ca18509f3) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/93e0afac-5543-43dd-9a15-056eb6624a1f) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/1df174ee-c9c6-47e5-898c-805c076503ea)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/d5a19320-d69b-44a3-b244-c2047233a81d) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/3f06316f-41d7-428e-b4d6-0d7b4ff4af6b) 

![image](https://github.com/gitextensions/gitextensions/assets/6248932/0bd536ca-40c0-4cb0-adb8-cdd1326e9759) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/56571c0c-e47b-4840-87d5-396b8bdbf020)

### range diff - the GE coloring is very limited

![image](https://github.com/gitextensions/gitextensions/assets/6248932/5a8dae94-99b4-4c2b-beba-a7ced1ef053c) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/6866e09a-ff40-459e-8006-ac34d4416880)

A missed merge (color should have been yellow, I have modified it). Dual color makes these diffs easier to read.
![image](https://github.com/gitextensions/gitextensions/assets/6248932/81d6b8ac-3d67-439d-bcc5-7d502cffb5e6)  ![image](https://github.com/gitextensions/gitextensions/assets/6248932/6f938777-fe50-4d76-9765-2f7d7415fa6e)


### Git word diff

![image](https://github.com/gitextensions/gitextensions/assets/6248932/7f714ef3-9978-43c7-a2c8-899ca18509f3) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/79c67130-2351-49d5-9ba0-85648afcb969)

The word diff is best used to toggle the view back and forward to see details, only worddiff is confusing

![image](https://github.com/gitextensions/gitextensions/assets/6248932/94d09ba5-c2e9-436d-abfa-0ca4c1f8295a) ![image](https://github.com/gitextensions/gitextensions/assets/6248932/79863312-bc05-4d53-a605-51c28473dea4)

### ANSI Color theme

Git uses ""slots"" like old, new, oldMoved etc to set situations.
https://git-scm.com/docs/git-config#Documentation/git-config.txt-colordiffltslotgt
The slots are translated to named colors (8) that can be normal/bright/dim (and more, not really used in Git) as well as background/foreground. A terminal uses a ""theme"" to translate these colors.
The ""theme"" for these colors in this PR is displayed below as well as the GE theme colors overriding the default. (Note that the GE colors DiffAddedExtra and DiffRemovedExtra has no direct fit in the ANSI colors, maybe bright is the closest).
  
![image](https://github.com/gitextensions/gitextensions/assets/6248932/25f4824c-40c8-4aba-ab69-d57ca8d886fb)

## Test methodology <!-- How did you ensure quality? -->

Manual, tests to be added, maybe in a followup PR

## Merge strategy

- Rebase merge (PR submitter must change the commit message for the last commit).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-15T23:12:04Z,2024-03-10T22:01:20Z,2024-03-10T22:01:20Z,release-notes-worthy,master,feature/git-coloring,30,1544,732,3,10,2,"mstv, RussKie, RussKie, RussKie, RussKie, gerhardol, gerhardol, gerhardol, RussKie, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11590
11586,Avoid test hangs due to grid background task,"## Proposed changes

- Await cancellation of RevisionGridControl tasks on close of FormBrowse
- Handle exceptions in UpdateGraphAsync
- Cancel SwitchToMainThreadAsync on AfterTest
- Move JoinPendingOperations to AsyncTestHelper and add timeout
- Tests: Avoid direct use of ThreadHelper.JoinPendingOperationsAsync
- TaskManager.JoinPendingOperations with timeout of 1 minute
- Catch exceptions in TaskManager.JoinPendingOperations[Async]

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-02-15T00:58:35Z,2024-02-17T20:16:24Z,2024-02-17T20:16:24Z,":eyeglasses: status: needs review, status: ready",master,fix/test_hangs,12,103,42,6,5,2,"RussKie, gerhardol","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11586
11585,"Add a default shortcut for ""CreateSquashCommit""","## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

(no shortcut)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/c2da8ae5-898a-40c3-9164-a6a57a7ed042)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build ebc7f90a509b388f0939e8f6ecac6524fd036adb
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-14T22:50:46Z,2024-02-15T18:21:32Z,2024-02-15T18:21:32Z,,master,squash_default_shortcut,1,1,1,1,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11585
11584,Form commit: Improve commit templates menu,"## Proposed changes

- fix(FormCommit): better manage commit template separators (to prevent adding one where not needed and see duplicate separators with nothing in between)
-JiraCommitHintPlugin: display an error message if configuration is incomplete

## Screenshots <!-- Remove this section if PR does not change UI -->

* Menu separators:

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/1c9524d1-f667-4641-bfde-10e62c1815a7)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/549b3784-5424-4762-af26-363907fb637a)

* Jira commit hint message:

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/2d0f5a32-e87e-45d7-96b9-5f9f51263283)


### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/bc19e2d4-6241-4d0e-8163-5c3773634675)




## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build ebc7f90a509b388f0939e8f6ecac6524fd036adb
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer *rebase* merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-14T22:29:38Z,2024-02-16T10:39:18Z,2024-02-16T10:39:18Z,,master,form_commit_messages,3,22,10,2,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11584
11582,Refactor `ColumnProvider.Refresh`,"## Proposed changes

- Split `ColumnProvider.Refresh` into `ApplySettings` and `Clear`
  because the former conglomerate resulted in redundancies with `RevisionGraphColumnProvider.OnVisibleRowsChanged`
- Extract `RevisionDataGridView.ApplySettings` from `Refresh`
  because there is no need to re-apply all `ColumnProvider` settings on every graph loading update. (This saves lots of accesses to `AppSettings` and `GetEffectiveSettings`.)

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-02-12T22:17:55Z,2024-02-18T10:41:36Z,2024-02-18T10:41:36Z,,master,refactor/grid_settings,9,56,49,1,0,0,"RussKie, mstv, RussKie, RussKie","COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11582
11581,Fix FormCherryPick sizing,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

FormCherryPick has at least two problems with high DPI screens. First, its default size hides one of the checkboxes and for merge-commits hides parent commit info. Second, parent commit info header width is not scaled.

- Fix form's height calculation to work with both 100% and other scaling factors.
- Scale column header width manually

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
https://github.com/gitextensions/gitextensions/assets/483659/fa51dbe7-d5e0-4130-962b-1c7d796c7805


### After
https://github.com/gitextensions/gitextensions/assets/483659/7e681e59-92dd-4b08-bffe-c363104ad67b


## Test methodology <!-- How did you ensure quality? -->

- Manually with 100% 125% 150% 200% scaling factors

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11
- Scaling: 100% 125% 150% 200%

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-12T22:06:54Z,2024-02-14T17:49:57Z,2024-02-14T17:49:57Z,,master,fix-FormCherryPick-sizing,3,43,13,2,0,2,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11581
11578,"GitCommandLog: Hide '-c option=""value with space""'","## Proposed changes

- GitCommandLog: Detect git configuration options like '-c option=""value with space""' and hide them in the list (as other configuration options, too)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/36601201/7840ab12-9e85-4d17-9e00-2a395eaf51ff)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/9db4aa96-9fab-40c7-b464-14cd9ae20c19)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-02-11T19:31:40Z,2024-02-22T16:56:12Z,2024-02-22T16:56:11Z,,master,fix/git_command_log,2,27,3,2,0,0,"gerhardol, mstv, RussKie, gerhardol, gerhardol, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11578
11576,WIX 3.14.0,"Fixes #11574
In addition to #11575 that suppresses the warning so builds succeeds.

## Proposed changes

CVE-2024-24810

## Test methodology <!-- How did you ensure quality? -->

Build - not tested the installer myself

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-10T21:06:09Z,2024-02-11T05:20:40Z,2024-02-11T05:20:40Z,,master,feature/wix-3.14.0,1,1,1,1,1,0,"pmiossec, mstv, RussKie","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11576
11575,Update Directory.Build.props,"Fixes #11574

## Proposed changes

As suggested by @RussKie 
Just opening this so new and existing PRs will build

## Test methodology <!-- How did you ensure quality? -->

Build passes

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-10T15:43:33Z,2024-02-10T20:54:36Z,2024-02-10T20:54:36Z,,master,feature/i11574-nowarn-nu1903,1,1,1,1,0,0,"pmiossec, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11575
11570,Quote Git reference names,"Fixes #11567

## Proposed changes

Quote reference names for several commands handling Git references that has quite open rules for references, including quotes and parenthesis.
https://git-scm.com/docs/git-check-ref-format#_description

I scanned for some commands I could think of in addition to ls-tree, but there could be more. Most occurrences should be handled already.
ObjectId does not need quoting.

## Test methodology <!-- How did you ensure quality? -->

Minimal manual tests.
Note that tests did not have to be updated.
## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-06T21:21:31Z,2024-02-10T16:39:22Z,2024-02-10T16:39:22Z,,master,feature/i11567-quote-ls-tree,9,21,21,3,0,1,"RussKie, mstv, gerhardol","APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11570
11569,GetSubmoduleCommitHash: Avoid git error on names containing parens,"Fixes #11567

## Proposed changes

- `GetSubmoduleCommitHash`: Quote `refName`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- by reporter

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-02-06T21:17:25Z,2024-02-07T17:37:06Z,,,master,fix/i11567_ls-tree,1,1,1,1,1,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11569
11564,CommitCount: Use HEAD for artificial,"Fixes #11562

## Proposed changes

Ahead/Behind are shown in branch picker for instance for Compare,, just for information. If an artificial command is compared, git-rev-list must use HEAD instead.

## Screenshots <!-- Remove this section if PR does not change UI -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/d186676b-ece9-4182-8d5a-03a75fd65945)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-03T21:47:02Z,2024-02-05T20:39:46Z,2024-02-05T20:39:46Z,,master,feature/i11562-artificial-before-after,5,7,5,1,0,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11564
11561,Improve avatar handling perfs,"## Proposed changes

- Improve quick scrolling avatar display (that could block UI when the avatar was not in cache due to some potential exceptions raised)
- Don't draw temporary placeholder avatar (less things to do and no visual blink)
- Fix ""Clear image cache feature"" (and remove double call to clear)
- Cache avatars in %LocalAppData% instead of %AppData% (no roaming for cache data)
- Bypass filesystem cache for initial avatar provider that is quicker that reading cache from filesystem (and so no need to write a file)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 5b7092d88f31ec36a53c000796a8cf2ddb813ab7
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-01T16:30:12Z,2024-03-07T07:44:16Z,2024-03-07T07:44:16Z,,master,improve_avatar_handling_perfs,23,235,123,14,2,5,"gerhardol, mstv, RussKie, pmiossec, pmiossec, mstv, RussKie, pmiossec, pmiossec, mstv, pmiossec, pmiossec, mstv, RussKie, pmiossec, pmiossec, mstv, mstv, RussKie, RussKie, mstv, mstv, pmiossec, pmiossec, pmiossec, mstv, pmiossec, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, DISMISSED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11561
11559,Improve Form remotes UX,"## Proposed changes

- increase size of opened dropdowns to be readable
- history should not be dependent of local repo history setting (which is absolutely not related). Hard code a value is enough.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/4f549f84-c171-46f4-9570-b1bb52844cb5)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/64b22dfa-138a-4f3d-b088-04f54c7733d7)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 2c067ca81a355d7358514cf6cde9933dd1778996
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer rebase merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-01T14:16:27Z,2024-02-06T09:19:51Z,2024-02-06T09:19:51Z,,master,form_remotes,5,13,11,2,0,1,"RussKie, RussKie, pmiossec, RussKie, pmiossec, gerhardol, pmiossec, pmiossec, gerhardol, pmiossec, gerhardol, gerhardol, RussKie","COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11559
11558,Scripts: Last column size fit content,"## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/6fd12256-2aca-4889-bbcd-b7c8507ec40c)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/36dc9954-0667-46d2-81c3-f5f7c773acc1)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 2c067ca81a355d7358514cf6cde9933dd1778996
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.26 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.1 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-01T14:01:15Z,2024-02-05T11:18:35Z,2024-02-05T11:18:35Z,,master,improve_scipts_display,1,6,0,1,0,1,"RussKie, mstv, gerhardol","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11558
11557,Improve editors detection,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11556

## Proposed changes

- Try to find current user install of a text editor
- Remove ""Atom"" editor that is no more maintained ( https://github.blog/2022-06-08-sunsetting-atom/ )
- better support for text editor in the PATH

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/b1fdfeb3-0138-499d-952d-cf7419999a80)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/9b002475-5710-4f27-a6d5-98226732722d)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 6d2996f15652e8c4cc65f75661e275b3832368c0 (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22631.0
- .NET 8.0.1
- DPI 96dpi (no scaling)
- Portable: False

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-02-01T09:50:12Z,2024-02-06T08:18:13Z,2024-02-06T08:18:13Z,,master,improve_editors_detection,2,37,53,5,0,2,"RussKie, mstv, gerhardol, mstv, gerhardol, pmiossec, pmiossec, mstv","APPROVED, APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11557
11552,Ignore ListViewGroup accessibility exception,"Fixes #11385
(workaround)

## Proposed changes

- Ignore exception from `ListViewGroup.get_AccessibilityObject` which occasionally occurs on `GetFocus` after `OnApplicationActivated` with .NET 8.0.1 yet

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-29T19:15:52Z,2024-01-30T18:35:17Z,2024-01-30T18:35:17Z,,master,i11385_listview_accessibility_workaround,1,7,0,1,1,1,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11552
11551,FormCheckoutBranch: Handle no current checkout,"#11500 for vNext

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-27T22:53:52Z,2024-01-28T12:28:50Z,2024-01-28T12:28:50Z,,master,fix/i11500,1,8,5,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11551
11550,Create .git/info/ before creating exclude file,"#11442 for vNext

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-27T22:52:41Z,2024-01-28T12:28:27Z,2024-01-28T12:28:27Z,,master,fix/i11442,2,4,2,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11550
11549,Diff for filtered file between selected commits,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11548

## Proposed changes

- Add button in revision grid context menu to compare the filtered file between two selected commits

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<img width=""942"" alt=""Screenshot 2024-01-26 212646"" src=""https://github.com/gitextensions/gitextensions/assets/4991936/8abcb8f2-5afd-45be-8398-d6de92b110cd"">

### After

<img width=""942"" alt=""Screenshot 2024-01-26 212808"" src=""https://github.com/gitextensions/gitextensions/assets/4991936/b66a60cb-c832-49f8-b7a7-496b418c4f7d"">


## Test methodology <!-- How did you ensure quality? -->

- Manually tested
- Tested with no filtering -> nothing happens
- Tested with only one selected commit -> diff to parent

## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.43.0.windows.1
- Windows 11 23H2

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-26T20:39:09Z,2024-01-29T16:35:22Z,,,master,feature/diff-commits-with-filter-path,6,62,1,4,1,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11549
11538,Improve and fix plugins loading,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Improve on ""However, since the startup time of GitExtensions is so long, this feature is ruined for me."" of https://github.com/gitextensions/gitextensions/issues/11518#issue-2081522202 (especially the first cold start)

## Proposed changes

- FormBrowse & Dashboard: Plugins start to be loaded a little later so that revision grid loading is not blocked anymore and is displayed more quickly (revision grid displayed around 4s earlier on a cold start)
- Dashboard: 
    - Load only the git hosters plugin (and later the others) making that ""Clone GitHub repository"" feature appears much more quickly (for that plugins need to export also ""IRepositoryHostPlugin"" interface)
    - fix state of GitHub menu items
- Form Commit **stand alone** (i.e. launched directly from file explorer): 
    - fix registering of plugins (that never worked)
    - improve performance by loading only ""form commit"" plugins (plugins need to export also new ""IGitPluginForCommit"" interface)

## Screenshots <!-- Remove this section if PR does not change UI -->

## Revision grid is not blocked by plugin loading

#### Before

Blank screen in the revision grid during 4 or 5s

![plugins_startup_before_slow](https://github.com/gitextensions/gitextensions/assets/460196/ea0597a2-417b-4119-b382-7f6051c16fd5)

#### After

Revision grid content appears immediately and the plugins are loaded after

Note: Here, to explain the principle, I was ""lucky"" because in this specific case the cold start was exceptionally long (around 15s to load the plugins) whereas normally it took around 5s. With current plugin loading, I would have waited more than 15s before seeing the revision grid loaded.
![plugins_startup_quick_best](https://github.com/gitextensions/gitextensions/assets/460196/d3ba98d4-3485-42e2-9bfa-d5b3cbdc7c12)

Same but with a usual time:

![plugins_startup_quick_normal](https://github.com/gitextensions/gitextensions/assets/460196/e9f57679-03c8-45db-aace-3a11b4565d62)

## Dashboard: Git provider loading

#### Before

![plugins_dashboard_slow](https://github.com/gitextensions/gitextensions/assets/460196/2016fda2-aea1-4bb6-8300-219c7c6bd894)

Note: I just discovered during the gif that it even slow down retrieving the checked out branches of all the repositories

#### After

![plugins_dashboard_quick](https://github.com/gitextensions/gitextensions/assets/460196/b9c84a5f-86c6-4cf9-bad7-051e44b1d656)


## Dashboard: fix state of GitHub menu items

#### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/337f388f-d4fd-4edc-9359-78d63dfaa0bc)

#### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/9151f4c4-410f-4ac9-a576-9ee7855b4e5b)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 00049fdc9fc67ad0749232d84c886cbf9fb982fe
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.21 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.25 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.14 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 8.0.0 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-22T14:06:55Z,2024-02-28T10:09:38Z,2024-02-28T10:09:38Z,release-notes-worthy,master,improve_and_fix_plugins_loading,10,221,97,5,6,5,"mstv, mstv, pmiossec, mstv, pmiossec, pmiossec, pmiossec, pmiossec, pmiossec, pmiossec, pmiossec, mstv, mstv, pmiossec, pmiossec, gerhardol, pmiossec, mstv, mstv, gerhardol, pmiossec, gerhardol, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11538
11537,Small convenient repo stuff (no code change),"## Proposed changes

- sln: nuget packages file has been renamed
- .gitignore: Add CodeRush hidden folder
- chore: add ""Commit dialog"" debug target

## Test methodology <!-- How did you ensure quality? -->

- Nothing to test

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer rebase merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-22T12:36:27Z,2024-01-22T15:45:40Z,2024-01-22T15:45:40Z,,master,small_repo_stuff,3,7,2,3,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11537
11535,cancellationToken for Git patch commands,"Abort Git commands in Diff tab file viewer.

## Proposed changes

Git commands related to the Diff tab did not use cancellation tokens so there could be lingering commands running.

Related to #11494 but diff commands run much quicker so no major impact.

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-21T20:41:05Z,2024-01-24T21:15:13Z,2024-01-24T21:15:13Z,,master,feature/cancel-diff,4,61,30,2,0,1,"mstv, gerhardol, mstv","COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11535
11534,Splitters: Fix crash when restoring size,"(Should) Fixes #11085

## Test methodology <!-- How did you ensure quality? -->

- None (because I don't have a crash). Looking at stacktrace.

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-20T09:13:52Z,2024-01-23T11:19:24Z,2024-01-23T11:19:24Z,,master,fix_splitter_position,1,8,1,1,1,2,"mstv, gerhardol, gerhardol, pmiossec, RussKie, mstv","COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11534
11533,Skip LoadHotkeys if the control has not been loaded yet,"Fixes #11367

## Proposed changes

- Skip `LoadHotkeys` if the control has not been loaded yet, e.g. because it is invisible,
  in order to avoid exception about missing UI Command Source
  The hotkeys will be fetched later in `OnRuntimeLoad`.
- Turn `GitExtensionsControl.TryGetUICommands` into property `ServiceProvider`
  because `TryGet` was misleading: It threw an `InvalidOperationException` anyway.
- Factor out base class `TranslatedControl` from `GitExtensionsControl` and
- Use it as base class for `SettingsPageBase` instead - in order to not need to declare its property `ServiceProvider` as `new`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-19T22:05:20Z,2024-02-18T10:39:47Z,2024-02-18T10:39:47Z,,master,fix/i11367_reload_hotkeys_exc,5,104,94,7,2,6,"RussKie, gerhardol, RussKie, mstv, RussKie, RussKie, gerhardol, mstv, mstv, mstv, gerhardol, RussKie, mstv, RussKie, mstv, RussKie","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11533
11530,FileViewer: ShowSyntaxHighlighting hotkey and context menu,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->
## Proposed changes

Hotkey for ShowSyntaxHighlighting  to quickly deactivate highlighting in reviews, conflicting with other colors. 
Especially useful with #11464 that adds more colors.

Menu item is for completeness and to display current hotkey.

Sorting context menu as toolbar buttons

Mnemonics  in context menu

Default hotkey for ShowSyntaxHighlighting   and ShowEntireFile

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/6248932/d5ab4cd0-aacf-48e7-b9ef-d82fa5becdd6)

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/4fa4e8e8-a341-49cf-b0f1-d39a29123057)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-17T21:45:52Z,2024-01-19T22:42:32Z,2024-01-19T22:42:32Z,,master,feature/fileviewer-syntax-highlighting,4,59,35,3,3,2,"mstv, gerhardol, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11530
11529,Do not update graph cache if row unavailable,"Fixes regression from #11463
Fixes #9223 (at least, it worked well a few times)

## Proposed changes

- Do not update graph cache if the row is unavailable yet
- Trigger refresh when loaded
- Set `DataGridViewCellPaintingEventArgs.Handled = true` if the cell has zero size (in order to avoid endless refreshes)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

missing graph or some rows drawn from outdated cache

### After

correct graph

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-17T19:43:24Z,2024-01-18T21:32:31Z,2024-01-18T21:32:31Z,,master,fix/missing_graph,2,14,2,1,1,2,"gerhardol, RussKie","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11529
11528,Do not straighten graph if it is too wide,"Contributes to #11292
#11451 for vNext with AppSetting 

## Proposed changes

- Do not straighten graph if it is too wide with configurable limit

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-17T18:14:10Z,2024-02-17T20:19:31Z,2024-02-17T20:19:31Z,":eyeglasses: status: needs review, status: ready",master,fix/i11292_graph_perf_1_of_x_vnext,4,27,3,2,0,2,"gerhardol, mstv, mstv, gerhardol, mstv, RussKie, gerhardol, gerhardol, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11528
11524,FileViewer: Shortcuts missing in context menu,"## Proposed changes

Add shortcuts to fileviewer context menu where several items missed shortcuts.
Most do not have any by default,

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/6248932/f1791ae5-9326-4680-be11-0f35d263eaf0)

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/2c819b0e-c1c5-4fb5-90d9-307443484820)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-16T22:51:18Z,2024-01-17T21:34:40Z,2024-01-17T21:34:40Z,,master,feature/fileviewer-menu-shortcuts,1,8,2,1,0,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11524
11521,Clarify revision loading,"## Proposed changes

- Remove redundant call of `_revisionGraph.Clear`
- Separate `TriggerRowCountUpdate` from `UpdateVisibleRowRange`,
  which will be really split in a follow up
- use C#'s unconditional logical operator `|=`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-15T21:43:50Z,2024-02-11T16:03:06Z,2024-02-11T16:03:06Z,,master,refactor/graph_loading,3,16,10,2,0,0,"RussKie, mstv, RussKie","COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11521
11516,Simplify RevisionDataGridView.LoadingCompleted,"## Proposed changes

Simplify `RevisionDataGridView.LoadingCompleted`:
- remove pointless `srollTo`
- avoid repeated evaluation of `RowCount `

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-14T21:41:04Z,2024-01-15T19:46:57Z,2024-01-15T19:46:57Z,":eyeglasses: status: needs review, status: ready",master,refactor/loadingcompleted,1,34,38,2,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11516
11515,Fixup limits by RevisionGraph.Count,"## Proposed changes

- Fixup violations of ""A row index must be less than `RevisionGraph.Count`.""

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-14T17:51:11Z,2024-01-15T19:45:12Z,2024-01-15T19:45:12Z,,master,fix/nodes_cache_limit,2,13,12,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11515
11507,Workaround ImageList transparent image regression introduced in .NET 8,"Fixes #11506

A root cause was found to be an incorrect setting of the image background during `ImageList` handle creation https://github.com/dotnet/winforms/issues/10462#issuecomment-1880068488

This also suggests a clear fix:

## Proposed changes

- Set ImageList background to a value used before this regression got introduced
- Add comment instructing to remove this workaround once the fix is implemented in .NET 9 (most likely) 

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

FormBrowse > Commit Info
![image](https://github.com/gitextensions/gitextensions/assets/483659/0e1dbe69-d3e8-49b7-b123-dfd8496dfc98)

FormFileHistory
![image](https://github.com/gitextensions/gitextensions/assets/483659/a4b851e8-1b94-44bc-9bdf-ef9aa64aacde)

### After

![image](https://github.com/gitextensions/gitextensions/assets/483659/9696add8-8232-4d4a-8280-9318dc1e70e9)
![image](https://github.com/gitextensions/gitextensions/assets/483659/342c2cc7-ad12-4b49-a408-d4e9cd440cad)


## Test methodology <!-- How did you ensure quality? -->

- Manually

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 11

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

- Squash merge (there is just a single commit but this maintains PR number in a commit message)

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-07T15:40:56Z,2024-01-08T11:08:04Z,2024-01-08T11:08:04Z,,master,workaround-imagelist-regression,4,31,2,2,1,0,"RussKie, gerhardol, mstv, mdonatas, RussKie, RussKie","APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11507
11505,Regex explicit capture,"
## Proposed changes

Name all generated regex captures, to improve readability and enable the possibility to use explicit capture.

Enable the option for explicit capture for all generated regex. This improves performance slightly.

Use verbatim strings for regex.

A few VS suggested changes.

This in itself will likely not make any noticable improvements, but will simplify investigations and set a usage pattern.

## Test methodology <!-- How did you ensure quality? -->

Code review, tests

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-06T20:27:56Z,2024-01-10T21:25:12Z,2024-01-10T21:25:12Z,,master,feature/regex-explicit-capture,30,97,98,2,2,0,"RussKie, mstv, gerhardol, gerhardol, pmiossec, gerhardol, mstv, mstv, gerhardol, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11505
11501,perfs: better perf for ObjectId.ToShortString(),"by allocating and less processing when needed
and (later) using `.ToHexStringLower()` that will be provided by .net9 https://github.com/dotnet/runtime/pull/92483

## Test methodology <!-- How did you ensure quality? -->

- unit tests
- manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-06T01:59:18Z,2024-01-22T15:53:07Z,2024-01-22T15:53:07Z,,master,perf/objectid_toshortString,2,19,8,1,1,1,"gerhardol, pmiossec, pmiossec, gerhardol, gerhardol, gerhardol, gerhardol, pmiossec, pmiossec, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11501
11500,FormCheckoutBranch: Handle no current checkout,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11498

## Proposed changes

- FormCheckoutBranch: Handle no current checkout

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2024-01-05T23:45:28Z,2024-01-06T17:44:25Z,2024-01-06T17:44:25Z,,release/4.0,fix/i11498_checkout_branch,1,8,5,2,0,0,"pmiossec, gerhardol, mstv, gerhardol","APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11500
11495,Better delete branch checks,"## Proposed changes

- Better way to find if a branch could be securely deleted: check if branch deletion will make tip commit dangling (i.e. branch really merged in any **local** branch).
- Check that the tip of the deleted branch is in the reflog:
    * Add immediate feedback to the user (is or is not in reflog)
    * Better hint when not recoverable by reflog
    * Override user confirmation setting **if commit is not in the reflog** to prevent user to **really** loose commits

Summary of cases:
* **If the tip of the branch to delete is merged in any local branch, it won't create a dangling commit (i.e. the DAG won't change) and so no confirmation is asked anymore to the user** => more cases (that changes nothing) doesn't require confirmation...
* A confirmation is requested or not depending on user setting when branch is unmerged and tip is in reflog => when commit is easily recoverable, let the user decide if he wants a confirmation or not.
* A confirmation is **always** requested when branch is unmerged and tip is in **not** reflog (even if user doesn't want a confirmation) => when commit won't be recoverable easily (only through ""Recover lost objects""), force the user to confirm (more secured because he is now aware of the case!!)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

(I don't have a local version behaving like that anymore so can't really provide screenshots)
There are downsides:
* If the branch to delete is not merged into the currently checked out branch, you will have a (boring!) message telling you that the branch is not merged and the user don't really know if he will lose commits or not without carefully checking (or checking out another branch --which make the delete process painful--)
* if exceptionally you are in detached head, the check could accept to delete even if you will loose the commits: user is not really aware of the risk.
* there is a tip on using reflog to recover even if it could happen that the tip is not in the reflog and so won't be recoverable like that

### After

* Branch is in the reflog:

![image](https://github.com/gitextensions/gitextensions/assets/460196/8b859331-e0bc-4b35-a604-954b91f8d08f)

* Branch is not in the reflog:
 
![image](https://github.com/gitextensions/gitextensions/assets/460196/1ccf6154-f157-437b-bb00-53db6193151e)

* Branch not merged and tip not in the reflog (UI is not the more beautiful but should happen very rarely and should be ""surprising""):

![image](https://github.com/gitextensions/gitextensions/assets/460196/bc7ab881-5251-42c2-b4f6-82caf8f4cafa)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 7585fee4bd8edeef329f44377ea6dd1a0ba75198
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer rebase merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-03T21:14:31Z,2024-01-08T15:00:31Z,,,master,better_delete_checks,11,267,25,7,3,1,"RussKie, pmiossec, pmiossec, pmiossec, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",True,https://api.github.com/repos/gitextensions/gitextensions/issues/11495
11494,Cancellation token for Git commands in CommitInfo,"Discussed in https://github.com/gitextensions/gitextensions/pull/11472#discussion_r1439656333

## Proposed changes

Cancel longer Git operations when selecting a new commit in CommitInfo and left panel.
The commands were running to completion, using CPU (probably not blocking UI thread as discussed in #11472).

This PR adds the cancellationToken to the most common and long running commands in CommitInfo.
(git-describe and git-cat-file is normally quick but included as no refactoring was needed.)
There are a few other Git commands in CommitInfo that are not interrupted.
These are either fast or not executed often, some more refactoring would be required to handle the cancellation in invokes etc.

## Screenshots <!-- Remove this section if PR does not change UI -->

No diff for the user, just showing the command log when stepping in the linux repo.

### Before

One cancellation for the diff in RevDiff

![image](https://github.com/gitextensions/gitextensions/assets/6248932/10fdfe49-1877-486e-b8be-bbe148f191fb)

### After

The git-tag command that requires close to 10 s is started after git-branch and would have been cancelled if I had timed the cancellation.

![image](https://github.com/gitextensions/gitextensions/assets/6248932/eef4fc7d-6fe9-4f61-b977-b13b29852f51)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-03T10:56:03Z,2024-01-05T09:04:12Z,2024-01-05T09:04:12Z,,master,feature/commitinfo-cancel-token,5,26,22,1,0,1,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11494
11492,FormBrowse: Avoid toolbar resize while refreshing,"## Proposed changes

Annoying resizing of the toolbar when git status updates
Not solved, but improved.
((The remaining flicker is after first update is done and before git-status reports changes.)

## Screenshots <!-- Remove this section if PR does not change UI -->

Explicit refresh

### Before

![old-refresh](https://github.com/gitextensions/gitextensions/assets/6248932/68fd8e61-e5c1-4aa5-830e-da0e193db590)

### After

![new-refresh](https://github.com/gitextensions/gitextensions/assets/6248932/9a3fc702-5630-4f82-ac5a-785298c30519)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-02T15:02:38Z,2024-01-05T10:17:24Z,2024-01-05T10:17:24Z,,master,feature/menu-refresh,2,30,22,3,0,1,"mstv, gerhardol, gerhardol, mstv, gerhardol, RussKie, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11492
11491,ProxySwitcher Do not fail if http.proxy is not set,"fixes #11490

## Proposed changes

Do not raise errors if Git config setting http.proxy is not set.

* GetGitSetting() for scoped git-config
Make it possible to get get git-config with a scope, like ""--global""

* GetEffectiveGitSetting() should not cache by default

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-02T11:55:54Z,2024-01-05T09:24:11Z,2024-01-05T09:24:11Z,,master,feature/i11490-proxy-switcher,4,20,17,2,0,0,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11491
11489,Improve performance of push form (when a lot of local branches),"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Helps when there are lot of branches (like in #11441)

## Proposed changes

Most of the times, user open push form to push the current branch (and so don't change the dropdown values). So prevent to load all the branches when opening the form making the form opening immediately (instead of having to wait 16s for example when having 20k branches) by deferring loading:

- Load only the current branch in ""Branch to push"" combobox and load and fill  **all** local branches only when the user open it (opening time of 4s when 20k branches and less than 1s when 4k. Imperceptible otherwise)
- Don't add **all** local branches in the ""to"" combo box but prefer adding local branch in remote combobox on the fly when pushing a new branch.
- use `AddRange()` to add a big number of branches in remotes

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build a57c649dbe97e235729b9867be66a8cac084449f
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-02T00:03:54Z,2024-01-15T15:13:06Z,2024-01-15T15:13:06Z,,master,perf/form_push,2,45,35,3,0,3,"gerhardol, gerhardol, pmiossec, pmiossec, pmiossec, pmiossec, pmiossec, pmiossec, gerhardol, mstv, pmiossec, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11489
11488,Scripts: Focus property grids when creating a new one,"to be able to type the script name right away

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![script_new_broken](https://github.com/gitextensions/gitextensions/assets/460196/628eb96e-98ad-4d3a-92f9-7ea179e16982)


### After

![script_new](https://github.com/gitextensions/gitextensions/assets/460196/f3575109-66b8-4a16-a7f5-87e69886cbac)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->
- Git Extensions 33.33.33
- Build 05af8bf761f7ab5a578266b439e225cd29fd8b6b
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-01T23:03:21Z,2024-01-03T08:37:36Z,2024-01-03T08:37:36Z,,master,script_add_focus,1,2,0,1,0,1,"gerhardol, mstv, RussKie","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11488
11487,CI: allow click on status cell to open build report,"
## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Nothing

### After

![ci_open_report](https://github.com/gitextensions/gitextensions/assets/460196/8daad16f-c021-403c-888b-8150544a62ea)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 3c3c8460a9d95508a188d5e3f415350c98eee676 (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-01T22:44:23Z,2024-01-03T08:38:22Z,2024-01-03T08:38:22Z,,master,feat/ci_click,1,25,1,1,0,0,"gerhardol, mstv, RussKie","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11487
11486,Include default system code page in default encodings,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

Include default system code page in default encodings list.

### Before

On Windows 10 PL, the default encoding set in GitExtensions contain the following: UTF-8, US-ASCII, Unicode, Central European (DOS).

""Central European DOS"", cp852, is the one returned by GetEncoding(CultureInfo.CurrentCulture.TextInfo.OEMCodePage).

Under Windows however, the default 8-bit encoding of files in PL locale is ""Central European (Windows)"" (ansi / windows-1250). This encoding is returned by GetEncoding(0). So, in order to use it (in diff viewer, for example), one must find and change the git encoding setting.

### After

Result of GetEncoding(0) is also added to populate the default encoding list.

## Test methodology <!-- How did you ensure quality? -->

- Manual test run without configuration file
- Code is under try/catch so possible errors will be silently ignored.
- If GetEncoding for OEMCodePage and 0 return the same encoding, they will be deduplicated by map.

## Test environment(s) <!-- Remove any that don't apply -->

- Windows 10 PL

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-01T18:25:55Z,2024-03-03T03:18:05Z,2024-03-03T03:18:05Z,,master,default-encoding,1,9,0,3,3,2,"pmiossec, RussKie, vbjay, gerhardol, qgppl, mstv","APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11486
11485,Agreed to CONTRIBUTING.md and signed contributors.txt,":black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-01T17:53:48Z,2024-01-02T18:59:56Z,2024-01-02T18:59:56Z,,master,sign-contributors,1,2,1,1,0,0,"gerhardol, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11485
11484,FileViewer Replace,"## Proposed changes

Enable the existing Replace popup for files that are writable.
For multiple files (including context menu in  file status list), Ctrl-H is ignored

This functionality was already implemented in FindAndReplaceForm.cs

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Find is unchanged for readonly (no replace) or when starting Find

![image](https://github.com/gitextensions/gitextensions/assets/6248932/b7f0c7f1-afb2-4d28-b3a4-ba57bc477eb6)

### After

Explicitly starting replace

![image](https://github.com/gitextensions/gitextensions/assets/6248932/f6a500fa-aff5-461e-8515-1d28f2a5e1af)

Added to file context menu.

![image](https://github.com/gitextensions/gitextensions/assets/6248932/37c29171-b48f-4969-a49c-5124a79e6c62)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2024-01-01T13:38:46Z,2024-01-05T09:17:53Z,2024-01-05T09:17:53Z,release-notes-worthy,master,feature/find-replace-editor,6,34,6,1,0,0,"RussKie, pmiossec, mstv, gerhardol, mstv, mstv","APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11484
11482,Check for cancellation before accessing non-locals,"Fixes #11460

## Proposed changes

- RevisionGridControl: Check for cancellation before accessing non-locals

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-30T15:52:05Z,2024-01-17T16:26:05Z,2024-01-17T16:26:05Z,":eyeglasses: status: needs review, status: ready",master,fix/i11460_cancellation,1,7,3,1,0,1,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11482
11481,Fixup missing graph,"Fixes missing graph after double refresh within 200-500 ms.
Might fix #9223

## Proposed changes

- Invalidate graph column on width change

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

graph column with one lane (often empty)

### After

full graph visible

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-29T16:51:06Z,2023-12-30T10:27:47Z,2023-12-30T10:27:47Z,,master,fix/missing_graph,1,6,1,1,0,1,"gerhardol, mstv, RussKie","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11481
11480,Cleanup graph cache usage,"## Proposed changes

- Fixup `GraphCache` usage (At least the properties `Head` and `HeadRow` were confounded.)
  I think it has become clearer without that double case discrimination.
- Remove unnecessary graph clipping; make it exception-safe

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- added tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-29T14:46:01Z,2024-02-28T20:40:46Z,,,master,fix/graph_cache,0,0,0,0,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11480
11478,Blame: options to git-diff to get line in previous commit,"## Proposed changes

GetOriginalLineInPreviousCommit() (to get line number in the previous commit)
must override the git diff option from git-config to follow the user preference
and to give predictable options for tests.
Similar, rename and whitespace options must be the same for git-diff
and git-blame.

* Include current section in checks
Better matching.

* BlameParserTest should not assume clone folder name

--

was

BlameParserTest should not assume clone folder

Follow up to #11434 Test fals if clonefolder is not gitextensions. I use various worktree folders with other names, so the test fails.
There is no reason to test the name of the clone folder.

Tests also fails locally due to matchingBlameLineNumber=2291, separate isue. (blame UI is OK, so are AppVeyor tests)

## Test methodology <!-- How did you ensure quality? -->

Removed incorrect test case

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-27T11:54:27Z,2024-01-05T09:22:06Z,2024-01-05T09:22:06Z,,master,feature/p11434-blame-test,3,61,10,3,8,1,"pmiossec, mstv, gerhardol, mstv, RussKie, pmiossec, gerhardol, pmiossec, mstv, gerhardol, pmiossec, gerhardol, gerhardol","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11478
11477,GetObsoleteBranches: Restore linefeed in arguments,"Fixes https://github.com/gitextensions/gitextensions/pull/11470#discussion_r1436984453

## Proposed changes

- Restore the linefeeds used in the command line before #11470

## Test methodology <!-- How did you ensure quality? -->

- open plugin

### Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-27T11:40:31Z,2023-12-27T13:35:33Z,2023-12-27T13:35:33Z,,master,fix/11470,1,1,1,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11477
11472,FileStatusList updates,"## Proposed changes

CancellationToken for diff calculation not only when
RevDiff updates.

Simplify internal handling with FilterVisible etc

Removed property for FilterVisible as it was always true, used in all lists.

Set property GroupByRevision to true only where needed

Revised taborder, tab to Filter box before list
(other sub controls are not tab enabled).

--
FileStatusList: Delay FileLoading label

Label appears as flickering.
~~Just clear the FileStatusList while calculating the data.~~

~~This is not required, but in most situations the FilesLoading... label is very quick, appears as flickering.~~
~~The change is in a separate commit, to simplify rejection.~~
~~The first commit hides the Filter Combobox too, maybe better to keep it visible if the FilesLoading label is kept~~

--
#11350 will require this change

## Screenshots <!-- Remove this section if PR does not change UI -->

In Linux repo
First two selected commits are f8678a336808f728ea2e0806cfc10362958ca4e5 7beae48301f7ca214939e522051007b9b4daf178
Slower than almost all GE commits, but much faster than third selection 51af5563423c6e8537da8b6bd485b46c2b0d6492 (even if that has a small diff)

### Before

![prev-list](https://github.com/gitextensions/gitextensions/assets/6248932/83e93ec4-019f-4413-9279-da9cb9eb89c7)

### After

![new-list2](https://github.com/gitextensions/gitextensions/assets/6248932/72d19ab7-a765-4287-9e24-90049a52f8a6)

## Test methodology <!-- How did you ensure quality? -->

Tests are updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-26T22:57:05Z,2024-02-14T20:30:13Z,2024-02-14T20:30:13Z,,master,feature/file-list-properties,10,150,188,1,10,3,"mstv, RussKie, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, mstv, mstv, gerhardol, gerhardol, gerhardol, RussKie, RussKie, mstv, gerhardol, gerhardol, mstv, gerhardol, gerhardol, gerhardol, mstv, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11472
11471,DeleteObsoleteBranches: Parse symbolic references,"Fixes #11357

## Proposed changes

Symbolic references were not parsed correctly

## Test methodology <!-- How did you ensure quality? -->

Added test case, as well as for trailing spaces

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-26T21:13:28Z,2023-12-27T18:57:22Z,2023-12-27T18:57:22Z,,master,feature/i11357-obsolete-branch-refs,3,60,24,1,0,1,"RussKie, ZzzZeta, gerhardol, gerhardol, gerhardol, gerhardol, RussKie, mstv, gerhardol, gerhardol, mstv, ZzzZeta, gerhardol","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11471
11470,Quote git-log --pretty options,"Fixes #11469

## Proposed changes

'%' arguments gives problems in WSL with zsh

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-26T12:55:08Z,2023-12-26T17:31:26Z,2023-12-26T17:31:26Z,,master,feature/i11469-wsl-zsh-log-quote,2,2,2,1,0,0,"RussKie, mstv","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11470
11468,Do not get stash count in bare repos,"Fixes #11467

## Proposed changes

Another command to disable in bare repos

Edit: before 4.0 GE ignored all Git errors

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-25T23:21:49Z,2023-12-26T10:09:55Z,2023-12-26T10:09:55Z,,master,feature/i11467-stash-bare,1,1,1,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11468
11466,Browse FileHistory mode: Open diff by default,"Mentioned in #11440 

## Proposed changes

#9865/38e700fae4259e71ba2a2f8e8d03ed719abe4392 opened FileHistory tab with blame enabled to improve discoverability of blame. View (instead of blame) was set as default in
#10453/d9bd1c64e0aca88235006f7e2e5d371164ca26c9

The default tab should be Diff if Blame is not shown.

Left panel is still hidden in filehstory mode
#9865/edb2a5d2d1e729ffad6c1308d00cee9a4f018a38

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-25T11:44:47Z,2023-12-29T11:26:51Z,2023-12-29T11:26:51Z,,master,feature/browse-pathfilter-tab,4,18,17,2,1,1,"RussKie, mstv, gerhardol, mstv, mstv, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11466
11463,Cleanup RevisionGraphColumnProvider,"## Proposed changes

- just refactoring and cleanup of RevisionGraphColumnProvider

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-22T15:57:41Z,2023-12-23T09:12:51Z,2023-12-23T09:12:51Z,,master,refactor/revisiongraphcolumnprovider,3,90,119,2,0,0,"RussKie, pmiossec","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11463
11462,FormFileHistory: Do not refresh revision grid twice on load,"## Proposed changes

- FormFileHistory: Do not refresh revision grid twice on load
  which is ignored before #11205

Found with #11460
that both `RevisionGrid.SetAndApplyPathFilter` and `RevisionGrid.Load` call `PerformRefreshRevisions`:

```
        public new void Load()
        {
            if (!DesignMode)
            {
                PerformRefreshRevisions();
            }
        }
```

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-21T21:18:25Z,2023-12-24T01:43:57Z,2023-12-24T01:43:57Z,,master,fix/load_file_history,1,0,1,1,0,1,"gerhardol, RussKie","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11462
11461,Correctly rethrow exception from revision reader,"Recommended in https://github.com/gitextensions/gitextensions/issues/11460#issuecomment-1865099903

## Proposed changes

- Correctly rethrow exception from revision reader with the original stack trace

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

```
System.InvalidOperationException: Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.
   at void GitUI.RevisionGridControl.PerformRefreshRevisions(Func<RefsFilter, IReadOnlyList<IGitRef>> getRefs, bool forceRefreshRefs)+() => { } in D:/Build/gitextensions3/GitUI/UserControls/RevisionGrid/RevisionGridControl.cs:line 1352
   at async Task GitUI.TaskManager.HandleExceptionsAsync(Func<Task> asyncAction, Func<Exception, Task> handleExceptionAsync) in D:/Build/gitextensions3/GitExtUtils/GitUI/TaskManager.cs:line 28
```

### After

```
System.InvalidOperationException: Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.
   at bool System.Collections.Generic.Dictionary<TKey, TValue>.TryInsert(TKey key, TValue value, InsertionBehavior behavior)
   at string GitUI.RevisionGridControl+<>c__DisplayClass145_0.<PerformRefreshRevisions>g__BuildPathFilter|5(?)+BuildPathFilter(string path) in D:/Build/gitextensions3/GitUI/UserControls/RevisionGrid/RevisionGridControl.cs:line 1222
   at void GitUI.RevisionGridControl.PerformRefreshRevisions(Func<RefsFilter, IReadOnlyList<IGitRef>> getRefs, bool forceRefreshRefs)+() => { } in D:/Build/gitextensions3/GitUI/UserControls/RevisionGrid/RevisionGridControl.cs:line 1079
   at void GitUI.TaskManager.HandleExceptions(Action action, Action<Exception> handleException) in D:/Build/gitextensions3/GitExtUtils/GitUI/TaskManager.cs:line 47
   at void GitUI.RevisionGridControl.PerformRefreshRevisions(Func<RefsFilter, IReadOnlyList<IGitRef>> getRefs, bool forceRefreshRefs)+() => { } in D:/Build/gitextensions3/GitUI/UserControls/RevisionGrid/RevisionGridControl.cs:line 1357
   at Func<Task> GitUI.TaskManager.AsyncAction(Action action)+() => { } in D:/Build/gitextensions3/GitExtUtils/GitUI/TaskManager.cs:line 63
   at async Task GitUI.TaskManager.HandleExceptionsAsync(Func<Task> asyncAction, Func<Exception, Task> handleExceptionAsync) in D:/Build/gitextensions3/GitExtUtils/GitUI/TaskManager.cs:line 28
```

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-21T21:18:18Z,2023-12-22T01:19:26Z,2023-12-22T01:19:26Z,,master,fix/revision_reader_exception,1,2,1,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11461
11458,Calculate ahead-behind on worker thread,"Follow up to https://github.com/gitextensions/gitextensions/pull/11445#issuecomment-1861751454

## Proposed changes

Update after spinner is closed

Sidepanel calls are unchanged, FormBrowse is normally start first from what I see.

A second part could be to delay the start of the command until git-log delivers revisions.

## Test methodology <!-- How did you ensure quality? -->

Manual - inserted delay to the Git command

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-19T21:55:51Z,2023-12-23T11:45:14Z,2023-12-23T11:45:14Z,,master,feature/aheadbehind-browse,5,93,56,1,6,3,"mstv, mstv, gerhardol, gerhardol, mstv, pmiossec, pmiossec, pmiossec, pmiossec, mstv, pmiossec, gerhardol, pmiossec, pmiossec, gerhardol, gerhardol, gerhardol, pmiossec, gerhardol","COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11458
11457,Do not straighten graph if it is too wide,"Fixes #11292 for vNext
Draft because based on #11456 and #10637

## Proposed changes

- Do not straighten graph if it is too wide with configurable limit

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-19T20:54:07Z,2024-02-18T12:14:22Z,,,master,fix/i11292_graph_perf_2_of_2_vnext,30,1064,90,6,0,0,,,True,https://api.github.com/repos/gitextensions/gitextensions/issues/11457
11456,Improve graph performance (vNext),"#11450 for vNext
Contributes to #11292
Replaces (the already deactivated) #11294

## Proposed changes

- Calculate `LaneSharing` without previous row, but add `RevisionGraphSegment.IsSecondarySharedLaneAtLeastSinceScore` in order to store the sharing state
  (The rows / revisions are sorted by `RevisionGraphRevision.Score`. The comparison based on the `Score` ensures that `LaneSharing.Entire` is not returned by mistake on repeated calls of `SecondarySharing` for the same row.)
- Revert #11294

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-19T20:04:23Z,2024-02-28T19:14:18Z,2024-02-28T19:14:18Z,,master,fix/i11292_graph_perf,4,25,35,2,7,1,"gerhardol, mstv","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11456
11454,ICSharpCode.TextEditor: Improve C# syntax highlighting,"Include https://github.com/gitextensions/ICSharpCode.TextEditor/pull/37 in GitExtensions:

* adds some missing keywords
* changes group of some keywords (class, interface, record) to be color consistent
* colors type name definition
* highlight method definition and calls  (like in VisualStudio)
* highlight statement keywords differently (like in VisualStudio)

## Screenshots <!-- Remove this section if PR does not change UI -->

See https://github.com/gitextensions/ICSharpCode.TextEditor/pull/37

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-18T10:16:42Z,2023-12-19T07:45:19Z,2023-12-19T07:45:19Z,,master,csharp_syntax_highlighting,1,1,1,1,0,0,"RussKie, gerhardol, mstv","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11454
11452,Remove assert in CalculateGraphIndices(),"## Proposed changes

As we try to retain selections when switching repos, this assert is often incorrect.

A more proper assert would require more logic and info from RevGrid, just complicating.

## Test methodology <!-- How did you ensure quality? -->

Manual removal.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-17T21:10:58Z,2023-12-19T20:42:22Z,2023-12-19T20:42:21Z,,master,feature/reset-graph-indicies-assert,1,12,18,1,0,0,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11452
11451,Fixup graph performance,"Fixes #11292

## Proposed changes

Revert commit c621412b43f96686c230377abbb4a83c3ac91f3b
because (implicitly) calling `RevisionGraphRow.BuildSegmentLanes` for every revision is too much in the Linux repo f.i.

For vNext, I am going to make this limit configurable.

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual: open Linux repo and go to the initial commit when ""Loading..."" disappears, wait for the graph

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-17T15:50:08Z,2024-01-06T17:44:07Z,2024-01-06T17:44:07Z,,release/4.0,fix/i11292_graph_perf_2_of_2,1,8,2,1,3,1,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11451
11450,Improve graph performance,"Contributes to #11292
Replaces #11294

## Proposed changes

- Calculate `LaneSharing` without previous row, but add `RevisionGraphSegment.IsSecondarySharedLane` in order to store the sharing state
- Revert #11294

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Please do not sqush merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-17T01:21:56Z,2023-12-19T19:38:35Z,,":eyeglasses: status: needs review, status: ready",release/4.0,fix/i11292_graph_perf,0,0,0,0,2,1,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11450
11449,Skip moving invisible graph lanes,"Contributes to #11441 and #11292

## Proposed changes

- Skip moving invisible graph lanes
  in order to improve the performance in case of many parallel branches

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- adapted tests
- For tests with the Linux repo, you should activate `#define ALL_PRIMARY_LANES` from #11294 for the time being

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-16T00:27:10Z,2024-06-04T19:53:31Z,,,master,fix/graph_perf_move_lanes,4,26,22,2,1,1,"gerhardol, mstv","COMMENTED, COMMENTED",True,https://api.github.com/repos/gitextensions/gitextensions/issues/11449
11448,Improve graph tests,"## Proposed changes

- Add testcases `MoveVisibleAndInvisibleLanesRight`
- Improve and fixup `RevisionGraphTests.AsciiGraphFor`
  - name nodes
  - leading whitespace must not be trimmed
- Trace exceptions from graph rendering

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before | After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/7590b2f9-1434-4d64-b8ee-dba6b338a8a1)

## Test methodology <!-- How did you ensure quality? -->

- existing and added testcases

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-16T00:13:32Z,2023-12-16T15:00:13Z,2023-12-16T15:00:13Z,,master,feature/improve_graph_tests,18,423,173,2,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11448
11447,Improve (hugely!) impact graph performance,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11411

## Proposed changes

1. Rendering now takes less than 1s (whereas it was taking minutes on big repositories like GitExtensions --around 7min-- or Git --around 1h08min--ones).

So now the time to build the impact graph correspond only to the time to retrieve data from repo. 

I did one benchmark on git repository for the rendering:
* before: 1h8min
* after: 0.76s (around x5300 times quicker!!)

Retrieving data still takes around 30s, so overall process was before 1h9min and after 30s (x130 times quicker!)

GitExtensions repo: now total time 23s (200ms of rendering)

2. Submodule checkbox change doesn't cancel the long main data retrieve and data are put in a cache so that switch is immediate (instead of fetching the data again every times)
3. Display is done depending on 1st day of the week culture setting


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 72f0d419fcce299752cc26c96009c6dab53aba89 (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to rebase (preferred) or squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer rebase (preferred) or squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-15T15:45:13Z,2023-12-24T01:42:48Z,2023-12-24T01:42:48Z,,master,perfs/impact_graph,3,259,223,11,1,0,"RussKie, RussKie, pmiossec, RussKie, RussKie, pmiossec, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11447
11445,Improve performance of left panel reload,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->
Improvement over https://github.com/gitextensions/gitextensions/discussions/11441#discussioncomment-7829262

## Proposed changes

- Improve performance when reloading left panel (with 20k refs in repository, treeview refresh block the UI now around 2.5s while it was around 6.5s before this fix). Note: the first loading is still slow but after it's much more usable.
- Fix a temporary bad state that is much more likely to occur when ahead/behind data are retrieved (which are slow)and now that treeview load quicker.
- Some other small performance improvements

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

<!-- TODO -->

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 4c9e8a8f933d2ba5aab92569b5c53bc17069f253
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer *rebase* merge this PR (if the commit message is clear).
Note: better reviewed commit by commit

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).

",closed,2023-12-14T16:02:11Z,2023-12-19T13:51:17Z,2023-12-19T13:51:17Z,,master,perfs/left_panel_reload,6,77,35,5,9,0,"RussKie, gerhardol, pmiossec, RussKie","COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11445
11442,Create .git/info/ before creating exclude file,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11430

## Proposed changes

- Create folder `.git/info/` before creating the `exclude` file
- Make `Validates.NotNull` return the non-null value

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-11T18:21:08Z,2023-12-19T16:44:48Z,2023-12-19T16:44:48Z,,release/4.0,fix/i11430_create_git_info_dir,2,4,2,3,0,1,"gerhardol, vbjay, vbjay, RussKie, mstv, mstv, RussKie, vbjay, mstv, gerhardol, RussKie","COMMENTED, CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11442
11437,Refresh after checking out tag using Left Panel,"Fixes #11427

## Proposed changes

- Open the `FormCheckoutRevision` using the `UICommands.StartCheckoutRevisionDialog`,
  which wraps the call with `DoActionOnRepo`, runs pre/post scripts and notifies about the repo change 

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-10T20:21:40Z,2023-12-11T15:03:20Z,2023-12-11T15:03:20Z,,master,fix/i11427_checkout_tag,1,1,3,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11437
11435,FormResetAnotherBranch: remove useless failing assert on posix path,"to prevent a Debug failure to be raised (and opening a VS instance on debug builds)

Made useless following a refactoring of the api that now accept all path format and convert it in posix

## Screenshots <!-- Remove this section if PR does not change UI -->

No UI change

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->
- Git Extensions 33.33.33
- Build 403278735fbbfe378600e73b4c7e13e6b49957c9 (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-08T11:35:48Z,2023-12-15T09:20:22Z,2023-12-15T09:20:22Z,,master,fix/reset_other_branch_posix,1,1,5,1,2,2,"mstv, pmiossec, mstv, pmiossec, gerhardol, RussKie","COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11435
11434,Improve blame feature,"## Proposed changes

- better default value for ""change move detection"" setting (because the ""break"" blame)
- Add a warning that these ""change move detection"" options doesn't work well with blame feature
- improve blame option labels
- better line selection when switching revision from revision grid during a blame
- better estimate line number for ""blame previous commit""

(better reviewed commit by commit)

## Screenshots <!-- Remove this section if PR does not change UI -->

### Setting

#### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/3aef252a-8642-488c-b818-daab31690361)

#### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/b50f50d5-1eb0-43a0-a019-ee2f83c12554)

### Change revision line

#### Before

return at the  begin of file:

![blame_other_revision_before](https://github.com/gitextensions/gitextensions/assets/460196/6ea79cef-cc69-42b2-8c83-2e930fc25973)

#### After

stay at the same line:

![blame_other_revision](https://github.com/gitextensions/gitextensions/assets/460196/713766e2-f5c4-47f1-a195-cddabba043e6)


### Blame previous revision

Scenario: go to commit 7edc265403b54dd8ea2b8402f8790219d8d42077 and blame FormBrowse.cs
then blame ""previous revision"" on line 2281
( the commit 52476f30670ba5338756b606841fb0a346fd6460 add a lot of lines --89-- before this line 2281 )

#### Before

(we end up at 89 lines of the right position and it's very difficult to find the good code --we need to search for some text--)
![blame_prefvious_revision_before](https://github.com/gitextensions/gitextensions/assets/460196/6e026a2b-926b-49d8-af85-ef9fb6a6822a)


#### After

(we end up at the right position, ready to blame again if needed)
![blame_prefvious_revision_after](https://github.com/gitextensions/gitextensions/assets/460196/fe87aad2-6fcb-41f5-b622-e0428710664e)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->
- Git Extensions 33.33.33
- Build 2ae38fae7dcc7a269300d7c05a4cba3e8c79a02e
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-07T15:55:23Z,2023-12-22T08:45:37Z,2023-12-22T08:45:37Z,release-notes-worthy,master,feat/improve_blame,14,190,21,5,2,2,"gerhardol, mstv, pmiossec, pmiossec, mstv, gerhardol, gerhardol, pmiossec, pmiossec, pmiossec, gerhardol, RussKie, pmiossec, mstv, pmiossec, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11434
11432,Tests runnable under dotnet 8 and latest R# - allow dotnet.exe as host,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

I`m compiling (and happily running) GE for dotnet 8, using latest VS2022 Enterprise and R#. 
Unit tests fail one assertion, because the host exe is not on the short whitelist. 

This PR simply adds dotnet.exe to this list.

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-07T11:45:14Z,2023-12-12T12:04:53Z,2023-12-12T12:04:53Z,:pen: status: cla signed,master,feature/allowNet8AndLatestReSharperTestRunner,2,3,1,1,1,0,"mstv, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11432
11431,Add GitExtensions.Extensibility,"## Proposed changes

- ~The initial move of all shared contracts and helper API to https://github.com/gitextensions/gitextensions.extensibility (see https://github.com/gitextensions/gitextensions.extensibility/pull/31).~ Create a new project called Gitextensions.Extensibility and move of all shared contracts and helper API.
- Updated namespaces.

This change allows for a separation of concerns - shared contracts that affect the main app as well as Git Extensions plugins will now reside in Gitextensions.Extensibility project, and concrete implementations of the contracts reside in the app.
This is a stepping stone in a direction of complete separation of the contracts and future move of those to https://github.com/gitextensions/gitextensions.extensibility project.

I expect further work will be required to clean the contract declarations (e.g., removal of default args as those play tricks on developers) as well as a holistic reassessment of the API surface.


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-07T08:00:53Z,2024-05-14T21:06:03Z,2024-05-14T21:06:03Z,,master,ge.extensibility,30,45,42,9,8,1,"mstv, RussKie, RussKie, mstv, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11431
11429,Ignore fetch/push options in configuration of remote repos,"Fixes #11424
Adapted version of #11425 for vNext

## Proposed changes

- Ignore fetch/push options in `RemoteVerboseLineRegex` used by `GetRemotesAsync`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- extended testcase

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-05T22:03:43Z,2023-12-07T20:49:36Z,2023-12-07T20:49:36Z,,master,feature/i11424_remotes_with_options_,2,11,3,3,0,1,"gerhardol, mstv, gerhardol, RussKie, mstv","APPROVED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11429
11428,Disable Italics _ in markdown,"## Proposed changes

https://github.com/gitextensions/ICSharpCode.TextEditor/pull/36

![image](https://github.com/gitextensions/gitextensions/assets/6248932/ff9f25e0-8e9c-4dd2-8a30-38cd3ac47b5d)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/e054530f-9d6b-4a73-8a22-3cb4bdc8409d)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-12-05T21:28:20Z,2023-12-05T21:57:59Z,2023-12-05T21:57:59Z,,master,feature/i35-markdown-italics-highlight,1,1,1,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11428
11425,Ignore fetch/push options in configuration of remote repos,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11424

## Proposed changes

- Ignore fetch/push options in `GetRemotesAsync`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- extended testcase

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-12-04T19:13:11Z,2023-12-05T21:49:46Z,2023-12-05T21:49:46Z,status: ready,release/4.0,feature/i11424_remotes_with_options,2,12,3,2,0,1,"RussKie, gerhardol, mstv, gerhardol, gerhardol","APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11425
11422,Pull PluginManager from NuGet instead of AppVeyor,,closed,2023-12-03T12:30:36Z,2024-08-01T13:58:50Z,,,master,pull_pluginmanager_from_nuget,6,24,69,1,1,1,mstv,COMMENTED,True,https://api.github.com/repos/gitextensions/gitextensions/issues/11422
11420,Use CPM,"* Remove the old implicit version of CPM and use the new CPM (see https://learn.microsoft.com/nuget/consume-packages/Central-Package-Management).
* Remove redundant codecov definitions
* Fix msi publishing
",closed,2023-12-03T07:00:13Z,2023-12-03T09:01:21Z,2023-12-03T09:01:21Z,,master,update_cpm,13,81,105,1,0,0,RussKie,COMMENTED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11420
11417,Add Notes column.,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

I need to see git notes in a separate column of RevisionGridControl. My notes are usually short and often re-generated by scripts.

The only initially visible change is a new menu item: View / Show git notes column.
Checking it adds a new column to the revision grid, between ""Message"" and ""Avatar"".
This column displays the first row of a note.
Notes displayed by CommitDataBodyRenderer (Commit tab of the ""Commit info"" pane) and MessageColumnProvider remain unaffected.

Checking either one of the ""Show notes..."" menu items enables note loading. Checking only the old menu item ""Show notes"" also shows notes ref.  Checking only the ""Show notes column"" item leads to displaynig notes text in columns and commit info, but hiding notes ""ref"".

I`ve simplified the code a bit, now the CommitData and GitRevision classes have separate members for ""Body"" and ""Notes"". Parsing/re-formatting logic has been adjusted accordingly, code duplicates were not fixed in order to minimise footprint.
This change probably also fixes some potential bugs, as the notes are no longer part of the content of the message body internally.

~Fixes #11413 

## Proposed changes

- 
- 
- 

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Originally without the column (menu item un-checked). 

![image](https://github.com/gitextensions/gitextensions/assets/64522720/eb0c06b6-4d98-4590-b029-36b4f760322c)

### After
Feature turned on, notes not displayed in MessageColumn, but in the separate one.
Either case, the notes are displayed in the ""commit info"" html pane, there`s plenty of space there.

![image](https://github.com/gitextensions/gitextensions/assets/64522720/0e83984f-4121-4dda-acd2-faca4eb5bd5e)


## Test methodology <!-- How did you ensure quality? -->

- 
- 
- 

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2023-11-30T23:33:23Z,,,,master,feature/addNotesColumn,30,182,94,1,21,2,"gerhardol, RussKie, pmgiant, pmgiant, pmgiant, pmgiant, pmgiant, pmgiant, pmgiant, pmgiant, pmgiant, pmgiant, RussKie, RussKie, pmgiant, pmgiant, pmgiant, pmgiant, RussKie, pmgiant, pmgiant, pmgiant, pmgiant, pmgiant, pmgiant, mstv, gerhardol, gerhardol, pmgiant, pmgiant","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11417
11416,Remove redundant GitUICommands.GitModule,"Fixes #11386

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-30T21:32:56Z,2023-12-01T02:09:52Z,2023-12-01T02:09:52Z,release-notes-worthy,master,fix/i11386_remove_gitmodule,26,51,53,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11416
11415,Fix failure to add repository path as safe directory,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11414

## Proposed changes

- Trim white space from the command before running it

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-30T18:17:25Z,2024-01-14T11:31:47Z,2024-01-14T11:31:47Z,":pen: status: cla signed, :mailbox_with_no_mail: needs: author feedback, status: abandoned",master,patch-1,2,2,1,3,3,3,"mstv, gerhardol, RussKie","APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11415
11412,Plugins: Fail to load a plugin no more prevent loading of all others,"When a plugin fail to load and an exception is raised, no plugin was added to the `Plugins` collection
and so none was added to the menu in the UI.

Will mitigate the case where external plugins not (yet) compatible won't prevent internal plugins to load.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/657c722a-5ee8-4fd3-ac78-8596f2f7c5cb)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/229d417c-501e-417e-8464-1cb259219c14)

![image](https://github.com/gitextensions/gitextensions/assets/460196/099eb0e1-d361-485c-ab5d-3d8947ddbe2e)


## Test methodology <!-- How did you ensure quality? -->

- Manual ( test a current `master` with #11397 )

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build b98f9600d6dd6de04644191a64b2881fff057fd9 (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-30T16:13:17Z,2023-12-06T01:35:03Z,2023-12-06T01:35:03Z,,master,fix/manage_plugin_loading_failure,4,106,4,1,11,4,"mstv, RussKie, RussKie, RussKie, gerhardol, pmiossec, pmiossec, gerhardol, RussKie, pmiossec, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11412
11410,UseWaitCursor when waiting for Impact Graph results (#11409),"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11409 

## Proposed changes
Add waiting cursor when mouse is over the form to be painted.
- 

## Test methodology 

- Built and ran.

## Test environment(s) 

- GIT 2.42windows2
- Windows 10 22H2

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Rebase merge (PR submitter must change the commit message for the last commit).

The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-30T00:34:47Z,2023-12-01T02:25:39Z,2023-12-01T02:25:39Z,:pen: status: cla signed,master,fix-11409,2,6,0,2,3,0,"RussKie, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11410
11408,Remove bad shortcut association (rebase on pull-rebase),"## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/df1f0cc7-acda-49e6-8a1a-096a86152c5e)

### After
![image](https://github.com/gitextensions/gitextensions/assets/460196/d3e6e010-d39b-4f1d-97cc-5a0d3757923c)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 69d17129d78cefd5c98d5ada53ee7bc643c51456
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 8.0.0
- DPI 96dpi (no scaling)
- Portable: False


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-29T13:16:54Z,2023-11-29T22:18:34Z,2023-11-29T22:18:34Z,,master,fix/shortcut,1,0,1,1,0,0,"gerhardol, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11408
11403,Add option to set category to FormClone/FormInit,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11312 

## Proposed changes
Add an option to assign a category on creating or cloning a repository via an editable combobox (disabled by default). I don't think it makes sense from UX point of view to add it also to FormOpen. 

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
![image](https://github.com/gitextensions/gitextensions/assets/23001472/b9e5c634-eaab-4f3c-974d-87044983ddae)
![image](https://github.com/gitextensions/gitextensions/assets/23001472/91de93d9-503c-42f1-bcfa-9c76fba2344e)

### After
![image](https://github.com/gitextensions/gitextensions/assets/23001472/d1aceba5-1d5c-4528-8212-5582c18f7099)
![image](https://github.com/gitextensions/gitextensions/assets/23001472/2f6ebb3e-dea5-4cfb-bf09-81aaa3d65061)
![image](https://github.com/gitextensions/gitextensions/assets/23001472/0f0a3628-a9cb-4175-9f1f-4f7c516d84b0)
![image](https://github.com/gitextensions/gitextensions/assets/23001472/e481ebd1-3b4b-4963-9a64-1b268764fe1d)

## Test methodology <!-- How did you ensure quality? -->

Manual testing.

## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.43.0
- Microsoft Windows NT 10.0.22621.0

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2023-11-27T21:52:18Z,,,:pen: status: cla signed,master,fix_11312,4,118,5,1,7,1,pmiossec,CHANGES_REQUESTED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11403
11402,CommitMessage improvements,"* Better automatically close the auto-completion popup
   * when pressing a Separator character (class of char extended to include some chars common in file names)
   * when deleting the word that triggered opening

Related to #6185

* Add Commit message metadata provider that add some metadata strings in auto-completion:
""Co-authored-by: "", ""Signed-off-by: "", ""BREAKING CHANGE: "", ""Reviewed-by: "", ""Tested-by: ""

Fixes #5903

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Nothing

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/725441a8-7d5b-4e97-8019-700ef4467bed)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **Rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-27T21:51:51Z,2023-12-03T03:31:43Z,2023-12-03T03:31:43Z,release-notes-worthy,master,improve_autocomplete_behavior,5,45,6,3,0,1,"RussKie, vbjay, pmiossec, pmiossec, mstv, RussKie, RussKie, RussKie, pmiossec, mstv, mstv, RussKie, pmiossec, pmiossec, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11402
11397,Rename ISettingsSource -> SettingsSource because it's not interface,Just a mechanical rename,closed,2023-11-27T10:04:04Z,2023-11-28T00:25:47Z,2023-11-28T00:25:47Z,release-notes-worthy,master,ISettingsSource,30,56,56,1,2,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11397
11394,Update README.md,"- Update the dev branch requirements (.NET 8)
- Remove old build instructions, point to the wiki instead (the wiki is already updated).",closed,2023-11-26T05:21:08Z,2023-11-26T09:23:27Z,2023-11-26T09:23:27Z,,master,RussKie-patch-1,1,5,104,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11394
11393,Avoid popup resetting new file to index,"Fixes #11391

## Proposed changes

Avoid a popup when resetting worktree files

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-25T20:05:27Z,2023-11-26T04:38:45Z,2023-11-26T04:38:45Z,,release/4.0,feature/i11391-reset-new-popup,1,6,0,1,0,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11393
11390,"FormResetAnotherBranch: if there is only 1 similar remote, select it …","…by default

i.e. remote tracking ref or remote ref with same name

making it a more convenient:
* to sync local branch with origin
* to sync local branch with upstream

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![reset_other_branch_before](https://github.com/gitextensions/gitextensions/assets/460196/ba061c05-eb20-4adb-8a23-ea4839612268)


### After

The local branch which track or has same name is already selected and user only has to validate

![reset_other_branch_autoselect](https://github.com/gitextensions/gitextensions/assets/460196/b8a25db4-ede1-4f6b-ac7a-1cb9f54c4333)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->
- Git Extensions 33.33.33
- Build e89f940bbcda1d708bb98381c9efd5e9917a90ef
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.25
- DPI 96dpi (no scaling)
- Portable: False


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-24T17:01:32Z,2023-12-03T03:32:43Z,2023-12-03T03:32:43Z,,master,reset_other_branch_autoselect,2,25,1,3,5,3,"mstv, RussKie, gerhardol, mstv, pmiossec","COMMENTED, APPROVED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11390
11389,GPG: don't crash on artificial commits,"and hide the tab

Fixes #11388

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Crash

### After

We don't see the tab anymore:
![image](https://github.com/gitextensions/gitextensions/assets/460196/f644b100-f32b-44b6-a34d-993e8d36da69)


## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 6dd05e51f3540f6d9d0ee2c8b12e780230c8c1c6 (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.25
- DPI 96dpi (no scaling)
- Portable: False


<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-24T16:32:37Z,2023-11-26T04:41:18Z,2023-11-26T04:41:18Z,,release/4.0,fix_gpg_artificials,1,16,0,1,0,1,"RussKie, mstv, RussKie, mstv, pmiossec, RussKie, RussKie, pmiossec, mstv, gerhardol, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11389
11384,Do not migrate empty settings,"Fixes #11383

## Proposed changes

Do not migrate empty settings

## Test methodology <!-- How did you ensure quality? -->

manual edit the settings file

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-22T22:39:15Z,2023-11-25T22:58:10Z,2023-11-25T22:58:10Z,,release/4.0,feature/i11383-serialize-empty,2,8,4,2,1,2,"mstv, RussKie, RussKie, RussKie","APPROVED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11384
11381,GitExtSshAskPass: Ensure chars are outputed as UTF8 chars,"because ""By default, windows console does not process wide characters.""

See https://stackoverflow.com/a/15450250/717372
    & https://learn.microsoft.com/en-us/cpp/c-runtime-library/reference/setmode?view=msvc-170&redirectedfrom=MSDN

Fixes #11379

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Test methodology <!-- How did you ensure quality? -->

- Manual (and it's a pain!)
    - Run `./GitExtSshAskPass.exe` **from git bash** (the others consoles don't display outputs or display it wrong!!)
    - or run `.\GitExtSshAskPass.exe > output.txt` and check file content

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-22T11:21:33Z,2023-11-24T01:18:36Z,2023-11-24T01:18:36Z,,release/4.0,fix_unicode_sshaskpass,1,7,0,1,1,1,gerhardol,COMMENTED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11381
11376,Delete unused branch plugin: Makes GetBranchNames() support worktrees,"by parsing correctly the output of the command
`git branch --list --merged HEAD`
that contains ""+ "" prefix in front of branch names checked out in git worktrees

+ add support of some other edge cases

Fixes #11375

+ makes git log command a little more resilient by appending '--' like done in #11277 (if it will fail in the future, it will be with a little better error message)

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/f23cbed7-2bdf-4f5d-8f4e-27d4a4b1810f)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/21aed0c5-0d11-478b-bd04-3720985c3ddb)

## Test methodology <!-- How did you ensure quality? -->

- unit tests
- manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-21T13:54:03Z,2023-11-23T03:34:31Z,2023-11-23T03:34:31Z,,release/4.0,fix_delete_unused_branch_when_worktree,3,25,6,1,6,2,"mstv, gerhardol, RussKie","APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11376
11372,IDE000028 Collection expressions,"Depends on #11240 
See also #11371

## Proposed changes

Use collection expressions: https://learn.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-12#collection-expressions

Basically, it is an enhanced `new()`, like:
```
-            List<BatchArgumentItem> batches = new();
+            List<BatchArgumentItem> batches = [];
```

(This PR enables that syntax also where `new()` not applied previously.)

Also some conditional allowed (but I had to remove some added by the analyzer due to syntax failure).
*Error	CS0173	Type of conditional expression cannot be determined because there is no implicit conversion between 'collection expressions' and 'collection expressions'	UI.IntegrationTests	C:\dev\gc\gitextensions\IntegrationTests\UI.IntegrationTests\GitUICommands\RunCommandTests.cs	212	Active*

Not working
```
-            List<string> args = new() { ""ge.exe"", command, ""filename"" };
-            args.Add(commitValid ? _referenceRepository.CommitHash : ""no-commit"");
-            if (filter)
-            {
-                args.Add(filterValid ? ""--filter-by-revision"" : ""invalid"");
-            }
+            List<string> args =
+            [
+                ""ge.exe"", command, ""filename"",
+                commitValid ? _referenceRepository.CommitHash : ""no-commit"",
+                .. filter ? [filterValid ? ""--filter-by-revision"" : ""invalid""] : [],
+            ];
```

OK
```
diff --git a/GitCommands/Git/Commands.Arguments.cs b/GitCommands/Git/Commands.Arguments.cs
index baff60..51f18 100644
--- a/GitCommands/Git/Commands.Arguments.cs
+++ b/GitCommands/Git/Commands.Arguments.cs
@@ -351,10 +351,12 @@ static ArgumentString GitRefsPattern(RefsFilter option)
                     return string.Empty;
                 }
 
-                ArgumentBuilder builder = new();
-                builder.Add((option & RefsFilter.Heads) != 0, ""refs/heads/"");
-                builder.Add((option & RefsFilter.Remotes) != 0, ""refs/remotes/"");
-                builder.Add((option & RefsFilter.Tags) != 0, ""refs/tags/"");
+                ArgumentBuilder builder = new()
+                {
+                    { (option & RefsFilter.Heads) != 0, ""refs/heads/"" },
+                    { (option & RefsFilter.Remotes) != 0, ""refs/remotes/"" },
+                    { (option & RefsFilter.Tags) != 0, ""refs/tags/"" }
+                };
 
                 return builder;
             }
```

Note that stylecop does not allow this syntax yet:
https://github.com/DotNetAnalyzers/StyleCopAnalyzers/issues/3687
https://github.com/DotNetAnalyzers/StyleCopAnalyzers/blob/master/documentation/SA1010.md

newline hade to be added

```
diff --git a/UnitTests/GitCommands.Tests/UserRepositoryHistory/RepositoryStorageTests.cs b/UnitTests/GitCommands.Tests/UserRepositoryHistory/RepositoryStorageTests.cs
index 0dc11..4bc47 100644
--- a/UnitTests/GitCommands.Tests/UserRepositoryHistory/RepositoryStorageTests.cs
+++ b/UnitTests/GitCommands.Tests/UserRepositoryHistory/RepositoryStorageTests.cs
@@ -59,6 +59,7 @@ public void Load_should_return_collection()
                 {
                     Anchor = Repository.RepositoryAnchor.AllRecent,
                 }
+
             ];
             _repositorySerialiser.Deserialize(Arg.Any<string>()).Returns(x => history);
```

## Test methodology <!-- How did you ensure quality? -->

Tests

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-19T20:22:20Z,2023-11-26T09:23:42Z,2023-11-26T09:23:42Z,,master,feature/ide000028-init-list,30,92,89,2,1,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11372
11371,SYSLIB1045 compile regex at compiletime,"Depends on #11240 

## Proposed changes

- Enable C# 12

- https://devblogs.microsoft.com/dotnet/regular-expression-improvements-in-dotnet-7/#source-generation

Compile all static regex at compile time instead of at runtime.
See also #11370 that refers to https://learn.microsoft.com/en-us/dotnet/standard/base-types/best-practices-regex#regular-expressions-compiled-to-an-assembly
Before .NET7 either interpreted that executes slightly slower or compiled that slows down starting was used.  
For .NET7 the recommended use is to compile regex at compile time, with both advantages.

This PR implements the analyzer suggestion with a few manual tweaks:
- For all regex with previous `private static readonly Regex` the `[GeneratedRegex` attribute was placed in the top, to simplify comparisons
- Option RegexOptions.Compiled was manually removed
- The default name MyRegex was changed to something meaningful
- Some variables without any use was removed
- A few minor adjustments and suggestions done.

## Test methodology <!-- How did you ensure quality? -->

- Tests still run

## Merge strategy

- squash

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-19T18:52:15Z,2023-11-28T00:27:27Z,2023-11-28T00:27:27Z,,master,feature/net8-regex,30,249,152,2,3,2,"mstv, gerhardol, gerhardol, gerhardol, mstv, gerhardol, RussKie, gerhardol, gerhardol, gerhardol, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11371
11370,Use static Regex in a few more situations,"## Proposed changes

Skip Compiled regex for a few non static regex

That are not expected to be executing extremely often, why interpreted regex is expected to be faster.

--

A refresh of regex usage according to https://learn.microsoft.com/en-us/dotnet/standard/base-types/best-practices-regex

Most other regex will be compiled in compile time with an upcoming PR for .NEt8 C# 12 (really added in .NET7 C# 11).

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-19T17:09:47Z,2023-11-20T21:40:16Z,2023-11-20T21:40:16Z,,master,feature/regex-tune,3,6,24,2,0,0,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11370
11369,Let git deny the commit if committer is not specified,"Fixes #11366
Fixes #11368

## Proposed changes

- Let git deny the commit if committer is not specified
  - Let `GetEffectiveGitSetting` return `null` if the setting is not set
  - Remove `FormCommit.OnActivated` in order to avoid repeated exception popups from the only called function `UpdateAuthorInfo`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

Exception (repeated exceptions unless quickly repeating `Esc`)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/a947b1c4-0085-48cc-b8f1-f609899a82f6)

## Test methodology <!-- How did you ensure quality? -->

- manual
- adapt affected testcase

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-18T18:29:40Z,2023-11-20T22:59:46Z,2023-11-20T22:59:46Z,,master,fix/i11366_committer_info,7,36,20,5,3,1,"gerhardol, mstv, gerhardol, RussKie, vbjay, mstv, mstv, mstv, RussKie, RussKie","COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11369
11363,FormCommit always has a _currentFilesList,"Addresses https://github.com/gitextensions/gitextensions/pull/11239#discussion_r1391544925

## Proposed changes

- FormCommit always has a `_currentFilesList`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-16T22:58:10Z,2023-11-18T08:55:35Z,2023-11-18T08:55:35Z,,master,formcommit_focus,1,9,12,1,2,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11363
11362,Fixup regression in Commands.Arguments.Commit,"Fixes https://github.com/gitextensions/gitextensions/pull/11308/files#r1394980653

## Proposed changes

- Restore adapted path for `commit` command
- Rename `GetGitExecPath` to `GetPathForGitExecution` in order to avoid misleading abbreviation
- Force all callers to pass `GitModule.GetPathForGitExecution`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- adapted existing tests
- add testcase for the regression

## Please do not squash merge!

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-16T22:41:33Z,2023-11-18T08:54:23Z,2023-11-18T08:54:23Z,,master,fix/commit_cmdargs,17,92,79,2,1,2,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11362
11351,Merge release branch,"## Proposed changes

- Merge changes committed to branch `release/4.0` except
  - graph performance ""hotfix""
  - translations
  - build scripts
- Resolve merge conflicts:
  * GitCommands/Settings/AppSettings.cs
  * GitUI/CommandsDialogs/FormAbout.Designer.cs
  * GitUI/CommandsDialogs/FormCommit.Designer.cs
  * GitUI/LeftPanel/RepoObjectsTree.cs
  * IntegrationTests/UI.IntegrationTests/GitCommands/GitModuleTests.cs
  * UnitTests/GitCommands.Tests/Settings/AppSettingsTests.cs
  * UnitTests/GitUI.Tests/UserControls/RevisionGrid/Graph/RevisionGraphTests.cs
 
## Screenshots <!-- Remove this section if PR does not change UI -->

would be many

## Test methodology <!-- How did you ensure quality? -->

- compared diffs v4.2-rc1 .. release/4.0 with 
- existing (merged) tests

## Please do not squash this nor create another merge commit

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-12T21:54:05Z,2023-11-13T18:21:42Z,2023-11-13T18:21:42Z,,master,merge_release,30,676,353,23,2,1,"mstv, gerhardol","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11351
11350,git-grep UI,"Fixes #4912
Depends on #11590 , only 92d937e21c88295b37be2f760ce91560c2e9ddb3 (and forward if added later) to be reviewed

## Proposed changes

An UI for git-grep, to search commits without checking out those commits. (When working with this I have often used it to view worktree too.)
https://git-scm.com/docs/git-grep

The UI in this PR adds a popup as well as a searchbox to the Diff tab.

The searchbox dropdown has the search history for the GE session, not persistent.
The popup and searchbox are kept in sync.

Search in the popup is done when button is pressed (or Enter),
the diff tab box is searching when typing (similar in the filter).
If there is no `-e ` in the search string, this is added to the search string.
Most git-grep options can be added, including  `--and` etc.

git-grep options to handle case insensitive is available, but most options can be added in the searchbox.
Persistent options can be added too for instance `--show-function`.

The output of git-grep is always for a commit, including index and worktree.
Note that the selected file in the grep group is not always followed when a new commit is selected, as it is not the primary group. This could be specially handled (but ""grep"" knowledge need to be added to RevDiff).

Performance
In the Git repo, the git-grep requires about 200 ms for me, the information is added async after normal diff so no visible.
For the Linux repo, git-grep can require several seconds. As the current search is aborted when a new is started, works fine for me.
The processing in the fileviewer is faster than for normal diffs.

Limitations are basically the same as #11590 ,missing
* Documentation for the changes, how colors etc can be changed by Git config
* tests for the new functionality. May be postponed to a later PR

## Screenshots <!-- Remove this section if PR does not change UI -->

### After

The popup window and the optional FileStatusList combobox
![image](https://github.com/gitextensions/gitextensions/assets/6248932/5d30eb67-2272-41ac-b5a8-d5d946311c3b)

Example usage.
![grep-example](https://github.com/gitextensions/gitextensions/assets/6248932/f458a445-4104-4cec-8968-fe798dfe2afe)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

squash.

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-12T19:25:24Z,2024-03-27T21:06:21Z,2024-03-27T21:06:21Z,release-notes-worthy,master,feature/i4912-git-grep-ui,30,1280,58,14,30,4,"mstv, mstv, gerhardol, gerhardol, gerhardol, mstv, gerhardol, mstv, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, gerhardol, gerhardol, mstv, mstv, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11350
11349,Prepare FileViewer for git-grep,"## Proposed changes

The primary intention with this PR is to prepare FileViewer for git-grep in #4912 
A separate PR will be opened for the actual changes, the UI is to be discussed.
However, these changes improves the structure regardless and is opened separatetly.

### Refactor highlighting

Add a base class for the highlight service primarily used for diff highlighting.
Rename AddPatchHighlighting() to AddTextHighlighting() as the method
also have other uses.

The DiffHighlightService also handles the format for patching etc,
used when copying patches and navigating next/previous.

Separate the unrelated HighlightLines() currently only used by Blame to
mark all kind of lines.

Remove unused HighlightLine()

### Separate internals to FileViewerInternal

Limit exposure of internal structure by moving some text handling
to FileViewerInternal.
Remove the unused functions from IFileViewer.

Refactor goto next/previous change, separate range-diff.
Do not got the empty last line for range-diff.
Include the 'context header' when presenting the diff.

## Screenshots <!-- Remove this section if PR does not change UI -->

No real  changes, some improvements to the behavior.

When increasing the context size.
(header with function name is shown for the default context size 3)
If there is no diff divider, just another line is shown.

Before
![image](https://github.com/gitextensions/gitextensions/assets/6248932/787ca9bb-d40e-4710-9f3a-e357fda74317)

After
![image](https://github.com/gitextensions/gitextensions/assets/6248932/19ca9027-67b6-45b6-8828-bfb9a4222987)

If advancing range-diff at last occurrence, the diff stay on the last match.

Before
![image](https://github.com/gitextensions/gitextensions/assets/6248932/2abab3e4-0a0b-4d6b-acd2-e99a5ba23902)

After
![image](https://github.com/gitextensions/gitextensions/assets/6248932/5568619f-ed94-44e2-bca4-a9e372ec3319)

## Test methodology <!-- How did you ensure quality? -->

Manual, some tests exists

## Merge strategy

- Rebase merge (PR submitter must change the commit message for the last commit).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-12T17:29:41Z,2023-11-28T22:47:03Z,2023-11-28T22:47:03Z,,master,feature/i4912-git-grep-prepare,10,354,237,2,1,2,"mstv, mstv, gerhardol, gerhardol, mstv, mstv, gerhardol, gerhardol, mstv, gerhardol, gerhardol, mstv, gerhardol, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11349
11348,SetDocumentationBaseUrl using ProductVersion,"Fixes #11338
Supersedes #11339

## Proposed changes

- Pass `AppSettings.ProductVersion` to `AppSettings.SetDocumentationBaseUrl` 

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- adapted tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-12T11:18:11Z,2023-11-12T18:58:25Z,2023-11-12T18:58:25Z,,release/4.0,help_by_product_version,5,24,21,2,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11348
11345,Partly manually convert designer files to newly generated format,"## Proposed changes

Did a manual conversion of all `.Designers.cs` files with no behavior change in the application on the more frequent changes.
**With the goal to make easier the code review for later PRs** (There will still be more or less changes but it's human readable to detect some strange things...)

Due to that: https://github.com/dotnet/winforms/blob/main/docs/designer/modernization-of-code-behind-in-OOP-designer/modernization-of-code-behind-in-oop-designer.md

## Test methodology <!-- How did you ensure quality? -->

- Compile and run

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 7c86a2d6b8f067ef32ff69eea8f809c971876b50 (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.24
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.21 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.24 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.13 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash or Rebase merge (I don't really know what is the best in this case) this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-10T15:13:45Z,2023-11-11T11:12:02Z,2023-11-11T11:12:02Z,,master,convert_designer_file_new_style,30,6318,6372,1,2,2,"RussKie, mstv, mstv","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11345
11342,Add conditionals to script parameters,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

- Add conditional parameters, e.g. `{if:SelectedFiles} --files {SelectedFiles}{/if}`. The condition is based on whether the parameter is available, e.g. the script was executed from the diff view and any files are selected. Otherwise, the text in between is discarded. Also added `{ifnot:option}` for the opposite condition/fallback.

### Before

No way to condition parameters based on presence or absence.

### After

Can use `{if:parameterName}` to determine of an option is present.

## Test methodology <!-- How did you ensure quality? -->

TBD

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 43e20df903d2826bb4f41e890830fac9f39c2537
- Git 2.42.0.windows.1
- Microsoft Windows NT 10.0.19045.0
- .NET 6.0.24
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.21 [D:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.24 [D:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2023-11-08T23:50:35Z,,,,master,script-conditionals,3,241,23,1,9,0,,,True,https://api.github.com/repos/gitextensions/gitextensions/issues/11342
11341,Fixup ISettings<T> tests,"Fixes: The underlying property type of `ISetting<T>` was not considered when trying to match the values.

## Proposed changes

- Do not allege to test the `AppSettings` implemented using `ISettings<T>`, test them actually!

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/36601201/3c238803-cef9-452e-b4de-1daff69cf2d1)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/658a571b-bba0-490a-ba65-cb208ca6d83e)

## Test methodology <!-- How did you ensure quality? -->

- execute the prepared testcases

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-08T22:53:49Z,2023-11-09T01:10:40Z,2023-11-09T01:10:40Z,,release/4.0,fix/isettings_tests,1,36,32,1,0,1,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11341
11340,Git 2.42.0,"
## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-08T20:59:55Z,2023-11-09T01:09:05Z,2023-11-09T01:09:05Z,,release/4.0,feature/git-2.42.0,1,1,1,1,0,0,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11340
11339,Override documention version to 4.0,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11338

## Test methodology <!-- How did you ensure quality? -->

none

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-08T20:55:16Z,2023-11-12T16:23:38Z,,,release/4.0,feature/doc-4.2,1,2,0,3,4,1,"mstv, mstv, RussKie, RussKie, mstv","COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11339
11335,Form Rebase: Add rebase dependent branches `--update-refs` rebase option,"Fixes #11333

doc: https://github.blog/2022-10-03-highlights-from-git-2-38/#rebase-dependent-branches-with-update-refs

Linked to what have already been done with #10289

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

(normal rebase form)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/1a9f10a9-5d13-4551-aedc-ce97b01c48c4)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build a2d70467f48bc05cc792fd8816d80e6254fffe8f
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.21
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.21 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.10 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer Rebase merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-07T14:09:18Z,2023-12-06T23:09:29Z,2023-12-06T23:09:29Z,,master,update-refs_support,16,272,102,4,15,4,"mstv, RussKie, RussKie, RussKie, RussKie, RussKie, pmiossec, RussKie, RussKie, vbjay, pmiossec, pmiossec, pmiossec, mstv, mstv, RussKie, pmiossec, pmiossec, pmiossec, mstv, RussKie, RussKie, pmiossec, gerhardol, RussKie, RussKie, vbjay, RussKie, RussKie, pmiossec","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11335
11334,BugReportForm: Remove badly used `DpiUtil.Scale()`,"Theses usages have no effect as the value should be re-affected.

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 286b49ba21e909d81c8399ffb3ad2745a611c22f
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.21
- DPI 96dpi (no scaling)
- Portable: False


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-07T13:29:47Z,2023-12-15T09:27:22Z,2023-12-15T09:27:22Z,,master,dpi_scale_wrong_usage,1,1,3,1,6,3,"mstv, RussKie, pmiossec, pmiossec, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11334
11332,Cleaning: remove settings logic no more used,"because put in place for v2.50
and it is very unlikely that someone will migrate from v2.50 to last version.

## Screenshots <!-- Remove this section if PR does not change UI -->

nothing changed

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build b73ce72b1a1094c9a9132630787698a68b5ecca4 (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.21
- DPI 96dpi (no scaling)
- Portable: False


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-11-07T10:58:13Z,2023-11-09T01:14:49Z,2023-11-09T01:14:49Z,,master,clean_old_settings_migration,5,0,240,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11332
11330,Load hotkeys consistently,"Fixes #11329

## Proposed changes

- Always call `ReloadHotkeys` from `OnRuntimeLoad`
  There is no need to call it from `OnUICommandsSourceSet` because the ServiceProvider shall not be exchanged during runtime.
  In addition, `OnUICommandsSourceSet` is not always triggered as necessary.
- Call all `ReloadHotkeys` from `FormBrowse.HandleSettingsChanged`
- Call `LoadCustomDifftools` only once from `OnRuntimeLoad`, too

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-06T22:57:32Z,2023-11-09T10:43:03Z,2023-11-09T10:43:03Z,,master,fix/i11329_refactor_scripts,7,22,23,1,1,1,"RussKie, pmiossec","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11330
11327,Add Revision Graph option to fan out all children lanes directly at parent,"## Proposed changes

- Add option to fan out all children lanes directly at parent
  - Add `readonly struct RevisionGraphConfig` in order to not change settings during graph rendering
  - Factor out `readonly ref struct RevisionGrid.Graph.Rendering.Context` in order to reduce the number of arguments to pass
- Sort StartSegments in order to reduce crossings
  - Add property `RevisionGraphRevision.ParentCount` in order to avoid enumeration of `ConcurrentQueue`

## Screenshots <!-- Remove this section if PR does not change UI -->

Before | After
-|-
![image](https://github.com/gitextensions/gitextensions/assets/36601201/9cc787b1-c793-4d6b-a851-aa43686a331f) | ![image](https://github.com/gitextensions/gitextensions/assets/36601201/8b206c13-99de-407a-b161-3f7fd6d4e48b)

Before & After: default | After: optional
-|-
![image](https://github.com/gitextensions/gitextensions/assets/36601201/29096c01-25b5-4a7c-bcb4-05ef82706455) | ![image](https://github.com/gitextensions/gitextensions/assets/36601201/f9357b11-4943-460a-a5a6-8a1d41814ae6)

## Test methodology <!-- How did you ensure quality? -->

- adapted tests

## Please do not squash merge!

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-05T21:46:57Z,2023-11-10T17:56:17Z,2023-11-10T17:56:17Z,,master,feature/merge_lanes_optional,30,621,294,3,1,1,"RussKie, mstv, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11327
11326,Improve performance of AppSettings of type ISetting<T>,"## Proposed changes

- Call the factory method `ISetting<T>.Create<T>()` only once, i.e. not every setting access
- Turn `AppSettings.ConfirmBranchCheckout` into a get-only property in order to be compatible with `AppSettingsTests`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing + added testcases

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-05T17:43:14Z,2023-11-06T17:51:04Z,2023-11-06T17:51:04Z,,release/4.0,fix/isetting,2,10,7,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11326
11325,Remove IRunScript & IScriptHostControl and prepare IScriptOptionsProvider,"Supersedes #11321

## Proposed changes

- Remove IRunScript
- Turn empty `IScriptHostControl` into `IScriptOptionsProvider` with `string GetValue(string option)`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-05T00:54:44Z,2023-11-06T17:56:05Z,2023-11-06T17:56:05Z,,master,remove_irunscript,16,90,76,2,1,1,"mstv, RussKie","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11325
11324,Move IScriptHostControl functions to IBrowseRepo,"Fixes first part of https://github.com/gitextensions/gitextensions/pull/11321#discussion_r1380833106

## Proposed changes

- Move all current `IScriptHostControl` functions to `IBrowseRepo` because
  - RevisionGridControl access is provided via `IGitUICommands.BrowseRepo`
  - RevisionGridControl access is needed in addition to other script hosts in the future
    That's why keep the empty `IScriptHostControl`.
- Provide `IWin32Window owner` to `FormQuickItemSelector.ShowDialog`
- Remove obsolete property `virtual RevisionGridControl? GitModuleForm.RevisionGridControl`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- adapt existing tests
- reactivate ignored test

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-03T23:56:14Z,2023-11-04T23:29:11Z,2023-11-04T23:29:11Z,,master,reduce_iscripthostcontrol,14,74,105,3,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11324
11323,Remove GitUICommands functions wrapping BrowseRepo,"## Proposed changes

Replace `GitUICommands.Browse*` wrapper functions with direct calls `GitUICommands.BrowseRepo?.*` in order to
- reduce the size of `IGitUICommands`
- emphasize the optionality of those functions

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-03T21:13:17Z,2023-11-03T22:23:48Z,2023-11-03T22:23:48Z,,master,ibrowserepo,4,5,20,1,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11323
11321,Remove `IRunScript` and replace usage with `IScriptHostControl`,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

This is a foundation for #11239 and followup to #11242. Recycled from #11273

## Proposed changes

- Remove the deprecated `IRunScript`
- Add more responsibilities to `IScriptHostControl`, including various parameters that were passed alongside it.
- Replace various uses of explicit classes (e.g. `RevisionGridControl`, `GitModuleForm`) with indirect access via `IScriptHostControl`, instead.

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2023-11-02T11:47:40Z,,,,master,replace-irunscript,15,119,84,7,0,0,"mstv, SlugFiller, mstv, SlugFiller, mstv, SlugFiller","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11321
11320,Provide IServiceProvider to FormStatus,"Fixes: preparation for git output / history control

## Proposed changes

- Ensure that `FormStatus` has a `GitUICommands` instance.
- Pass GitUICommands instance to FormStatus when running scripts by downcasting from IGitUICommands to GitUICommands
- Make GitUICommands instance mandatory for FormStatus & FormProcess

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-11-01T23:17:20Z,2023-11-04T23:30:11Z,2023-11-04T23:30:11Z,,master,di_formstatus,3,9,6,2,7,0,"RussKie, mstv","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11320
11316,Implement RevisionGraphRow.FirstParentOrSelf without LaneSharing,"Follow-up to #11294
Reduces unnecessary gaps in the graph but does not completely restore the initial behavior from #11059 before #11294

## Proposed changes

Implement `RevisionGraphRow.FirstParentOrSelf()` without `LaneSharing`
by adding `RevisionGraphSegment.IsFirstChildOfParent`

This is incomplete because the graph lanes can be sorted differently than the children, i.e. the graph does not always reflect the topology: the merge destination branch may not be the left one.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before (#11294) | After: same as initial (#11059)

![image](https://github.com/gitextensions/gitextensions/assets/36601201/1920ee4e-d022-4a6f-b340-0198d16eff86)   ![image](https://github.com/gitextensions/gitextensions/assets/36601201/79fb3417-c76d-4375-b155-ccaf828a70c4)

### But Initial (#11059) | After: same as Before (#11294)

![image](https://github.com/gitextensions/gitextensions/assets/36601201/003d5963-f827-4bd0-a5ca-30be576b01b4)   ![image](https://github.com/gitextensions/gitextensions/assets/36601201/a631ce0b-8f72-47b7-8545-045e885a4601)

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-10-31T00:10:20Z,2023-10-31T10:36:56Z,,status: ready,release/4.0,fix/first_parent_or_self,5,19,16,1,0,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11316
11314,Remove RevisionGraphRevision._parents,"## Proposed changes

Remove redundant field `RevisionGraphRevision._parents`, use `_startSegments` instead.
The affected property `Parents` is only used for getting tooltip information and for tests.

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-10-30T23:09:18Z,2023-10-31T21:03:01Z,2023-10-31T21:03:01Z,,master,optimize_graph,3,19,17,1,0,0,"RussKie, gerhardol, mstv","APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11314
11313,Fix commit graph crash when commit message started with a new line,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11299 [NBug] Specified argument was out of the range of valid values

## Proposed changes

- Fix exception in commit graph

## Test methodology <!-- How did you ensure quality? -->

- Open a a problematic repository in GE before and after that fix


## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.41.0.windows.1
- Windows 11 (22H2)

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-30T21:33:10Z,2023-10-31T11:58:42Z,2023-10-31T11:58:42Z,:pen: status: cla signed,release/4.0,master,4,38,1,1,8,4,"RussKie, mstv, gerhardol, IEVin, mstv","COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11313
11309,Trigger RepoChangedNotifier after script / plugin,"Fixes https://github.com/gitextensions/gitextensions/pull/11273#discussion_r1361134225
Replaces the undesired #11278

## Proposed changes

Trigger the `IGitUICommands.RepoChangedNotifier` after the execution of scripts and plugins
instead of manually performing updates on `CommandStatus.NeedsGridRefresh`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-29T16:22:43Z,2023-10-31T20:58:19Z,2023-10-31T20:58:19Z,,master,fix/refresh_after_script,3,13,24,1,0,1,"RussKie, mstv, RussKie, RussKie, RussKie, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11309
11308,Move creation of selected git commands from `GitModule`,"
## Proposed changes

- Move tests to match folder structure
- Sort implementations and tests lexicographically
- Move GitModule.Push* commands
- Move GitModule.Commit commands


## Merge strategy

❗  DO NOT SQUASH

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-29T08:25:13Z,2023-11-02T13:22:31Z,2023-11-02T13:22:31Z,,master,move_Cmd_from_GitModule,9,1092,1090,4,5,2,"mstv, mstv, gerhardol, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11308
11307,Correctly reset unstaged changes without affecting staged,"Resolves #11216


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-29T04:41:29Z,2023-10-31T12:10:28Z,2023-10-31T12:10:28Z,,release/4.0,fix_reset,4,75,67,3,11,3,"mstv, gerhardol, mstv","COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11307
11306,Reset selection when opening a repo without a checkout,"## Proposed changes

When refreshing a repo, an attempt is done to preserve the selection.
This detection is done by resetting the selection if the checkedout commit changes, selecting HEAD if there is one, otherwise none.
The 'unselect' was only done if the new repo had a checkedout. So no checkedout tried to select a commit that no longer exists (unless it was an artificial commit).
There was an assert especially when opening an empty repo.

Some comments:
* The assert could be replaced with a Trace printout, the situation is handled
* Selection could be kept if there is at least one artificial.
* If no selection, artificial could be selected if shown.
* As commented in the code:
```
            // This will assert if switching from one repo with no checkout but with a revision selected
            // to a repo also without a checkout. This is handled below.
```

## Test methodology <!-- How did you ensure quality? -->

Manual
I do not think a test is beneficial here.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-28T17:55:23Z,2023-10-29T05:07:52Z,2023-10-29T05:07:52Z,,master,feature/assert-checkout-null,2,11,2,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11306
11305,Symbolic links to .git in WSL,"Fixes #11303

## Proposed changes

Symbolic links in WSL cannot be accessed from Windows.
This adds some workarounds that makes it possible to open such repos,
that has been created for instance with Google's repo tool.

All access from Windows will fail, only access by WSL native like ""wsl git"" works.
At least the following do not work:
* Display of branch names for (mostly using .git/HEAD to get the name). wsl git can be used here.
* Git commands using Windows Git (like difftool from submenu with all tools) will fail. (Even listing of tools fail, for instance when closing settings).
* GE Settings cannot be read/write to local repo
* Commands using the local .git config will not work. This includes Commit, rebase etc

You can still view information and compare branches though
All issues will likely not be resolved, unless the filesystem in WSL is updated

I doubt linked git repos will be a common use for GE, so there should not be too many complaints.
WSL support in general is a hack.

## Test methodology <!-- How did you ensure quality? -->

Manual - basically impossible to test the actual problem

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-27T22:47:40Z,2023-10-29T05:08:07Z,2023-10-29T05:08:07Z,release-notes-worthy,master,feature/i11303-wsl-links,7,71,9,1,1,2,"RussKie, mstv, gerhardol, RussKie","COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11305
11294,Deactivate very slow handling of lane sharing,"Avoids #11292 but deactivates #10915

## Proposed changes

- Always assign `LaneSharing.ExclusiveOrPrimary` in order to avoid deep nested calls of `_previousRow.GetLaneForSegment()`

## Test methodology <!-- How did you ensure quality? -->

- open Linux repo

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-10-21T22:59:31Z,2023-10-25T12:25:38Z,2023-10-25T12:25:38Z,,release/4.0,use_fix_lanesharing,2,16,1,1,6,1,"RussKie, RussKie","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11294
11293,Red background for button when a filter is active,"## Proposed changes

Highlight when a filter is active.
There has been GitHub issues when users have activated filter and then forgot about it.

Not very pretty, maybe someone have a better proposal?

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/6248932/9710fc44-73bf-4fc2-b001-635571afac8a)

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/702f7a8c-3470-4052-b8f3-620baddcc4af)

## Test methodology <!-- How did you ensure quality? -->

Manual activate/deactivate a filter like first parents

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-21T20:00:33Z,2023-11-12T16:26:27Z,,,release/4.0,feature/filter-exclamation-red,1,0,0,1,4,1,mstv,APPROVED,True,https://api.github.com/repos/gitextensions/gitextensions/issues/11293
11290,Bypass hotkeys processing when inside SearchControl,"Fixes #11122 

## Proposed changes
Bypass hotkeys processing when the user is in branch search control. This should eliminate the possibility of unexpected behavior while editing. 

## Test methodology <!-- How did you ensure quality? -->

Manual

## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.41.0
- Microsoft Windows NT 10.0.22621.0

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-20T09:39:22Z,2023-10-20T23:37:44Z,2023-10-20T23:37:44Z,,release/4.0,fix-11122,1,10,0,1,2,4,"RussKie, dmitrybozhenok, RussKie, mstv, dmitrybozhenok, mstv","APPROVED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11290
11289,Update contributors.txt,":black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-20T08:41:20Z,2023-10-20T09:14:04Z,2023-10-20T09:14:04Z,,master,signature,1,1,0,1,0,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11289
11288,Warning for IDE0008 Use explicit type instead of var,"https://github.com/gitextensions/gitextensions/pull/11284#issuecomment-1767449502

## Proposed changes

Default values added by VS for new settings

Setting to error seem to only have effect for local builds, not for AppVeyor so changed to error

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-19T21:43:11Z,2023-10-24T20:59:20Z,2023-10-24T20:59:20Z,,master,feature/var-explicit-type-config,1,57,4,1,1,0,"RussKie, gerhardol","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11288
11287,Do not launch debugger on Debug.Fail in test run,"Follow-up to #11270

## Proposed changes

`DebugHelper`: Just call `Debug.Fail()` when running tests - instead of `Debugger.Launch()`.
The test runner catches debug assertions.

## Test methodology <!-- How did you ensure quality? -->

- run tests for debug build

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-10-19T20:40:02Z,2023-10-19T22:39:23Z,2023-10-19T22:39:23Z,":eyeglasses: status: needs review, status: ready",master,fix/debug_helper,1,4,1,1,0,1,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11287
11284,IDE0008 Use explicit type instead of var,"Follow up to #11276 

## Proposed changes

Several manual changes, type alias, indentations, casing
A few IDE0090 was addressed too (that appeared after applying IDE0008

A few occurrences with anonymous types remains

I have not reviewed the changes (other than my manual overrides), it compiles and started up.

## Test methodology <!-- How did you ensure quality? -->

Compile

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-17T22:49:47Z,2023-10-19T11:35:57Z,2023-10-19T11:35:57Z,,master,feature/var-to-type-pt2,30,120,118,5,4,2,"RussKie, mstv, gerhardol","APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11284
11283,GitLab exception with concurrent access,"## Proposed changes

GitLab occasionally raises exceptions when reloading bigger repos (like Linux).
The ""pipeline loader"" starts tasks that also access this specific Dictionary.

```
System.InvalidOperationException
  HResult=0x80131509
  Message=Operations that change non-concurrent collections must have exclusive access. A concurrent update was performed on this collection and corrupted its state. The collection's state is no longer correct.
  Source=System.Private.CoreLib
  StackTrace:
   at System.ThrowHelper.ThrowInvalidOperationException_ConcurrentOperationsNotSupported()
   at System.Collections.Generic.Dictionary`2.FindValue(TKey key)
   at System.Collections.Generic.Dictionary`2.ContainsKey(TKey key)
   at GitExtensions.Plugins.GitlabIntegration.GitlabAdapter.ProcessLoadedBuilds(IEnumerable`1 items, IObserver`1 observer) in C:\dev\gc\gitextensions_4\Plugins\BuildServerIntegration\GitlabIntegration\GitlabAdapter.cs:line 132
   at GitExtensions.Plugins.GitlabIntegration.GitlabAdapter.<>c__DisplayClass13_0.<ObserveBuildsAsync>b__1(Task`1 x) in C:\dev\gc\gitextensions_4\Plugins\BuildServerIntegration\GitlabIntegration\GitlabAdapter.cs:line 95
   at System.Threading.ExecutionContext.RunFromThreadPoolDispatchLoop(Thread threadPoolThread, ExecutionContext executionContext, ContextCallback callback, Object state)
```

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-17T21:58:56Z,2023-10-23T20:37:30Z,2023-10-23T20:37:30Z,,release/4.0,feature/gitlab-concurrent-access,1,4,3,1,4,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11283
11281,Script user input improvement,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

In scripts command line arguments, the user is allows to:
* specify multiple user inputs
* specify a label as a reminder of what is requested (that will appear in the title of the input popup)
* specify or build a default value (that the user could modify before validating)

Example: `bundle create {{UserInput:Bundle filename|{cLocalBranch}.bundle|}} -{UserInput:Nb commits||} {cLocalBranch}`

2 inputs will be requested.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/cdadf6c0-ae93-4271-a6ff-25dd071da28c)

## Test methodology <!-- How did you ensure quality? -->

- Unit tests
- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build d735064e042defdc43432bcf68246cc392cc165f (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.21
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.21 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.10 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer **Rebase** merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-17T13:35:14Z,2023-11-24T01:14:19Z,2023-11-24T01:14:19Z,release-notes-worthy,master,script_user_input_improvement,15,498,81,2,3,8,"gerhardol, mstv, RussKie, RussKie, pmiossec, mstv, mstv, mstv, pmiossec, pmiossec, mstv, pmiossec, RussKie, pmiossec, mstv, mstv, RussKie, pmiossec, pmiossec, RussKie, pmiossec, pmiossec, RussKie, mstv, mstv, RussKie, pmiossec, RussKie, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11281
11279,Remove CommandStatus,"Fixes https://github.com/gitextensions/gitextensions/pull/11273#discussion_r1359942889

## Proposed changes

- Replace `CommandStatus` with `bool` (meaning `Executed`) because the only other property `NeedsGridRefresh` has become obsolete

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-10-16T21:34:01Z,2023-11-01T20:32:02Z,2023-11-01T20:32:02Z,":eyeglasses: status: needs review, status: ready",master,feature/remove_command_status,19,58,87,1,1,2,"SlugFiller, SlugFiller, mstv, mstv, gerhardol, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11279
11278,Use CommunityToolkit.Mvvm for requesting refresh of revisions,"Fixes https://github.com/gitextensions/gitextensions/pull/11273#discussion_r1361134225

## Proposed changes

- Create a rudimentary `GitRepoViewModel`
- Use its `PropertyChanged` event and `RepoModifiedMessage` for the notification of necessary refresh after execution of scripts and plugins
- Add the `GitRepoViewModel` and toolkit's `WeakReferenceMessenger` instances to the Service Registry

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-10-16T20:50:16Z,2023-10-29T16:27:27Z,,,master,feature/refresh_using_mvvm,15,122,25,3,3,1,"RussKie, mstv, mstv, RussKie, gerhardol, sharwell, sharwell, mstv, mstv, mstv, mstv, mstv, sharwell","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11278
11277,Checkout: fix git error when branch name is ambiguous,"When trying to checkout a branch **with the same name than an existing folder** like 'scripts"" in GitExtensions repository, git fails when running command line: git rev-list afe67a23d35300169ba539bb220be43e788dbfb0 ^scripts --count

 with error:
   fatal: ambiguous argument 'scripts': both revision and filename
   Use '--' to separate paths from revisions, like this:
   'git <command> [<revision>...] -- [<file>...]'

Fix: replace by command line:line
git rev-list afe67a23d35300169ba539bb220be43e788dbfb0 ^scripts --count --

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/bfc21afa-0440-4d61-aa61-0da5d5f2a9d0)

### After

No error

## Test methodology <!-- How did you ensure quality? -->

- Manual (and command line)

## Test environment(s) <!-- Remove any that don't apply -->
- Git Extensions 33.33.33
- Build d1d0db08325987de1e2dc10a170a10e96f65292e (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.21
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.21 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.10 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-16T14:17:56Z,2023-10-17T09:22:18Z,2023-10-17T09:22:18Z,,release/4.0,error_ambiguous_name,2,24,1,1,2,0,"gerhardol, mstv, RussKie","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11277
11276,Remove use of `var` to follow project code style,"
Note: done automatically by VS (with 2 or 3 small adaptations -- code indentation and tuples not 100% well handled--)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 03e983f6479d7fafa2ea21a13281c1d6270b6794
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.21
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.21 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.10 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-16T08:50:34Z,2023-10-17T09:25:19Z,2023-10-17T09:25:19Z,,master,rid_of_var,30,205,205,1,4,2,"gerhardol, gerhardol, RussKie","COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11276
11275,Follow file names in merge commits and all refs,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #10970.

## Proposed changes

- Added `-m` and `--all` options to `git log` operation in the `BuildPathFilter` method in order to get the file name for all displayed commits in the File History dialog

## Test methodology <!-- How did you ensure quality? -->

- Manual (tested the FH dialog in various repositories - the Diff and View tabs show correct content in all commits)

## Test environment(s) <!-- Remove any that don't apply -->

- GIT  2.42.0.windows.2
- Windows 10

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-16T06:38:35Z,2023-12-24T01:43:24Z,2023-12-24T01:43:24Z,,master,10970-file-history-double-quoting,5,234,47,5,30,9,"gerhardol, RussKie, crypto-rsa, gerhardol, crypto-rsa, gerhardol, mstv, RussKie, RussKie, gerhardol, crypto-rsa, crypto-rsa, RussKie, RussKie, mstv, gerhardol, crypto-rsa, mstv, RussKie, crypto-rsa, gerhardol, RussKie, crypto-rsa, crypto-rsa, gerhardol, mstv, mstv, crypto-rsa, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11275
11273,Remove `IRunScript` and replace usage with `IScriptHostControl`,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

This is a foundation for #11239 and followup to #11242

## Proposed changes

- Remove the deprecated `IRunScript`
- Add methods to `IScriptHostControl` to handle refreshing the revision grid and navigation operations
- Replace places in the script engine where `RevisionGridControl` is used directly with `IScriptHostControl`.
- `IScriptsRunner` is now responsible for calling `IScriptHostControl.GridRefresh` when applicable, instead of forcing the caller to check the `CommandStatus.NeedGridRefresh` boolean.

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-15T13:42:02Z,2023-10-31T20:58:20Z,,,master,replace-irunscript,25,174,179,9,5,0,"mstv, SlugFiller, SlugFiller, SlugFiller, SlugFiller, SlugFiller, SlugFiller, SlugFiller, mstv, mstv, mstv, mstv, mstv, SlugFiller, SlugFiller, SlugFiller, mstv, SlugFiller, SlugFiller, SlugFiller, mstv, SlugFiller, mstv, SlugFiller, mstv, SlugFiller, SlugFiller, mstv, SlugFiller, SlugFiller","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11273
11272,Move `PatchGrid` specific functionality from `GitModule`,,closed,2023-10-15T06:52:54Z,2023-10-15T22:31:40Z,2023-10-15T22:31:40Z,,master,move_GetInteractiveRebasePatchFiles,7,461,388,2,1,2,"gerhardol, mstv","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11272
11271,Make `SubmoduleStatusProvider` DI-friendly,Remove the static singleton and access `SubmoduleStatusProvider` via the DI,closed,2023-10-14T09:28:26Z,2023-10-15T02:11:53Z,2023-10-15T02:11:53Z,,master,ISubmoduleStatusProvider,7,40,13,1,0,2,"mstv, gerhardol, RussKie","APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11271
11270,Add helper method to handle Debug.Fail,,closed,2023-10-14T06:41:56Z,2023-10-19T19:32:35Z,2023-10-19T19:32:35Z,,master,debughelpers,30,97,61,1,5,3,"gerhardol, mstv, gerhardol, gerhardol, mstv, RussKie, RussKie, mstv, RussKie, RussKie, mstv, RussKie, mstv","COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11270
11269,Use `IGitModule` in signatures,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->


## Proposed changes

This PR removes the direct dependency on the concrete implementation of `GitModule` and replaces all callsites with the `IGitModule` interface. The change is somewhat crude to made the code compile. `IGitModule` interface has been updated with the required signature (almost) without any consideration on the quality of the API it provides. 

This PR is about setting the foundation for using the abstractions, and the follow up work will concentrate on individual aspects such as
- cleaning (or ""beautifying"") the interface,
- adding xml-docs,
- moving the abstractions to GitExtensions.Extensibility project and introducing the dependency on the said project, etc.

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-12T22:39:18Z,2023-11-27T00:45:53Z,2023-11-27T00:45:53Z,release-notes-worthy,master,use_IGitModule_in_signatures,30,150,242,3,11,3,"mstv, gerhardol, mstv, RussKie, RussKie, mstv, mstv, mstv, RussKie, RussKie, RussKie, mstv, RussKie, RussKie, mstv, RussKie, gerhardol, RussKie, RussKie, gerhardol, gerhardol, RussKie, RussKie, gerhardol, gerhardol, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11269
11268,RevisionGraph: improve internal structures,"## Proposed changes

General changes to improve cpu execution and to
limit allocations. Some changes are very minor like
using for instead of foreach, other changes the data structures.

Separate storage of nodes that has no GitRevision.
This allows to remove a separate node storage and
to simplify the code.

Use ImmutableArray instead of array and list for the ordered caches
to improve allocations.

Force update data grid when revision graph nodes have been modified

The order of nodes in the revision graph may change if the commits are
listed out of order or if artificial commits are inserted.
The revision graph was (normally) invalidated but the data grid was only
refreshed if scrolling.

Use separate counter for revisions to limit
the lock time for _revisionByObjectId.Count

Rename variables and add comments

Remove unused IsRevisionRelative().

--

This is partly a test of how you can use CoPilot to optimize code.
It is maybe 1/5 times you get something that works and 1/10 that something works.
Quite often CoPilot insists on something that is not an improvement.
But that is not so bad, there are improvements in the end. 

This code is running when revisions are loaded, so performance is important.
Also minor changes could make a difference.

I will add some comments about decisions in an own review of the code.

Tests mostly on Linux repo, limiting loading to 100K commits.

This reduces the time RevisionDataGridView.Add() runs from about 1000-1400 ms to 400-600ms.
However, the normal load time (as reported by RevisionReader) is mostly unchanged at 3000 - 3400 ms, so it seem like git-log delivers commits slower than they are handled here. 
The total time for git-log to write to a file is about 1900 ms so there is something more to it, maybe something with reading the stream (there are changes in .NET7 I will try later).
So there may be a potential for some minor improvements later.
The decreased allocation seem to give more consistent running times (less gc).

The incorrect insertion of artificial commits (that #11266 made more visible) is fixed at least.
I still get some visual issues when scrolling a lot, but better than before.
Similar with no grid when rebasing, I have not seen that lately.
More changes may be needed lock-cache-refresh handling, this is a step forward.
## Test methodology <!-- How did you ensure quality? -->

There are tests for graph loading.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-12T21:24:03Z,2023-10-27T19:56:27Z,2023-10-27T19:56:27Z,,master,feature/improve-revgrid-loading,7,260,180,2,7,4,"gerhardol, mstv, gerhardol, mstv, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, mstv, mstv, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, RussKie, mstv, mstv, mstv, gerhardol, mstv, mstv, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11268
11267,RevisionGrid: Separate add/insert of artificial commits,"## Proposed changes

If HEAD is not included in git-log, the artificial commits are
inserted after all commits are loaded.

This is a refactoring to separate the normal add and the insert to
simplify the handling.

--

This is primary a refactoring, minor changed functionality.
The node cache was not always invalidated if a previous node was added as a parent and the node was already cached.
~~Draft as it is based on #11266, could be separated if a nullcheck is added.~~
There are not really any tests related to this. I have another PR for cleaning up some datastructures that I would like to handle first.

--

One partial alternative to this is to only insert first in the grid if HEAD is found.
Some special handling is still needed.
The behavior when filtering will be worse (the artificial is inserted at next commit in current branch now).

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-12T19:47:10Z,2023-10-24T21:12:41Z,2023-10-24T21:12:41Z,,master,feature/simplify-articicial-insert,6,218,145,3,3,3,"mstv, gerhardol, gerhardol, gerhardol, mstv, gerhardol, mstv, gerhardol, mstv, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11267
11266,Limit HEAD parents when inserting artificial in grid,"## Proposed changes

HEAD may not be included in git-log in some scenarios. One example is an old checkout in the Linux repo where 100K commits is about a year. Another is when filtering.

In this scenario there is no HEAD the artificial commits cannot be inserted while loading.
The HEAD parents are then listed to find the first descendant in the grid, or first in the grid if no head parent is found.

Similar scenario for the revision to be reselected. When switching repo the HEAD is always selected.

Previously, a match was tried in all HEAD parents. This command requires 1.5 s in the linux repo,
delaying the the time until the spinner is dismissed. The number of parents to try is limited to around 50 ms instead.

In addition, the command ran a second time as the
result was not enumerated when trying to find the revision to select.

--

This is not a normal user problem, this is a ""cloning Linux a year ago and not checking out new branches"" problem.
Still annoying when investigating other improvements.

Note that Artificial are not inserted correctly after this, likely due to a timing problem.
Fixed in later PR.

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-12T19:20:10Z,2023-10-15T22:00:39Z,2023-10-15T22:00:39Z,,master,feature/limit-head-parents,2,16,11,4,2,0,"mstv, gerhardol, RussKie, gerhardol, mstv, gerhardol, mstv, gerhardol, gerhardol, RussKie","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11266
11264,Scripts: add new option {HEAD},"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes [this comment](https://github.com/gitextensions/gitextensions/issues/1826#issuecomment-1759308175)

## Proposed changes

- introduce a new option `{HEAD}` that contains the name of the currently checkout branch (and as a consequence avoid user branch selector when using `{cLocalBranch}`) or the hash of the commit if in detached head
- update the help text so that the user understand that the options are acting on a revision and so has a little more clue that `{cLocalBranch}` will not return the current checkout branch but let the user select a branch among all defined on the revision. Same for tags, remote, branch...

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/fd449827-9bd9-4d6d-826c-26b61cfcf54d)

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/cafd75fb-db84-4495-bc7e-8ce92d91294e)

## Test methodology <!-- How did you ensure quality? -->

- Unit tests
- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build af8e9e153708dc4f087d65f1c5726ae4a4a6cd5f (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.21
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.21 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.10 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-12T14:13:27Z,2023-11-01T10:39:40Z,2023-11-01T10:39:40Z,,release/4.0,scripts,7,73,29,1,5,8,"gerhardol, RussKie, RussKie, RussKie, pmiossec, gerhardol, mstv, pmiossec, gerhardol, RussKie, pmiossec, pmiossec, pmiossec, pmiossec, pmiossec, gerhardol, mstv, gerhardol, mstv, gerhardol, RussKie, RussKie, pmiossec, pmiossec, mstv, gerhardol, mstv, RussKie, pmiossec","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11264
11256,Set FormCheckoutRevision default button,"Follow up for #11231
",closed,2023-10-09T10:27:09Z,2023-10-09T11:07:17Z,2023-10-09T11:07:17Z,,release/4.0,fix_FormCheckoutRevision,1,1,0,1,1,1,"pmiossec, mstv","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11256
11254,Correct IScriptsManager resolution in Settings dialog,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Resolves #11253

As reported in https://github.com/gitextensions/gitextensions/pull/11239#issuecomment-1751968802 (/cc: @SlugFiller)",closed,2023-10-08T10:27:43Z,2023-10-09T11:08:42Z,2023-10-09T11:08:42Z,,master,Fix_settings_page,4,14,32,2,8,1,"mstv, RussKie","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11254
11251,Make HotkeySettingsManager DI-friendly,Follow up for https://github.com/gitextensions/gitextensions/pull/11235 and https://github.com/gitextensions/gitextensions/pull/11242,closed,2023-10-08T03:33:19Z,2023-10-12T22:33:02Z,2023-10-12T22:33:02Z,,master,refactor_hotkeysmanager,30,403,207,4,1,2,"mstv, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, mstv, mstv, mstv, RussKie, RussKie, RussKie, RussKie, mstv, RussKie, mstv, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11251
11250,Update translations,"* Update translations at 95%
* Update contributors
* Update change log",closed,2023-10-07T13:38:06Z,2023-10-07T14:03:03Z,2023-10-07T14:03:03Z,,release/4.0,release/4.2,26,4905,47460,3,0,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11250
11249,Source generate the boilerplate,"Windows Forms designer requires a default constructor to be able to open a form on the design surface.

This, however, does not work in situations where some parameters must be set in the constructor (e.g., dependency injection).

Previously, we would create a default constructor specifically for the Windows Forms designer integration. However, this implies a lot of unnecessary overhead.

Emit the default constructors for the designer integration with source generators.

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-07T06:04:38Z,2023-10-07T12:58:50Z,2023-10-07T12:58:50Z,,master,sgen_forms_designer_ctor,30,200,178,1,1,1,"mstv, RussKie, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11249
11247,editor: Add feature to move line up/down with ALT + UP/DOWN,"by better handling of hotkeys in FileViewer
i.e. let a chance to the editor control to handle it if the feature with the associated hotkey is not available/enabled

+ add a Debug Launch profile to be able to test it

Integration of https://github.com/gitextensions/ICSharpCode.TextEditor/pull/33 in GitExtensions

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

None.

### After

![move_lines](https://github.com/gitextensions/ICSharpCode.TextEditor/assets/460196/74948f29-84ef-4119-a46a-05fef6b79813)


## Test methodology <!-- How did you ensure quality? -->

- Manual ( With the added Debug Launch profile)

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-06T21:44:21Z,2023-10-07T00:37:09Z,2023-10-07T00:37:09Z,,master,editor_move_lines,3,30,10,2,1,3,"gerhardol, mstv, pmiossec, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11247
11245,Use RevisionReader to read GitRevision with Notes,"## Proposed changes

Do not allocate when replacing VerticalFeed.
Add vertical feed test.

Optionally read Git Notes in RevisionReader
Tests were added.

Use RevisionReader to parse revisions also in
CommitData and GitModule.
This require support of Notes.

Add LogOutputEncoding to IGitModule so RevisionReader can use the interface internally.

If showing Git Notes, read them when loading the grid so they are handled with the Body in the standard scenario.
Notes are then displayed in the rev grid tooltip also before the revision is selected.

--

This has minimal effect on performance. If Notes is not shown, there is one extra `if` and two more if Body is stored.
If Notes is shown, git-log may be slower, but the error of margin when measuring is larger than the possible slowdown.
(Some special handling in RevGrid could be removed too.)
One less async call when displaying a commit.

## Test methodology <!-- How did you ensure quality? -->

Tests were added for the new Notes parsing as well as for the special case of vertical tab.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-05T22:08:16Z,2023-10-07T00:40:06Z,2023-10-07T00:40:06Z,,master,feature/revisionreader-parse-notes,19,344,275,3,0,0,"RussKie, RussKie","COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11245
11243,Add comment for skip worktree together with assume unchanged,"## Proposed changes

https://github.com/gitextensions/gitextensions/pull/11011#discussion_r1346540551

Used in FormCommit

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-04T22:42:22Z,2023-10-07T00:37:38Z,2023-10-07T00:37:38Z,,master,feature/p11011-assume-skip-check,1,38,36,2,1,2,"RussKie, gerhardol, mstv","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11243
11242,Refactor scripts engine,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->


This is a foundation for #10866 as well as #11239.

## Proposed changes

* Make the scripts manager and the runner DI friendly.
* Refactor and clean up the API surface


⚠️  Please note, there are some hacks related to hotkeys management because `HotkeySettingsManager` is not DI-friendly. It must be refactored to become one, and I have some private drafts that'd enable that; so that is coming in the future.

⚠️ Please also note, this is a ""stepping stone"" kind of change to enable further improvements such as making `HotkeySettingsManager` DI-friendly and allow load/persistence of per-repo scripts.

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-04T08:04:07Z,2023-10-07T13:39:38Z,2023-10-07T13:39:38Z,,master,refactor_scripts,30,222,124,2,3,1,"mstv, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, mstv, mstv, mstv, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11242
11240,Update to .NET 8,"
## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-04T04:24:00Z,2023-11-26T04:42:55Z,2023-11-26T04:42:55Z,release-notes-worthy,master,net8,25,41,33,1,23,3,"gerhardol, RussKie, RussKie, RussKie, RussKie, RussKie, mstv, gerhardol, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11240
11239,Allow user scripts to operate on selected files,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #9974
Fixes #8769
Alternative to #11183

## Proposed changes

- Add Run Scripts option to diff file list, file tree, and commit form file lists
- Add `SelectedFiles` and `LineNumber` parameters to script parameters, based on currently selected files in the matching list, and the current selected line in the diff/blame view.
- Add conditional parameters, e.g. `{if:SelectedFiles} --files {SelectedFiles}{/if}`. The condition is based on whether the parameter is available, e.g. the script was executed from the diff view and any files are selected. Otherwise, the text in between is discarded. Also added `{ifnot:option}` for the opposite condition/fallback.
- Added `ShowInFileList` event for showing an option directly in the context menu for file lists, and not in the `Run Scripts` submenu. Similar to `Show in RevisionGrid` for the revision grid.

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/gitextensions/gitextensions/assets/5435495/2fea70f7-dd4d-4017-b321-5e1455fb343e)
![image](https://github.com/gitextensions/gitextensions/assets/5435495/039e9ff2-88fa-4e5f-88e7-47d53b04b1c5)
![image](https://github.com/gitextensions/gitextensions/assets/5435495/d0a2041d-2e7e-4af4-a3a3-2d6197abedb3)


### Before

`Run Script` was only available in the revision grid, 

### After

`Run Script` is available in revision grid, diff file list, file tree, and commit file list (staged and unstaged).

## Test methodology <!-- How did you ensure quality? -->

- Added a test user script using all the new features (`notepad++.exe` `{if:SelectedFiles}{SelectedFiles} {if:LineNumber}-n{LineNumber}{/if}{/if}`)
- Ran from the menu
- Ran using a shortcut from multiple locations (revision tree, diff file list, file tree, commit window, diff view, blame view

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 98f366d73cb355b0d677a19edd5c36a57f5bcb6b
- Git 2.42.0.windows.1
- Microsoft Windows NT 10.0.19045.0
- .NET 6.0.22
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.21 [D:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.22 [D:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-03T13:37:03Z,2024-04-14T20:30:08Z,2024-04-14T20:30:08Z,release-notes-worthy,master,file-scripts,20,310,23,4,30,3,"RussKie, SlugFiller, SlugFiller, SlugFiller, SlugFiller, SlugFiller, SlugFiller, SlugFiller, SlugFiller, SlugFiller, gerhardol, RussKie, RussKie, RussKie, gerhardol, mstv, RussKie, gerhardol, SlugFiller, SlugFiller, SlugFiller, mstv, SlugFiller, SlugFiller, SlugFiller, mstv, SlugFiller, RussKie, SlugFiller, SlugFiller","CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11239
11238,FormPush: Allow push from other tabs even if no branch is selected in 1st tab,"Check if a branch is selected only if the 1st tab is the selected one
and so allowing to push tags (from 2nd tab) or multiple branch (3rd tab) even if no branch is selected in 1st tab.

It's more likely to happen if you are in a submodule that has no branch checked out but you want to push something...

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 8f017f6b0bc303f5fdb54aa5e61da791a8248da3
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.21
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.21 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.10 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-03T13:11:41Z,2023-10-04T11:22:14Z,2023-10-04T11:22:14Z,,master,fix_push_conditions,1,1,1,1,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11238
11235,Plumb service provider to settings pages,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

An addendum to #11142. This allows reusing registered instances in the Settings dialog pages.

❗ This change on its own breaks the Windows Forms designer integration for the affected components. The designer integration is fixe by #11249.",closed,2023-10-01T11:57:23Z,2023-10-07T13:26:33Z,2023-10-07T13:26:33Z,,master,plumb_sp_to_settings,30,92,59,1,1,1,"RussKie, mstv","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11235
11234,RevisionReader: No reflog for notes,"## Proposed changes

Regression in #11225

Reflog selector identifies stashes and only listed with git-stash-list. However, the reflogselector can still be empty occasionally also in this situation for instance when Git Notes are displayed. These empty reflog selectors should not be presented as stashes.
For efficiency reasons the test is only for null values, i.e. empty reflog selectors must be presented as null. (In addition, a string should not be allocated even if string interning should eliminate the allocation need, there is still overhead).
https://github.com/gitextensions/gitextensions/blob/master/Plugins/GitUIPluginInterfaces/GitRevision.cs#L111

## Test methodology <!-- How did you ensure quality? -->

Test adjusted

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-10-01T11:48:41Z,2023-10-01T22:59:49Z,2023-10-01T22:59:49Z,,master,feature/reader-reflog-notes,4,73,9,1,1,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11234
11233,Simplify GitCommand,"Fixes https://github.com/gitextensions/gitextensions/pull/11230#discussion_r1340544858

## Proposed changes

- Do not subclass `GitCommand` but provide a factory method per git command
- Provide values of - formerly abstract - properties of `GitCommand` via ctor
- Complete the mock up for `GitTagControllerTest`, needed because the git arguments are validated at once

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- adapted tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-09-30T21:32:52Z,2023-10-08T22:23:14Z,2023-10-08T22:23:14Z,,master,feature/simplify_gitcommand,30,253,350,4,0,0,"RussKie, mstv, RussKie, gerhardol, RussKie, mstv, RussKie","CHANGES_REQUESTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11233
11232,CommitMessageManager: Fixup ThrowIfNull,"Fixes self-delusion

## Proposed changes

Actually check the CommitMessageManager ctor argument `owner` for `null`, not its name

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- adapted existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-09-30T18:01:53Z,2023-10-01T00:56:41Z,2023-10-01T00:56:41Z,,master,fix/nullcheck,3,6,4,1,0,0,"gerhardol, mstv, RussKie, RussKie","APPROVED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11232
11231,Modernise FormCheckoutRevision,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Contributes to #6183

## Proposed changes

- Modernise FormCheckoutRevision

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/4403806/0df92f42-ad6b-4fd2-8ca1-77c0453005d3)


### After

![image](https://github.com/gitextensions/gitextensions/assets/4403806/48c332b7-23c8-4ffb-8bc8-821b0bbe4a7d)


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-09-29T04:48:13Z,2023-10-07T00:40:59Z,2023-10-07T00:40:59Z,,master,update_FormCheckoutRevision,2,98,105,3,23,2,"mstv, RussKie, mstv","COMMENTED, COMMENTED, DISMISSED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11231
11230,Convert GitCommandHelpers.CheckoutCmd() -> GitCheckoutRevisionCmd,This change is necessary for the upcoming work that generalises and unifies branch/revision checkout functionality and UI dialogs.,closed,2023-09-28T03:13:09Z,2023-10-08T22:23:15Z,,,master,convert_GitCommandHelpers_CheckoutCmd,7,92,85,1,1,0,"mstv, RussKie, mstv, RussKie, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11230
11225,Decode revision reader directly to Span,"## Proposed changes

Avoid allocations, do not allocate a string when decoding Git data

Some minor cleanup, very minor improvements

## Test methodology <!-- How did you ensure quality? -->

Tests exists

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-09-22T23:20:18Z,2023-10-01T01:23:46Z,2023-10-01T01:23:46Z,,master,feature/decode-to-span,8,238,270,11,3,3,"gerhardol, RussKie, mstv, gerhardol, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, gerhardol, RussKie, gerhardol, gerhardol, RussKie, gerhardol, mstv, mstv, gerhardol, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11225
11224,Optimize ObjectId.ToString(),"## Proposed changes

using Convert.ToHexString()

Does not make a big difference, converting 100K times decreases from 18 ms to 13 ms.
However, the code is simplified, especially with #11223 (this should be merged first).

## Test methodology <!-- How did you ensure quality? -->

Tests exist

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-09-21T23:10:18Z,2023-09-22T20:14:09Z,2023-09-22T20:14:09Z,,master,feature/objectid-tostring,1,11,24,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11224
11223,ObjectId use uint64 to reduce calls,"## Proposed changes

Store ObjectId in 2*uint64+1*uint32 instead of uint32 
This reduces the number of calls handling ObjectId and improves the performance slightly.

In my tests I parsed 100K references in 87ms instead of 110 ms, so loading a repo with the default 100K setting is about 70 ms faster.

See also #11222 that removes `bool Equals(string? other)` that adds duplicated calls for uint32/uint64
Further optimizations will follow, for instance for `string ToShortString(int length = 8)` reduce the code some.
(In general, the code size is reduced by this PR, only for these two methods that adds code)

## Test methodology <!-- How did you ensure quality? -->

Tests exists already

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-09-21T20:57:17Z,2023-09-22T21:33:41Z,2023-09-22T21:33:41Z,,master,feature/objectid-uint64,1,30,53,1,0,1,"RussKie, mstv, mstv, gerhardol, gerhardol, gerhardol, gerhardol, mstv, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11223
11222,Remove ObjectId.Equals(string),"## Proposed changes

only one usage

This is adding some additional code when data structures are changed in a separate PR.
This can be optimized, but I do not feel it is worth it.
Only used in an async call to get CommitInfo where several Git commands are called.
This will cause one string allocation too.

![image](https://github.com/gitextensions/gitextensions/assets/6248932/605ccfba-b1e9-4a62-8ad8-def1ea60168e)

Related to #11223 as this PR removes some additional changes there.

## Screenshots <!-- Remove this section if PR does not change UI -->

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-09-21T20:48:42Z,2023-09-22T20:12:50Z,2023-09-22T20:12:50Z,,master,feature/remove-objectid-compare-string,3,1,60,2,0,1,"mstv, gerhardol, gerhardol","APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11222
11219,Add hotkey to ToolStripButton Default Pull/Fetch,"## Proposed changes

- Add hotkey `F8` (default) to ToolStripButton `Default Pull/Fetch`

## Screenshots <!-- Remove this section if PR does not change UI -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/1e71974a-24d9-4f34-a811-a514f1d84d56)

![image](https://github.com/gitextensions/gitextensions/assets/36601201/e08682c5-e6f4-450e-8cdc-dc41b42d5388)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-09-19T20:55:09Z,2023-09-20T10:54:15Z,2023-09-20T10:54:15Z,"area: user experience, release-notes-worthy",master,feature/pull_fetch_hotkey,4,11,0,1,3,0,gerhardol,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11219
11218,RevisionGridControl: Hide tooltip on Escape,"## Proposed changes

- Hide RevisionGrid tooltip on `Escape` keypress

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-09-18T21:32:30Z,2023-09-24T19:54:02Z,2023-09-24T19:54:02Z,"area: user experience, :eyeglasses: status: needs review",master,feature/hide_tooltip,2,28,15,3,1,1,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11218
11215,Git Command Log: Show git verb; extend context menu,"## Proposed changes

- Remove git configuration options from the displayed arguments of git processes in the ListView
  in order to show the git verb first
- Increase column width for ProcessId
- Add mnemonics and shortcuts to the context menu
- Add context menu item `Copy full command line`

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/36601201/682a8a7e-8c73-4722-ad38-6b59b32644b3)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/0097362d-0a5c-40f5-8cff-666a6da4e9ec)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Please do not squash

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-09-16T20:52:38Z,2023-09-20T11:00:04Z,2023-09-20T11:00:04Z,"area: user experience, :eyeglasses: status: needs review",master,feature/git_cmd_log,5,264,225,3,3,4,"gerhardol, gerhardol, mstv, RussKie, mstv, mstv, RussKie, KlausLoeffelmann, mstv, gerhardol","CHANGES_REQUESTED, CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11215
11210,Build arm64 in CI,"Per discussion in #10649, the work to build for arm64 has been done, but not the work to include that in official builds.

This PR adds the arm64 build to CI so that it can ship with each release.",open,2023-09-14T01:19:10Z,,,,master,buildArm64,1,5,0,2,4,0,RussKie,COMMENTED,True,https://api.github.com/repos/gitextensions/gitextensions/issues/11210
11208,Optimize ObjectId parsing,"## Proposed changes

Use optimized Utf8Parser(Span<>) methods to parse Git commit hashes.

Remove unused methods.

Benchmark for `TryParse(in ReadOnlySpan<byte> array)` that run in average 3.1 times for each commit (for linux repo).
To parse 100000 commits (default in GE) was before 290 ms, now it is 110 ms
The total load time therefore reduced with 550 ms. For GE this is about 160 ms.

There is a similar performance improvement for other methods but they are not performance critical.

I may add that reducing checks and additional method calls is critical in these scenarios.
Using a loop instead of five separate calls with fixed parameters was 160 ms.
Using multiple wrapper calls instead of calling the Span methods directly could add similar delay.

As the grid is displayed before all data is parsed, the visible difference is smaller.

## Test methodology <!-- How did you ensure quality? -->

Tests are updated
Note that some test cases were removed when unused methods were removed.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-09-12T22:05:20Z,2023-09-21T19:49:56Z,2023-09-21T19:49:56Z,,master,feature/optimize-objectid,5,106,278,3,2,2,"RussKie, mstv, gerhardol, mstv, gerhardol, mstv, gerhardol, gerhardol, gerhardol","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11208
11206,Rebase: fix accuracy of data in list of commits displayed,"by using ""done"" file for commits already processed
and ""git-rebase-todo"" for what will be **really** done next.

because ""git-rebase-todo.backup"" content is not accurate
(it contains what was presented to user in interactive rebase
**before** user choose which actions to do on commits)

it fixes ""action"" column value that was not accurate
and commits that was reordered.

fixes #11179

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

See reporting issue #11179 

### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/46757106-6fa5-4fa5-bc88-64f8cc7108ef)

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build f0a4b7d360bbaae54b0d9ea7680e7866c85df53b
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.21
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.21 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.10 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-09-12T11:44:44Z,2023-09-21T12:17:53Z,2023-09-21T12:17:53Z,,master,fix_commit_action_rebase,3,145,37,4,3,5,"mstv, gerhardol, mstv, gerhardol, RussKie, gerhardol, mstv, pmiossec, pmiossec, RussKie","APPROVED, COMMENTED, APPROVED, APPROVED, COMMENTED, APPROVED, APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11206
11205,Allow forced reload of revisions,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #9418
Fixes  #11453
And it makes `View` | `Sorting` options not being ignored sometimes.

## Proposed changes

RevisionGridControl:
- `PerformRefreshRevisions`: Allow forced reload
- Remove `!_isRefreshingRevisions` from `CanRefresh`
- Ignore `OperationCanceledException` in `OnRevisionRead`, which killed the app

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

need to wait until loading of previous revisions has finished and to manually refresh when e.g. switching repo
 
### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/6ed13e7d-e740-4b62-b20c-f2d03db9f40e)

## Test methodology <!-- How did you ensure quality? -->

- existing tests
- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2023-09-11T21:01:58Z,,,,master,fix/i9418_force_reload,2,91,72,3,0,1,"gerhardol, mstv, mstv, gerhardol, gerhardol, mstv, gerhardol, gerhardol, gerhardol, RussKie, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED, COMMENTED",True,https://api.github.com/repos/gitextensions/gitextensions/issues/11205
11203,Diff window: Avoid duplicate diff group,"Fixes #11200

## Proposed changes

- FormDiff: Let DiffFiles decide about the diff groups in order to be consistent with other FileStatusLists

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/36601201/ff819cfc-34bf-41b9-ac92-47f3c5323bc9)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/084856e0-3a6f-480d-9cb5-cfcb759f4331)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-09-11T18:25:10Z,2023-09-12T01:43:05Z,2023-09-12T01:43:05Z,release-notes-worthy,master,fix/i11200_formdiffgroups,1,1,8,1,1,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11203
11202,Remove impossible result from OpenWithDifftool,"## Proposed changes

- Remove mostly unused and basically impossible result (due to detached execution) from all variants of OpenWithDifftool 

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- adapted existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-09-10T18:51:38Z,2023-09-18T17:20:58Z,2023-09-18T17:20:58Z,,master,fix/difftool_result,3,20,21,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11202
11201,Fixed padding of the revision grid in the file history window,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11071 File History window: last commit is hidden under action bar

## Proposed changes

- Added padding to the revision grid in the the file history window. Now the latest commit is not under the action bar.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before
The File History window **without** checkbox `Show file history in the main window`:
![image](https://github.com/gitextensions/gitextensions/assets/5438647/f9d50aa6-9770-4731-aaa0-3db8b4793e30)

### After

The File History window **without** checkbox `Show file history in the main window`:
![image](https://github.com/gitextensions/gitextensions/assets/5438647/1525abe1-652e-4181-96d1-8cc5fbac181c)

The File History window **with** checkbox `Show file history in the main window` (was not changed):
![image](https://github.com/gitextensions/gitextensions/assets/5438647/a3b3de0f-11a0-46dc-87e4-3d3065c9a9ee)

## Test methodology <!-- How did you ensure quality? -->

- Test this changes with checkbox `Show file history in the main window` and without that.
- Test that winforms designer of form `FormFileHistory` still works correct.

## Test environment(s) <!-- Remove any that don't apply -->

- GIT version 2.41.0.windows.1
- Windows 10 Pro

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-09-10T15:48:25Z,2023-09-11T03:28:58Z,2023-09-11T03:28:58Z,release-notes-worthy,master,master,1,1,0,1,1,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11201
11199,Force OpenSSH to use SSH_ASKPASS if a password is requested,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

Minimalist alternative to #11182. This adds an environment variable that forces SSH_ASKPASS to be used even if a terminal is available. Requires OpenSSH 8.4 or higher. Has no effect on older versions of OpenSSH.

(The version that comes with Windows 10 is, unfortunately, 8.1. However, 9.2 is available via winget)

### Before

Inputting a password is done via the console emulator.

### After

Inputting a password is done via the `GitExtSshAskPass.exe` popup.

## Test methodology <!-- How did you ensure quality? -->

- Performed fetch from a remote server
- Inputted the password in the popup

## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.41.0.windows.1
- Windows 10.0.19045

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-09-10T04:10:52Z,2023-09-12T14:05:09Z,2023-09-12T14:05:09Z,release-notes-worthy,master,force-askpass,1,11,0,1,7,2,"mstv, SlugFiller, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11199
11197,Rebase: improve perfs when displaying list of commits,"by retrieving all the commits data with only one `git log` call instead of one by commit.
It is possible as when rebasing, all the commits belong to the same branch.

Kept a fall back to previous way to retrieve commit data for 1 commit if commit is not in the one loaded.

Results to show the rebase popup with 7448 commits rebased: 2s instead of 4m50 previously

Fixes #10698 and fixes #11196

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build acee8341dc4bb07b1a576d3ddf468ed0f459942b (Dirty)
- Git 2.42.0.windows.2
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.21
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.21 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.10 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-09-07T14:00:51Z,2023-09-15T11:02:43Z,2023-09-15T11:02:43Z,release-notes-worthy,master,improve_perf_rebase,2,95,37,1,6,7,"gerhardol, pmiossec, gerhardol, RussKie, pmiossec, RussKie, mstv, gerhardol, gerhardol, pmiossec, gerhardol, pmiossec, mstv, gerhardol, pmiossec, gerhardol, pmiossec, mstv, mstv, gerhardol","COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11197
11194,Make ExecuteAsync cancellable and kill canceled processes,"Fixes #9818
Preparation for #9418

## Proposed changes

- `Executable`:
  - Kill the process on disposal if cancellation was requested
  - Factor out `HandleProcessExit` from `OnProcessExit`
- `GitCommandRunner`:
  - `RunDetached` with and without cancellation
  - log exit code
- Make cancellation of `ExecuteAsync(this IExecutable executable, ...)` work: await exit first, then await the output with cancellation
- `RevisionReader`: Start processes with cancellation

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- add tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-09-04T22:05:07Z,2023-09-14T11:33:28Z,2023-09-14T11:33:28Z,,master,terminate_process,11,306,91,2,5,4,"RussKie, gerhardol, mstv, mstv, mstv, gerhardol, RussKie, mstv, mstv, mstv, RussKie, RussKie","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11194
11193,Cancel loading custom diff/merge tools when the control is diposed,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

I observed test hags in https://ci.appveyor.com/project/gitextensions/gitextensions/builds/47950171
![image](https://github.com/gitextensions/gitextensions/assets/4403806/4a7779f0-eb8c-4aae-9bdb-3aa9e60c8507)



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-09-04T11:35:54Z,2023-09-06T11:08:10Z,,,master,cancel_LoadCustomDiffMergeTools,2,13,0,1,1,0,"gerhardol, mstv","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11193
11192,Better report test hangs,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->


## Proposed changes

Save the `HangReporter` [dgml reports](https://learn.microsoft.com/visualstudio/modeling/directed-graph-markup-language-dgml-reference) so that those can be opened in VS for further investigations.
![image](https://github.com/gitextensions/gitextensions/assets/4403806/3d2cd325-9201-48ab-b7f2-b7596db00273)
https://ci.appveyor.com/project/gitextensions/gitextensions/builds/47948910/artifacts

For example,
![image](https://github.com/gitextensions/gitextensions/assets/4403806/e89cc206-2ff7-4af1-957c-2dccacff1bff)


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-09-04T08:08:37Z,2023-09-04T10:33:02Z,2023-09-04T10:33:02Z,,master,better_report_test_hangs,2,39,1,1,0,1,mstv,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11192
11191,Goto current line when opening internal text editor,"https://github.com/gitextensions/gitextensions/pull/11183#issuecomment-1703916102

## Proposed changes

Goto currently selected line in diff/tree/commit editor, when opening the internal editor (e.g. with F4).

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/gitextensions/gitextensions/assets/6248932/b3528b42-d0e9-496e-84cf-70782a5b1d33)

### Before

![image](https://github.com/gitextensions/gitextensions/assets/6248932/ff3387d5-5a8c-4e2e-8cf9-0448ace02df9)

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/d1744dcb-e955-4266-af85-5a773816eb83)

## Test methodology <!-- How did you ensure quality? -->

test added

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-09-02T20:44:25Z,2023-09-05T20:21:54Z,2023-09-05T20:21:54Z,,master,feature/f4-goto-current-line,6,52,11,4,0,1,"RussKie, mstv, gerhardol, mstv, gerhardol, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11191
11187,Cancel pending GitStatusMonitor operations on form dispose,"I'm unable to run the LeftPanel-related tests (e.g., `RepoObjectTree_moving_first_up_and_last_down_does_nothing`) locally, they just lock up after the dialog is closed. My investigations suggest that there are outstanding async operations in `GitStatusMonitor`.

The sequence of event is something like the following:
- The form is closed disposing itself and `GitStatusMonitor` monitor (`FormBrowse.Dispose`).
- Despite of that `GitStatusMonitor` continues to execute `Update` operation, which continues making git calls and reschedules itself.

I was able to make the tests to pass to completion with the added early exits by checking the cancelled token and adding a `disposed` flag.",closed,2023-08-30T23:47:22Z,2023-09-15T03:18:16Z,2023-09-15T03:18:16Z,,master,GitStatusMonitor_disposal,2,26,4,1,0,2,"mstv, gerhardol, RussKie, RussKie, RussKie, RussKie, mstv, gerhardol, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11187
11186,Option - ask for confirmation on branch checkout,"Fixes #11116

## Proposed changes

- In Settings / Advanced / Confirmations / section Branches added `Checkout branch using left panel` checkbox (disabled by default). 
- By checking it, every time a user double-clicks on a branch on left panel, a message box will prompt asking to confirm if the user wants to checkout branch.

## Screenshots

![ConfirmationSettingsForm](https://github.com/gitextensions/gitextensions/assets/79657913/664207c2-f830-4601-9923-5cb983894ba4)
![BranchCheckoutConfirmationMessageBox5](https://github.com/gitextensions/gitextensions/assets/79657913/0e6841a4-3be3-4bcd-9356-6c808a9c8a72)


## Test methodology

- Manual with GE repo
- Tried closing and reopening the application. The selected option is saved after closing and reopening.

## Test environment(s)

- Git Extensions 33.33.33
- Build 6a64d95
- Git 2.30.0.windows.2 (recommended: 2.41.0 or later)
- Microsoft Windows NT 10.0.19045.0
- .NET 6.0.14
- DPI 96dpi (no scaling)

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-30T19:09:50Z,2023-09-10T13:41:04Z,2023-09-10T13:41:04Z,release-notes-worthy,master,feature/11116_confirmation_for_checkout_on_double-click,7,328,265,3,13,5,"RussKie, mstv, IlijaQ, gerhardol, mstv, gerhardol, mstv, IlijaQ, mstv, mstv, gerhardol, RussKie, mstv, IlijaQ, mstv, mstv, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11186
11184,Signed contributors.txt,":black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-29T22:18:17Z,2023-08-30T01:01:14Z,2023-08-30T01:01:14Z,,master,signature,1,1,0,1,1,0,"RussKie, RussKie","CHANGES_REQUESTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11184
11183,Allow configuring editor for local files,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #8769

## Proposed changes

In Settings, General, adds an option ""Local file editor"" which allows configuring an alternative editor for F4 action. If left blank, the current behavior is applied.

Only applies to actions associated with the F4 button. Does **not** apply to custom editors, e.g. `.gitignore`, `.git/config`.

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/gitextensions/gitextensions/assets/5435495/cdc8310e-a0bd-41c7-8259-b0fcc2a086f8)

### Before

When pressing F4 in diff list, file tree, or commit window, an built-in editor opens up.

### After

It is possible to configure a different editor. If left blank, the old behavior remains. If configured, the selected editor is executed instead.

## Test methodology <!-- How did you ensure quality? -->

- Configured an editor and tested
- Changed editor to blank, and tested that it runs the built-in editor
- Created a file with whitespaces in the name, and tested that it opens correctly
- Set editor to `""D:\Program Files\TortoiseHg\lib\kdiff3.exe"" C:\temp\test.txt` to test running a program that contains spaces in its filename, while also applying command line arguments.

## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.41.0.windows.1
- Windows 10.0.19045

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2023-08-29T21:51:06Z,,,:pen: status: cla signed,master,custom-local-file-editor,8,75,5,1,19,1,"RussKie, SlugFiller, SlugFiller, SlugFiller, SlugFiller, SlugFiller, RussKie, RussKie, SlugFiller, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11183
11182,Added password text box to remote console window,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Proposed changes

This adds a password input box below the console when running remote commands such as push/pull. This allows entering the password in a native control if one is required by the connection.

It is also usable for other input, like accepting server fingerprints, although the input is hidden regardless of the query.

## Screenshots <!-- Remove this section if PR does not change UI -->

![image](https://github.com/gitextensions/gitextensions/assets/5435495/fbfc1eaf-3d41-4cfd-b939-80f02dae6dad)

### Before

If using OpenSSH with the embedded console, direct typing and drag-and-drop may work, but the embedded console can corrupt input from auto-typers like KeePass. It also allows paste via Ctrl+V but not through right click/context menu.

If using OpenSSH with the emulated console, input isn't requested at all, and password input automatically fails.

If using Plink, password input automatically fails even in normal terminal. The only workaround is to use TortoisePlink which offers its own built-in password dialog.

### After

An additional password input box is available underneath the console. It is possible to type into it, auto-type into it, paste into it (with Ctrl+V or right click menu), or drag and drop text into it. Upon pressing Enter, the text is fed into the console (including line feed).

In OpenSSH with embedded console, SSH may not allow password input through a pipe, so extra measures are taken to ensure it uses `SSH_ASKPASS` instead.

Plink cannot be fixed. The only workaround is to use TortoisePlink.

## Test methodology <!-- How did you ensure quality? -->

- Made several pull requests to a password-protected SSH server, testing all possible combinations of SSH and console choice.

## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.41.0.windows.1
- Windows 10.0.19045

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2023-08-29T18:15:28Z,,,:pen: status: cla signed,master,ssh-console-improved-password-input,9,179,6,1,11,2,"RussKie, SlugFiller, mstv, SlugFiller, mstv, SlugFiller, mstv, SlugFiller, mstv, SlugFiller","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11182
11181,FormCleanupRepository: unset form AcceptButton,"that introduce some strange behavior
where it opens the choose directory dialog when ""Enter"" in pressed regardless from where the focus is.

Really strange if we are in one of the textareas because we can't create a new line...

## Test methodology <!-- How did you ensure quality? -->

- Manual

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 1758ddfcea7754b9828bac77b25fe51c94d5ee53 (Dirty)
- Git 2.40.0.windows.1 (recommended: 2.41.0 or later)
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.21
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.21 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.10 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```



## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-29T09:45:38Z,2023-08-29T13:32:16Z,2023-08-29T13:32:16Z,,master,form_cleanup_fix_enter_handling,1,0,1,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11181
11177,AppearanceSettingsPage: Improve keyboard navigation,"## Proposed changes

- Fixup TabIndex
- Add mnemonics to GroupBox 
- Fixup RowStyles

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/36601201/d9fb1eda-cd84-45a4-96e6-f61816db0297)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/f5c61d89-8890-41f3-875e-0ed251fcd3a1)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-27T14:43:54Z,2023-08-28T18:44:47Z,2023-08-28T18:44:47Z,,master,fix/appearancesettingspage,4,508,517,2,0,0,"gerhardol, mstv, RussKie, RussKie","APPROVED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11177
11175,Present git-diff errors in diffViewer,"Fixes #11164 (and probably a few more)

## Proposed changes

Present the error output from git-diff that fail in the diff viewer instead of starting NBug.

git-diff is expected to be Git or user error, no need to show NBug in this scenario.
The error is not suppressed, it can still be reported manually (this could still be a GE issue, as in my error insertion).

This is a hack, especially for the submodule status.

## Screenshots <!-- Remove this section if PR does not change UI -->

Inserted error by editing the code

### Before

NBug popup

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/f60d1f8a-05f7-4dd0-a3a5-40b974179650)

![image](https://github.com/gitextensions/gitextensions/assets/6248932/41a30a05-aee8-4843-963e-10e2f150e544)

## Test methodology <!-- How did you ensure quality? -->

manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-23T21:21:50Z,2023-08-25T20:00:44Z,2023-08-25T20:00:43Z,release-notes-worthy,master,feature/i11164-diff-exception,3,15,10,4,0,1,"RussKie, gerhardol, mstv, gerhardol, gerhardol, mstv, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11175
11174,Improve exception reporting,"Fixes #10543
Fixes #11165
Fixes https://github.com/gitextensions/gitextensions/pull/11074#issuecomment-1688928982

## Proposed changes

- Throw `OperationCanceledException` instead of plain `ExternalOperationException` on `Ctrl+C` exit code from external process in order to avoid (bug report) popup
- Fixup `ReportFailedToLoadAnAssembly`:
  - only if the `FileNotFoundException` message starts with the specific ""Could not load file or assembly""
  - remove lengthy version info from displayed message
  - handle `isTerminating`
  - simplify (like other usages)
  - use warning icon
- Add descriptions to `Ignore` / `Report` buttons and use warning icon in case of `ExternalOperationException`
- Disable `Send and quit` for `UserExternalOperationException` (The `Copy` button can be used.)
- Add exception text ""External program returned non-zero exit code."" in case of empty StandardError output

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/4403806/9ff0edde-ebd1-4cf0-bd9a-598ec977e087)

for other exceptions: direct invocation of BugReporter

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/09659b0a-1073-4af8-bafa-c0707844fe87)

![image](https://github.com/gitextensions/gitextensions/assets/36601201/721a60cc-ecc2-4379-90d8-8e04d0b9899e)   ![image](https://github.com/gitextensions/gitextensions/assets/36601201/a67bd1f6-bc34-4901-bb40-9dc8f41021a9)

![image](https://github.com/gitextensions/gitextensions/assets/36601201/a8075135-a2a3-499a-b466-1bd84d4462af)   ![image](https://github.com/gitextensions/gitextensions/assets/36601201/891815bd-729b-4a47-90bf-4485abafe41a)

![image](https://github.com/gitextensions/gitextensions/assets/36601201/69363472-7a85-48ca-872b-ea7b854546a2)   ![image](https://github.com/gitextensions/gitextensions/assets/36601201/71711dcf-ab09-4923-8135-794f58b7a7b4)

![image](https://github.com/gitextensions/gitextensions/assets/36601201/0ba6f7c8-289e-43f5-8a5f-2b69e049e839)   ![image](https://github.com/gitextensions/gitextensions/assets/36601201/5163cdc3-17af-4fcc-a10e-3c2a01d9fa66)

![image](https://github.com/gitextensions/gitextensions/assets/36601201/be2574cc-6f3c-4940-a8ca-9442d76fea71)   ![image](https://github.com/gitextensions/gitextensions/assets/36601201/827248e4-94ad-4ff7-b582-47b3d27922a0)

![image](https://github.com/gitextensions/gitextensions/assets/36601201/c84aafd9-5fde-46e7-9705-ed7512b23e7d)   ![image](https://github.com/gitextensions/gitextensions/assets/36601201/328fb020-1e53-4d2a-9228-f2272927c0d7)

### BEFORE

![image](https://github.com/gitextensions/gitextensions/assets/36601201/de200673-4415-4817-ab45-1da57ea404e3)   ![image](https://github.com/gitextensions/gitextensions/assets/36601201/01d526e2-6f8e-47e6-a418-ddde2740b028)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-23T21:09:09Z,2023-08-28T18:50:21Z,2023-08-28T18:50:21Z,,master,fix/report_exception,6,83,54,3,8,3,"gerhardol, RussKie, RussKie","COMMENTED, CHANGES_REQUESTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11174
11173,"Fix bad condition when handling ""Could not load file or assembly"" exception","
Followup of #11074

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes https://github.com/gitextensions/gitextensions/pull/11074#issuecomment-1688928982

## Proposed changes

- Special handling should be done **only** for FileNotFound Exception

## Test methodology <!-- How did you ensure quality? -->

- Manual (and done well now that the issue has been identified 😓 )

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 80b40b23725c9f82e588765bb37f31996c5997b6 (Dirty)
- Git 2.40.0.windows.1 (recommended: 2.41.0 or later)
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.16
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.16 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.5 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```


## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-23T08:53:17Z,2023-08-30T01:00:28Z,,,master,fix_assembly_failing_handling,1,15,13,1,2,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11173
11171,Present vertical tab as return in commit message,"Follow up to #11020

## Proposed changes

Shift-return adds vertical tab in the message which may be rendered as an unknown char instead of as s return.

#11020 presented vertical tab for messages newer than six months (body is not saved for older). The vertical tab was not presented as a return for older commits, fetched when needed.
(#11020 also handles \vas \n when entering text.)

Seen when working with #11170 

## Screenshots <!-- Remove this section if PR does not change UI -->

As I have not found a commit with \v older than six months, this is a dummy commit and a a change to not save the commit body for older commits.
\t were not shown in CommitInfo

https://github.com/gerhardol/gitextensions/pull/new/tmp/i11020-vertical-tab-return

![image](https://github.com/gitextensions/gitextensions/assets/6248932/707a9464-a2f9-4d68-aba7-c7bf9e0b159c)

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/907e1c9c-8b9e-4adb-9a44-1d23b0b51c7c)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-22T21:22:21Z,2023-08-25T20:00:02Z,2023-08-25T20:00:02Z,release-notes-worthy,master,feature/i11020-vertical-tab-return,2,10,18,3,0,0,"mstv, RussKie, gerhardol, gerhardol, mstv, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11171
11170,Revision reader tweak,"## Proposed changes

Avoid replace \v in email etc (not needed, performance).

Make revision reading slightly easier to read.

[IDE0008](https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0007-ide0008) in RevisionReader.cs

This originated as a review to see if it was possible to improve the performance, primarily to see if allocations could be eliminated, but it does not seem there is big difference.
Still, this is critical code when opening repos.

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-22T20:52:23Z,2023-08-25T19:59:14Z,2023-08-25T19:59:14Z,,master,feature/tweak-rev-reader,1,47,41,2,0,3,"mstv, RussKie, gerhardol, gerhardol, gerhardol, gerhardol, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11170
11169,Use the correct interface of JContainer for indexer,"Fixes regression from #11141: `System.ArgumentException: 'Accessed JArray values with invalid key value: ^1. Int32 array index expected.'`

## Proposed changes

- Use the correct interface `IList` implemented by `JContainer` in order to be able to use the new style of array indexing ""[^1]""

## Screenshots <!-- Remove this section if PR does not change UI -->

more than one build result in grid again

## Test methodology <!-- How did you ensure quality? -->

- manually

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-22T20:04:44Z,2023-08-23T19:47:38Z,2023-08-23T19:47:38Z,type: regression,master,fix/jarray_indexer,1,5,4,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11169
11167,Avoid and cope with exceptions on graph reload,"Fixes #11166
Might fix #10957

## Proposed changes

- `BackgroundUpdater.WrappedOperationAsync()`: Avoid getting stuck on exception by adding `try finally`
- `RevisionGraph.IsRowCacheDirty()`: Safer detection by adding an additional check; rename for clarity
- Call `RevisionGraph.CacheTo()` from single context only

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- extensive runs of existing tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-21T19:55:56Z,2023-08-24T21:11:22Z,2023-08-24T21:11:21Z,,master,fix/graph_reload,3,23,16,3,0,1,"gerhardol, mstv, RussKie","COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11167
11163,Allow skipping file paths in recursive submodule directory clean,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->
Fixes https://github.com/gitextensions/gitextensions/issues/11099 (#11102)

## Proposed changes

- Skip certain file paths when cleaning submodules recursively

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

<!-- TODO -->

### After

<!-- TODO -->

## Test methodology <!-- How did you ensure quality? -->

- Added appropriate unit tests
- Verified in test repo

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",open,2023-08-17T23:48:47Z,,,,master,skip-submodule-paths,3,38,13,3,0,1,"mstv, scottsumrall, mstv, RussKie, gerhardol, scottsumrall, gerhardol, scottsumrall, gerhardol, pmiossec, scottsumrall","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",True,https://api.github.com/repos/gitextensions/gitextensions/issues/11163
11162,LeftPanel: Avoid deadlocks (in tests),"Replaces #11155

## Proposed changes

- LeftPanel loading: Replace `_updateSemaphore` with new class `ExclusiveTaskRunner`
- Correctly `await` `Task` instances

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-17T17:05:32Z,2023-09-18T17:14:00Z,2023-09-18T17:14:00Z,,master,fix/leftpanel_deadlock,9,138,88,1,8,3,"RussKie, gerhardol, RussKie","COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11162
11161,Improved context menu detection when using keyboard,"Fixes [#11072](https://github.com/gitextensions/gitextensions/issues/11072)

## Proposed changes

- Pressing the menu key on the keyboard, will display the context menu with word-suggestions for the word where a caret is positioned (if the spelling is incorrect).

## Test methodology

- Manual with GE repo

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build 5fc8e6d
- Git 2.30.0.windows.2 (recommended: 2.41.0 or later)
- Microsoft Windows NT 10.0.19045.0
- .NET 6.0.14
- DPI 120dpi (125% scaling)

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-17T17:04:59Z,2023-08-24T07:28:46Z,2023-08-24T07:28:46Z,,master,feature/11072_context_menu_improvement,2,10,1,4,6,3,"mstv, RussKie, mstv, mstv, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11161
11160,EditNetSpell: Avoid ObjectDisposedException,"## Proposed changes

- Avoid `ObjectDisposedException` by binding a local variable instead of `this` in async lambda
- Remove unnecessary LINQ calls

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests
- manual

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-17T16:59:04Z,2023-08-21T17:23:53Z,2023-08-21T17:23:52Z,,master,fix/spelling_cancellation,1,9,7,1,0,0,"RussKie, gerhardol","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11160
11159,Avoid always caught exception for unset settings,"## Proposed changes

- Do not try to invoke a `TypeConverter` for `null` in `Settings.GetValue()`
 
## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-17T16:54:54Z,2023-08-20T09:20:21Z,2023-08-20T09:20:21Z,,master,fix/settings_exception,1,4,0,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11159
11158,Update cherrypick dialog,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->



## Proposed changes

- Inherit from `GitExtensionsDialog` and update the layout.
- Rename controls and few other chores.
- Add ""Abort"" button that breaks the ""cherry-pick many commits"" sequence. It's possible to break the sequence by closing the dialog with the ""X"" button, but it's rather unintuitive.
- Add ""Help"" button which opens https://git-extensions-documentation.readthedocs.io/en/main/modify_history.html#cherry-pick-commit.

## Screenshots <!-- Remove this section if PR does not change UI -->

 Before | After
 -- | --
![image](https://github.com/gitextensions/gitextensions/assets/4403806/2a3d55e4-7a67-412a-a930-5cb1ccb459e9) | ![image](https://github.com/gitextensions/gitextensions/assets/4403806/b4b5ddc8-317f-4c49-aa51-38eabc310b70)
![image](https://github.com/gitextensions/gitextensions/assets/4403806/d4b1d140-6931-427f-b416-91be88f04e28) | ![image](https://github.com/gitextensions/gitextensions/assets/4403806/25b42ab1-2bf8-4139-8535-09e8c9d3adc7)

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-16T07:49:17Z,2023-08-30T00:58:37Z,2023-08-30T00:58:37Z,,master,update_cherrypick_dialog,4,316,333,11,3,4,"gerhardol, mstv, RussKie, gerhardol, mstv","COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11158
11157,FormCommitTests: Disable AppSettings.ProvideAutocompletion,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11156

## Proposed changes

- Disable `AppSettings.ProvideAutocompletion` for `FormCommitTests`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-15T20:30:24Z,2023-08-15T22:21:19Z,2023-08-15T22:21:19Z,,master,fix/i11156_test_formcommit,1,5,1,1,0,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11157
11155,Left Panel: Fixup loading on early Dispose,"Should improve the stability of Left Panel tests and the loading of the stash tree

## Proposed changes

- Await `_updateSemaphore` with cancellation
- Ignore ObjectDisposedException on the final release of `_updateSemaphore`
- Dispose the Left Panel tree explicitly
- StashTree: Fixup too early release of `_updateSemaphore`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-15T20:06:12Z,2023-08-17T17:05:47Z,,:construction: status: experimental,master,fix/leftpanel_dispose,4,102,36,2,0,1,gerhardol,COMMENTED,True,https://api.github.com/repos/gitextensions/gitextensions/issues/11155
11152,Replace JTF.RunAsync() with exception-safe wrappers,"Follow-up to #11136 (and https://github.com/gitextensions/gitextensions/pull/11137#discussion_r1293391852)
inspired by d5b8f33de75f04606948ccd632259b9d388eb234

## Proposed changes

- Replace `JoinableTaskFactory.RunAsync()` with exception-safe wrappers `FileAndForget` or `InvokeAndForget`, respectively
- Replace and remove `GitUIExtensions.InvokeSync()` and `GitUIExtensions.InvokeAsync()`

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- exisiting tests


## Please do not squash merge ❗

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-14T22:58:00Z,2023-09-18T17:19:35Z,2023-09-18T17:19:35Z,,master,fix/jtf_runasync,30,229,297,2,2,0,"RussKie, RussKie, mstv, mstv, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11152
11149,IDE0057 simplify substring,"## Proposed changes

VS suggested change, simplifies displayed code using range operator.
(Should be no change to runtime execution.)

https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/style-rules/ide0057

Typical like

```
diff --git a/BugReporter/GitHubUrlBuilder.cs b/BugReporter/GitHubUrlBuilder.cs
index 8377b..5b8b8 100644
--- a/BugReporter/GitHubUrlBuilder.cs
+++ b/BugReporter/GitHubUrlBuilder.cs
@@ -46,7 +46,7 @@ public GitHubUrlBuilder(IErrorReportUrlBuilder errorReportUrlBuilder)
             if (subject.Length > 69)
             {
                 // if the subject is longer than 70 characters, trim it
-                subject = subject.Substring(0, 66) + ""..."";
+                subject = subject[..66] + ""..."";
             }
 
             string urlEncodedError = _errorReportUrlBuilder.Build(exception, exceptionInfo, environmentInfo, additionalInfo);
```

## Test methodology <!-- How did you ensure quality? -->

Refactoring

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-13T21:45:21Z,2023-08-15T00:27:06Z,2023-08-15T00:27:06Z,,master,feature/ide0057-simplify-substring,30,115,118,2,0,1,"RussKie, mstv, gerhardol, gerhardol, gerhardol, mstv","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11149
11146,Update GetEffectiveGitSetting to provide status and value,"Updates the method to return not only the value of the config but also the status based on the ExitCodes from git config documentation. This allows for deciding what to do if config key doesn't exist by the user of GetEffectiveGitSetting

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11145 

## Proposed changes

- Don't treat exit codes as failures when running git config command



## Test methodology <!-- How did you ensure quality? -->

- No exceptions in clean machine when I wrote code to retrieve gpg.program and commit.gpgSign and such settings

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2023-08-12T15:19:47Z,,,,master,bug/GetEffectiveGitSetting_Error,6,180,8,5,15,1,"gerhardol, vbjay, vbjay, vbjay, vbjay, mstv, vbjay, gerhardol, gerhardol, RussKie, vbjay, vbjay, vbjay, gerhardol, vbjay, gerhardol, vbjay, vbjay, RussKie, RussKie, vbjay, vbjay, vbjay, vbjay, vbjay, vbjay","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11146
11144,Prevent from breaking FormCommit designer,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11143

## Proposed changes

- Run VsIntegration only on runtime load



## Test environment(s) <!-- Remove any that don't apply -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-12T14:05:51Z,2023-08-13T00:50:57Z,2023-08-13T00:50:57Z,,master,bug/FileStatusList_VSIntegration,1,6,2,1,1,1,"mstv, gerhardol, RussKie","APPROVED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11144
11142,Dependency injection,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->



## Proposed changes

Introduce the concept of a service container, which gets initialised at the very start of the app. `IGitUICommands` implements `IServiceProvider`, which means the service container is available anywhere where an instance of GitUICommands is.
The service container is plumbed in, and MEF removed. However, nothing else has changed at this stage, and further enhancements will be coming as follow up work.


- Plumb service provider
- Refactor tests
- Partial revert of https://github.com/gitextensions/gitextensions/pull/9107

## Merge strategy

❗ Don't squash.

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-12T13:46:07Z,2023-09-28T07:50:28Z,2023-09-28T07:50:28Z,,master,dependency_injection,30,151,102,2,6,3,"pmiossec, mstv, gerhardol, RussKie, RussKie, RussKie, RussKie, RussKie, RussKie, mstv, mstv, mstv, mstv, RussKie, mstv, RussKie, RussKie, RussKie, mstv, RussKie, RussKie, mstv, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11142
11141,Replace more LINQ First/Last with indexer,"addendum to #11131

## Proposed changes

- Replace more LINQ `First()` / `Last()` with indexer

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-11T18:11:55Z,2023-08-12T07:14:42Z,2023-08-12T07:14:42Z,,master,feature/ca1826-last,10,11,11,1,1,0,"gerhardol, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11141
11138,Debug duplicate graph segments occurring in RevisionGraphMultiThreadingTests.ShouldReorderInTopoOrder,"## Proposed changes

- just for debugging: Print graph info in case of duplicate graph segments occuring in RevisionGraphMultiThreadingTests.ShouldReorderInTopoOrder
  seen in https://ci.appveyor.com/project/gitextensions/gitextensions/builds/47766875/tests

## Do not merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-10T22:55:15Z,2023-10-07T10:24:59Z,,:construction: status: experimental,master,debug/mt_shouldreorderintopoorder,3,184,10,3,0,0,,,True,https://api.github.com/repos/gitextensions/gitextensions/issues/11138
11137,Fixup / simplify use of JoinableTaskFactory.Run,"## Proposed changes

- `FormClone`: Fixup usage of `JoinableTaskFactory.Run()`: add missing `await`
- Replace `GitUIExtensions.InvokeSync()` and `Control.Invoke()` with `JoinableTaskFactory.Run()` and `SwitchToMainThreadAsync()`
- Simplify use of `JoinableTaskFactory.Run()`: omit `async` or lambda at all if applicable
- Replace superfluous `.Invoke()` with direct call

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-10T20:09:29Z,2023-08-28T18:53:07Z,2023-08-28T18:53:07Z,,master,fix/jtf_run,30,143,205,5,2,0,"gerhardol, mstv, mstv, gerhardol, RussKie, RussKie, gerhardol, mstv, gerhardol, gerhardol, RussKie, RussKie, sharwell, sharwell, sharwell, sharwell, sharwell, sharwell, sharwell, mstv, mstv, sharwell, sharwell, gerhardol, mstv, mstv, mstv, gerhardol, sharwell, sharwell","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11137
11136,Refactor TaskManager.FileAndForget,"## Proposed changes

- `TaskManager.FileAndForget()`: Remove argument `fileOnlyIf`, and replace its single usage
- Rename and refactor `TaskManager.FileAndForget()` to `RunAsyncAndForget()` in order to emphasize what it actually does,
  and save an unnecessary second call of `JoinableTaskFactory.RunAsync()` by `TaskManager.RunAsyncAndForget(asyncAction)`

In a follow-up PR, I am going to replace all `JTF.RunAsync()` and `FileAndForget()` with `RunAsyncAndForget()` (background thread) or `Control.InvokeAsync()` (UI thread), respectively.
Then I will sort the methods of `ThreadHelper` alphabetically.

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-10T19:44:55Z,2023-08-12T13:42:44Z,2023-08-12T13:42:44Z,,master,fix/file_and_forget,5,108,89,2,0,3,"gerhardol, mstv, mstv, mstv, RussKie, RussKie, gerhardol, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11136
11134,Hide build server status tab if not configured,"## Proposed changes

The WebBrowser control uses IE11 and may give a bad experience. Disable it unless explicitly enabled.

![image](https://github.com/gitextensions/gitextensions/assets/6248932/830c33e1-10d0-41cc-bb95-72986820d47a)

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-08T17:16:45Z,2023-08-10T05:58:00Z,2023-08-10T05:58:00Z,release-notes-worthy,master,feature/hide-tab-for-build-status-by-default,1,2,2,1,4,1,"mstv, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11134
11131,CA1826: Use property instead of Linq,"## Proposed changes

Use direct indexed access instead of LINQ access methods for efficiency.
https://learn.microsoft.com/en-us/dotnet/fundamentals/code-analysis/quality-rules/ca1826

A few of the accesses are done quite often, I doubt that this is measurable though.
(Compare to using foreach() instead of LINQ, which is often requested in code reviews.)
The Visual Studio suggestion is handled by this, so it is not ignored where it could be relevant.

This PR has two commits, review by commit:
* First are changes mostly automated, simply changing `.First()` tp `[0]`. This should be simple to review, if incorrect access before, same now.

```patch
diff --git a/GitUI/CommandsDialogs/BrowseDialog/FormBisect.cs b/GitUI/CommandsDialogs/BrowseDialog/FormBisect.cs
index 7b06a..66ddb 100644
--- a/GitUI/CommandsDialogs/BrowseDialog/FormBisect.cs
+++ b/GitUI/CommandsDialogs/BrowseDialog/FormBisect.cs
@@ -53,7 +53,7 @@ private void Start_Click(object sender, EventArgs e)
             {
                 if (MessageBox.Show(this, _bisectStart.Text, Text, MessageBoxButtons.YesNo, MessageBoxIcon.Question) == DialogResult.Yes)
                 {
-                    BisectRange(revisions.First().ObjectId, revisions.Last().ObjectId);
+                    BisectRange(revisions[0].ObjectId, revisions[^1].ObjectId);
                     Close();
                 }
             }
```

* Change `FirstOrDefault()` etc ti index operators, normally requires some rewriting.
`RevisionGridControl.GetSelectedRevisionOrDefault()` added as a helper function for a common case.

```patch
diff --git a/GitUI/CommandsDialogs/FormClone.cs b/GitUI/CommandsDialogs/FormClone.cs
index f368b..b971 100644
--- a/GitUI/CommandsDialogs/FormClone.cs
+++ b/GitUI/CommandsDialogs/FormClone.cs
@@ -122,7 +122,7 @@ protected override void OnRuntimeLoad(EventArgs e)
                         }
                         else
                         {
-                            currentBranchRemote = remotes.FirstOrDefault();
+                            currentBranchRemote = remotes.Count > 0 ? remotes[0] : null;
                         }
                     }
 
```

Related to #11130 as there may be merge conflicts (will likely want to merge this after).
(This adds some ^1 index accesses too).

## Test methodology <!-- How did you ensure quality? -->

Code review

## Merge strategy

Probably rebase merge (PR submitter must change the commit message for the last commit).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-07T11:02:06Z,2023-08-09T20:50:29Z,2023-08-09T20:50:29Z,,master,feature/ca1826-property-linq,21,126,109,2,1,1,"RussKie, mstv, gerhardol, mstv, gerhardol","APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11131
11130,IDE0056 index operator,"## Proposed changes

Use C# 8.0 from-end-operator for index access.
Shorter code, easier to review (when you know about the feature).

https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/member-access-operators#index-from-end-operator-

```patch
diff --git a/GitCommands/Config/ConfigSection.cs b/GitCommands/Config/ConfigSection.cs
index 91a0e..7ee77e 100644
--- a/GitCommands/Config/ConfigSection.cs
+++ b/GitCommands/Config/ConfigSection.cs
@@ -99,7 +99,7 @@ public string GetValue(string key, string defaultValue)
             {
                 if (list.Count > 0)
                 {
-                    return list[list.Count - 1];
+                    return list[^1];
                 }
             }
```

## Test methodology <!-- How did you ensure quality? -->

Code review, refactoring

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-07T10:40:47Z,2023-08-09T20:46:22Z,2023-08-09T20:46:22Z,,master,feature/index-operator,21,33,33,1,0,0,"RussKie, mstv","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11130
11126,Add winget,Replace Appget with Winget as first one is no longer maintained,closed,2023-08-04T18:44:24Z,2023-08-06T08:16:38Z,2023-08-06T08:16:38Z,,master,DavideDunne-patch-1,1,1,1,1,4,0,"pmiossec, RussKie","APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11126
11123,Fixup highlighted graph,"Fixes #11098
regressed in #10915

## Proposed changes

- Refactor: Simplify property `RevisionGraphColumnProvider.RevisionGraphDrawStyle`
- Avoid drawing the same graph curve twice only if unrelated branches are colored

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/36601201/857a18df-1ebe-4566-8167-a464c5a6f477)

### After

![image](https://github.com/gitextensions/gitextensions/assets/36601201/c386a9b5-28b8-4f1d-a318-cf7eb62463c2)

## Test methodology <!-- How did you ensure quality? -->

- manual

## Please do not squash merge

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-08-01T20:52:22Z,2023-08-08T18:03:13Z,2023-08-08T18:03:13Z,,master,fix/11098_highlighted_graph,3,19,36,2,0,1,"gerhardol, RussKie, gerhardol, mstv","COMMENTED, COMMENTED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11123
11121,Sign contributors.txt,"## Proposed changes

- Sign contributors.txt

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-08-01T00:52:07Z,2023-08-01T08:27:28Z,2023-08-01T08:27:28Z,,master,update_contributors/ilijaq,1,1,0,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11121
11120,#10992 noFastForward disabled in UI when Squash is checked,"Fixes [#10992](https://github.com/gitextensions/gitextensions/issues/10992)

## Proposed changes

- Selecting the `Always create a new merge commit` radio button in FormMergeBranch automatically disables the `Squash` checkbox.
- If the `Squash` checkbox is checked while disabling, it will be automatically unchecked.

## Test methodology

- Manual with GE repo

## Test environment(s)

- Git Extensions 33.33.33
- Build https://github.com/gitextensions/gitextensions/commit/f7e06a26f2959ac30f316ca576b9cc9640235c51
- Git 2.30.0.windows.2 (recommended: 2.41.0 or later)
- Microsoft Windows NT 10.0.19045.0
- .NET 6.0.14
- DPI 120dpi (125% scaling)

## Merge Strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-07-31T23:56:42Z,2023-08-04T17:22:56Z,2023-08-04T17:22:56Z,:pen: status: cla signed,master,feature/10992_squash_no-ff_UI,1,6,0,2,8,1,"RussKie, gerhardol, mstv","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11120
11119,Enable link detection by default without left-ctrl,"## Proposed changes

See https://github.com/gitextensions/conemu-inside/pull/34 for description and screenshot.


## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-07-30T19:21:33Z,2023-08-01T08:40:15Z,2023-08-01T08:40:15Z,,master,feature/clicklink-modifier,1,1,1,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11119
11114,Git 2.41.0,"## Proposed changes

Bump recommended version for next release
https://git-scm.com/downloads

## Test methodology <!-- How did you ensure quality? -->

Manual

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-07-26T20:11:11Z,2023-07-30T09:27:28Z,2023-07-30T09:27:28Z,,master,feature/git-2.41.0,1,1,1,1,0,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11114
11113,Use C# 9 pattern matching,"## Proposed changes

Simplify the code by using pattern matching in checks
This is mostly used in new code already (when @mstv reviews), the existing code should also use this.
(and maybe added to a style guide?)

A few changes not just affecting the checks, also handling CA1826 where it made more sense.

Regex to search in MSVS (can be improved?): `\b(\w+) is (not )?null (&&|\|\|) \1\.`
(a few potential changes ignored as I believe the pattern matching did not improve)

https://learn.microsoft.com/en-us/dotnet/csharp/language-reference/operators/patterns

Common simplification:

```patch
-            if (objectId is not null && objectId.IsArtificial)
+            if (objectId?.IsArtificial is true)
```

Another common example - I was not sure if to include it initially (`is not` is occasionally feeling backwards), but it is faster to review the reason to continue.
These checks were rewritten in some situations when not used for ""early exit"".

```patch
-            if (files is null || files.Count == 0)
+            if (files?.Count is not > 0)
```

Was not planning to do this, it is a side effect of reviewing #11108 and not having @mstv to review.

## Test methodology <!-- How did you ensure quality? -->

Code review
Highlighting in GE makes it easier to see the pattern.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-07-26T18:08:39Z,2023-08-07T10:08:02Z,2023-08-07T10:08:02Z,,master,feature/pattern-checks,30,75,109,2,8,2,"mstv, gerhardol, gerhardol, gerhardol, gerhardol, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11113
11112,ConEmu 230724,"## Proposed changes

Very minor changes, just keep updated
https://conemu.github.io/en/Whats_New.html

## Test methodology <!-- How did you ensure quality? -->

Manual use

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-07-26T09:42:52Z,2023-08-01T08:40:39Z,2023-08-01T08:40:39Z,,master,feature/conemu-230724,1,1,1,1,1,0,,,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11112
11109,#11108 Disabled hotkeys in scenarios where their usage was not intended,"Fixes [#11108](https://github.com/gitextensions/gitextensions/issues/11108)

## Proposed changes

- Creating a new branch using hotkeys `Ctrl + B` does not prompt `FromCreateBranch` while in bare repository, neither when artificial commit is selected.
- While selecting multiple commits, hotkey for creating new branch is disabled
- Rebasing current branch using hotkeys `Ctrl + Shift + E` is disabled while artificial commit is selected
- Creating a new tag using hotkeys `Ctrl + T` is disabled while artificial commit is selected

## Test methodology

- Manual with GE repo

## Test environment(s)

- Git Extensions 33.33.33
- Build https://github.com/gitextensions/gitextensions/commit/8b5eab531dcc849d00110df6f9797a096e68b500
- Git 2.30.0.windows.2 (recommended: 2.40.1 or later)
- Microsoft Windows NT 10.0.19045.0
- .NET 6.0.14
- DPI 120dpi (125% scaling)
",closed,2023-07-19T18:37:12Z,2023-08-01T08:34:53Z,2023-08-01T08:34:53Z,,master,bugfix/11108_disabled_menu_items_still_accessible_through_hotkeys,2,11,1,3,7,2,"gerhardol, gerhardol, gerhardol, RussKie","COMMENTED, APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11109
11105,Feature/gitlab integration,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11104

## Proposed changes

- Added build server integration for Gitlab pipelines 

## Screenshots

### Before

<!-- TODO -->

### After

![image](https://github.com/gitextensions/gitextensions/assets/128707156/dc81779e-5568-424a-a9bc-f3092394e4ae)

## Test methodology

- Unit tests for adapter logic are included
- Manual testing on private commercial solution on self-hosted Gitlab instance
- Manual testing on open-source repo: https://gitlab.com/wireshark/wireshark

## Test environment(s)

- GIT 2.33.0.windows.2
- Windows 10 22H2 19045.3208

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy
- To be decided later.

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-07-16T14:12:04Z,2023-09-20T12:37:49Z,2023-09-20T12:37:49Z,release-notes-worthy,master,feature/GitlabIntegration,22,1696,0,25,30,2,"gerhardol, gerhardol, gerhardol, RussKie, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11105
11102,Clean working directory skip paths,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11099 

## Proposed changes

- Allow users to exclude certain file paths when cleaning repository

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/78440487/f0612766-e203-47f5-b29f-221b4d32724b)

### After

![image](https://github.com/gitextensions/gitextensions/assets/78440487/4c5b1b65-99b6-470d-9158-f920bc79ac92)

## Test methodology <!-- How did you ensure quality? -->

- Manually tested in local repository
- Added and ran relevant unit tests for new functionality

## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.41.0 windows.2
- Windows 10

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-07-13T20:16:55Z,2023-08-14T01:30:11Z,2023-08-14T01:30:11Z,,master,clean-working-directory-skip-paths,6,315,143,5,13,4,"RussKie, scottsumrall, scottsumrall, scottsumrall, scottsumrall, scottsumrall, scottsumrall, scottsumrall, RussKie, RussKie, scottsumrall, scottsumrall, gerhardol, RussKie, pmiossec, pmiossec, gerhardol, RussKie, RussKie, mstv, gerhardol, gerhardol, scottsumrall, gerhardol","CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, CHANGES_REQUESTED, APPROVED, COMMENTED, CHANGES_REQUESTED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11102
11101,Feature/i11054 clean submodules,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->

Fixes #11054 

## Proposed changes

-  Add ""Clean submodules recursively"" option
- When checked, the command ""git submodule foreach --recursive git clean"" will be ran after ""git clean"", with the same arguments

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/10958775/cf6b41d9-34a2-4ace-b567-1febe0c674f9)

### After

![image](https://github.com/gitextensions/gitextensions/assets/10958775/d1296782-7a33-46ac-b917-00ba7556989f)

## Test methodology <!-- How did you ensure quality? -->

- Tested with a couple of local projects
- Added a unit test in the GitCommands unit tests

## Test environment(s) <!-- Remove any that don't apply -->

- GIT 2.41.0.windows.1
- Windows 10

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-07-13T15:01:10Z,2023-07-22T02:29:06Z,2023-07-22T02:29:06Z,,master,feature/i11054-clean-submodules,6,241,179,5,5,3,"RussKie, gerhardol, gerhardol, gerhardol, RussKie","APPROVED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11101
11090,Sign contributors.txt,"
## Proposed changes

- Sign contributors.txt


## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-07-05T13:16:45Z,2023-07-05T14:19:05Z,2023-07-05T14:19:05Z,,master,update-contributors-natravenhill,1,1,0,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11090
11089,GitFlow plugin exception if no head,"Fixes #11087

## Proposed changes

Avoid exception if no branch is checked out when initializing GitFlow.

## Test methodology <!-- How did you ensure quality? -->

Code review.

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-07-04T20:45:09Z,2023-07-07T21:48:34Z,2023-07-07T21:48:34Z,,master,feature/i11087-gitflow-head,1,13,5,1,0,0,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11089
11081,Fixup test discovery in Visual Studio,"Fixes #10986
https://developercommunity.visualstudio.com/t/Test-discovery-fails-with-MicrosoftVis/10372682?port=1025&fsid=708954cf-6ea4-4ac6-8735-dbf396aaba02&ref=native&refTime=1684952393560&refUserId=2a9334e3-6c08-64a6-9b8f-60d221b1cbab

## Proposed changes

- Mark `CommonTestUtils` as ""not a test project / container"" as proposed by Microsoft Support

## Test methodology <!-- How did you ensure quality? -->

- Open Test Explorer

## Test environment(s) <!-- Remove any that don't apply -->

- VS 17.6.4.
- Windows 10

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-06-28T20:13:09Z,2023-06-29T16:29:16Z,2023-06-29T16:29:16Z,,master,fix/not_a_test,1,10,0,1,1,2,"gerhardol, RussKie, MarcoRossignoli","APPROVED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11081
11078,Make all exceptions serializable,"Might fix some of the silent crashes (where exceptions do not make it to the `BugReportInvoker`, which creates serializable clones of the exceptions)

## Proposed changes

Apply the generally recommended template to all self-defined exception classes
- Add attribute `[Serializable]`
- Add protected deserialization ctor

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-06-27T19:46:52Z,2023-06-28T06:05:21Z,,,master,fix/exceptions,9,77,6,1,4,1,gerhardol,COMMENTED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11078
11074,"More user friendly handling for ""Could not load file or assembly"" exceptions","due to a Windows update ( See https://github.com/dotnet/runtime/issues/60144 )

Workaround for #10367, #10368, #10376, #10381, #10392, #10412, #10413, #10528, #10551, #10624, #10625, #10734, #10738, #10771, #10772, #10803, #10804, #10813, #10874, #10875, #10876, #11047, #11047, #11066 (and possibly others).


## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

User get the report tool popup
![image](https://github.com/gitextensions/gitextensions/assets/460196/ce18d98d-0d98-42a3-a9b5-0157461e943e)

### After

User get an error popup explaining the problem and encouraging them to restart instead of reporting the issue
![image](https://github.com/gitextensions/gitextensions/assets/4403806/9ff0edde-ebd1-4cf0-bd9a-598ec977e087)

## Test methodology <!-- How did you ensure quality? -->

- Manually (I have not been able to reproduce the exception so I throw the exception myself -- that does not 100% satisfy me but I hope it's enough--)

## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-06-26T09:36:51Z,2023-08-14T01:30:56Z,2023-08-14T01:30:56Z,,master,handle_assembly_loading_failed,3,113,0,3,18,5,"RussKie, mstv, mstv, mstv, RussKie, RussKie, pmiossec, RussKie, mstv, RussKie, mstv, mstv","COMMENTED, COMMENTED, COMMENTED, DISMISSED, COMMENTED, CHANGES_REQUESTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11074
11070,Filemode incorrect for Tamil translations,"## Proposed changes

Filemode changes have to actively suppressed for the changed files.

crlf fixes to match .gitattributes
(git add --normalize fixed this)

## Test methodology <!-- How did you ensure quality? -->

Build

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-06-23T21:48:46Z,2023-06-24T08:27:07Z,2023-06-24T08:27:07Z,,master,feature/filemode-fix,4,7,7,1,0,1,"RussKie, gerhardol","COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11070
11069,Change ShowMergeCommits to HideMergeCommits,"Follow up to #11065 

## Proposed changes

This better reflects the Git defaults and changes the only option ticked by default, that adds filter by selection.
Supposedly, this was a confusion in #11065

Change default for --simplify-merges to false to match defaults. Anyway, the value is not used by default as --full-history is false and --simplify-merges depends on --full-history.

--

This handles a setting with negation in the name, which can be confusing. The cange could be done in the user facing part only.
However, it is normally easier if the code and UI matches. This also remove the special handlig for the setting, negating by default.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/6248932/d2b563e2-85e7-45b6-9e3b-f9733330d6f3)

### After

![image](https://github.com/gitextensions/gitextensions/assets/6248932/36cfd23c-d225-445c-947a-2fd249d89844)

## Test methodology <!-- How did you ensure quality? -->

Tests updated

## Merge strategy

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-06-23T21:37:35Z,2023-07-08T18:19:04Z,2023-07-08T18:19:03Z,,master,feature/i11065-no-merge-commits,12,57,56,6,15,2,"mstv, mstv, RussKie","COMMENTED, APPROVED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11069
11068,Refactor settings,"## Proposed changes

Extract refactorings from draft PRs 
- Rename to `DistributedSettings`
- Remove unused property `ConfigFile.Local`
- Rename argument `allowCache`
- Name arguments
- Use explicit types
- Declare `SettingsSet`s as `readonly record struct`
- `SettingsPageHeader`: Rename arrow labels; remove `TabIndex`
- Add / synchronize `DebuggerDisplay` attributes

## Screenshots <!-- Remove this section if PR does not change UI -->

no change

## Test methodology <!-- How did you ensure quality? -->

- existing tests

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-06-21T21:00:05Z,2023-06-28T20:10:38Z,2023-06-28T20:10:38Z,,master,refactor_settings,30,369,403,6,0,0,"gerhardol, RussKie, mstv, mstv, mstv, mstv, RussKie, RussKie, mstv, mstv, mstv","APPROVED, APPROVED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11068
11067,Always set RevisionGrid RowCount on LoadingCompleted,"Fixes https://github.com/gitextensions/gitextensions/issues/11065#issuecomment-1599591171
Fixes https://github.com/gitextensions/gitextensions/pull/11046#issuecomment-1595355058

## Proposed changes

- Always set `RevisionGrid.RowCount` to `graph.Count` on `LoadingCompleted`

## Test methodology <!-- How did you ensure quality? -->

- manual (reproducible with a private repo)

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-06-21T17:42:00Z,2023-06-24T22:53:49Z,2023-06-24T22:53:49Z,,master,fix/rowcount,1,15,18,1,0,1,"gerhardol, gerhardol, RussKie, gerhardol, RussKie, RussKie, mstv, mstv, gerhardol, mstv, gerhardol, gerhardol","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11067
11062,Check output of every git command when exit code is different than 0,"to check if it's not due to security issue

Fixes #10816, Fixes #10975, Fixes #11027, Fixes #11039

Improvement on security issue over what has been already done in #10436

<!-- Please read CONTRIBUTING.md before submitting a pull request -->

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://github.com/gitextensions/gitextensions/assets/460196/92df4fa0-af29-4f9e-b9fc-647afecb74df)


### After

![image](https://github.com/gitextensions/gitextensions/assets/460196/443d3097-72e7-4f0a-b36b-61e867f1be42)


## Test methodology <!-- How did you ensure quality? -->

- Manual (For FormCommit and FormPull)

## Test environment(s) <!-- Remove any that don't apply -->

- Git Extensions 33.33.33
- Build bcbc3ddc814a2dd291a0ad200d240cb1f92198e7
- Git 2.40.0.windows.1 (recommended: 2.40.1 or later)
- Microsoft Windows NT 10.0.22621.0
- .NET 6.0.16
- DPI 96dpi (no scaling)
- Portable: False
- Microsoft.WindowsDesktop.App Versions

```
    Microsoft.WindowsDesktop.App 6.0.15 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 6.0.16 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
    Microsoft.WindowsDesktop.App 7.0.5 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App]
```

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-06-19T19:39:33Z,2023-06-21T23:42:15Z,2023-06-21T23:42:15Z,,master,better_fix_security_issue_detection,2,29,8,1,2,1,"mstv, pmiossec, RussKie, pmiossec, RussKie","APPROVED, COMMENTED, APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11062
11060,WIP Setup Windows Sandbox,"<!-- Please read CONTRIBUTING.md before submitting a pull request -->


## Proposed changes

Windows Sandbox: https://learn.microsoft.com/en-us/windows/security/application-security/application-isolation/windows-sandbox/windows-sandbox-overview


- Adds ability to setup and use Windows Sandbox to use current build output in a Windows Sandbox.
- On sandbox
    - Installs latest git, desktop-runtime, p4merge and other chocolatey packages and configures git with a known config that is configurable in script
    - Starts GE and allows user to perform whatever testing they want to perform
    - After user closes Git Extensions, config is gathered and a bundle of the current repo is created in TestResults folder to allow the cloning of that repo
   - add to script a way to auto launch [PSR ](https://support.microsoft.com/en-us/windows/record-steps-to-reproduce-a-problem-46582a9b-620f-2e36-00c9-04e25d784e47 ) to record what the user did in Git Extensions into TestResults folder

See sample output from  
[TestResults.zip](https://github.com/gitextensions/gitextensions/files/11860015/TestResults.zip)




<!-- TODO -->

## Test methodology <!-- How did you ensure quality? -->

- Ran script to verify sandbox was setup and usable.


## Test environment(s) <!-- Remove any that don't apply -->

- GIT <!-- Add version 2.11 or above -->
- Windows 10.0.22621.1848] <!-- Add version 7 SP1 or above -->

<!-- Mention language, UI scaling, or anything else that might be relevant -->

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

Merge commit. (PR submitter to rebase and squash before merges).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",open,2023-06-18T22:36:36Z,,,,master,feature/WIndowsSandbox,8,293,2,1,7,3,"mstv, vbjay, vbjay, vbjay, vbjay, vbjay, vbjay, mstv, RussKie, mstv, vbjay, mstv","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11060
11059,"Straighten multiple segments, including when there are commits","Fixes #5782
Improves on #9050
The essence of #10778 by @o-kloster including the very useful test utility

## Proposed changes

- As of now, segments in the revision graph are straightened only of they contain no intermediate commits (i.e. it's just one segment). This change allows straightening also when there are intermediate commits and/or merges.

## Screenshots <!-- Remove this section if PR does not change UI -->

### Before

![image](https://user-images.githubusercontent.com/73586834/221598819-d43df53d-f1aa-4c6c-b42f-c71f48f5eb40.png)

### After

![image](https://user-images.githubusercontent.com/73586834/221599442-47ed7f85-6e2a-4e98-b9be-b675f90b9775.png)

## Test methodology <!-- How did you ensure quality? -->

- Manual with GE repo
- Unit tests verify the graph layout

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-06-18T14:58:27Z,2023-08-13T07:41:41Z,2023-08-13T07:41:41Z,,master,feature/straighten_segments,11,405,17,1,3,2,"RussKie, mstv, mstv, RussKie, mstv, gerhardol, RussKie, mstv, RussKie","COMMENTED, COMMENTED, COMMENTED, COMMENTED, COMMENTED, APPROVED, APPROVED, COMMENTED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11059
11057,Register git hosters after repo opened,"Previously git hosters would only get registered once when the main form was created. This caused two issues:

1. ~The hosters would attempt to run git commands before the main form was fully setup and all its handlers wired. This led to situations where the hoster would fail (e.g., with git dubious ownership issue) but the main form's error handler was yet to be wired, thus crashing the app.~

2. The git hosters would not get updated whenever a new repo was opened.



----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).
",closed,2023-06-18T11:33:52Z,2023-06-21T13:43:13Z,2023-06-21T13:43:13Z,,master,register_hosters_after_repo_opened,2,15,2,3,6,0,"pmiossec, RussKie","APPROVED, COMMENTED",False,https://api.github.com/repos/gitextensions/gitextensions/issues/11057
11056,Update StyleCop.Analyzers,"Fixes lower-case request on `record struct` (https://github.com/stylecop/stylecop/issues/270)

## Proposed changes

- Update StyleCop.Analyzers to the most recent 1.2.0-beta.435
- Add the missing newline at end of files

## Screenshots <!-- Remove this section if PR does not change UI -->

N/A

## Test methodology <!-- How did you ensure quality? -->

- build

## Merge strategy

<!-- Change the following if the merge strategy should be changed:
- Squash merge (maintainer to decide merge message, PR submitter should cleanup commits/messages at PR approval).
- Rebase merge (PR submitter must change the commit message for the last commit).
- Merge commit. (PR submitter to rebase and squash before merges).
- To be decided later.
The maintainer may still request the contributor to squash and rebase, to make sure that merges and commit messages are clarified.
-->

I agree that the maintainer squash merge this PR (if the commit message is clear).

----

:black_nib: I contribute this code under [The Developer Certificate of Origin](../blob/master/contributors.txt).",closed,2023-06-18T10:40:05Z,2023-06-18T11:47:19Z,2023-06-18T11:47:19Z,area: toolchain,master,stylecop_update,30,30,30,1,0,1,RussKie,APPROVED,False,https://api.github.com/repos/gitextensions/gitextensions/issues/11056
